{"version":3,"file":"serviceworker.mjs","sources":["../../../appframework/bsbi-app-framework/dist/esm/index.js","../src/framework/NyphApp.js","../src/serviceworker/worker.js"],"sourcesContent":["// AppController\r\n// Abstract super-class for page controllers\r\n\r\nclass AppController {\r\n\r\n    /**\r\n     *\r\n     * @type {(null|string)}\r\n     */\r\n    route = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Page}\r\n     */\r\n    view;\r\n\r\n    title = 'untitled';\r\n\r\n    /**\r\n     *\r\n     * @type {number}\r\n     */\r\n    handle;\r\n\r\n    /**\r\n     *\r\n     * @type {App}\r\n     */\r\n    app;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    beforeRouteHandler = null;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    afterRouteHandler = null;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    leaveRouteHandler = null;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    alreadyRouteHandler = null;\r\n\r\n    static #handleIndex = 0;\r\n\r\n    static get nextHandle() {\r\n        return AppController.#handleIndex++;\r\n    }\r\n\r\n    /**\r\n     * called from App.initialise() to trigger late-stage initialisation\r\n     */\r\n    initialise() {\r\n        this.view.initialise();\r\n    }\r\n\r\n    /**\r\n     * registers the default route from this.route\r\n     * or alternatively is overridden in a child class\r\n     *\r\n     * @param {PatchedNavigo} router\r\n     */\r\n    registerRoute(router) {\r\n        if (null === this.route) {\r\n            throw new Error(`No route set for '${this.title}' controller.`);\r\n        }\r\n\r\n        console.log({route : this.route});\r\n\r\n        router.on(\r\n            this.route,\r\n            this.routeHandler.bind(this),\r\n            {\r\n                before : this.beforeRouteHandler ? this.beforeRouteHandler.bind(this) : null,\r\n                after : this.afterRouteHandler ? this.afterRouteHandler.bind(this) : null,\r\n                leave : this.leaveRouteHandler ? this.leaveRouteHandler.bind(this) : null,\r\n                already : this.alreadyRouteHandler ? this.alreadyRouteHandler.bind(this) : null\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} params\r\n     * @param {string} query\r\n     */\r\n    routeHandler(params, query) {\r\n\r\n    }\r\n}\n\n// StaticContentController\r\n\r\nclass StaticContentController extends AppController {\r\n    /**\r\n     * @type {string}\r\n     */\r\n    route;\r\n\r\n    /**\r\n     *\r\n     * @param {Page} view\r\n     * @param {string} route\r\n     */\r\n    constructor (view, route) {\r\n        super();\r\n\r\n        this.view = view;\r\n        this.route = route;\r\n\r\n        this.handle = AppController.nextHandle;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} params\r\n     * @param {string} query\r\n     */\r\n    routeHandler(params, query) {\r\n        // console.log(\"reached route handler for StaticContentController.js\");\r\n\r\n        this.app.currentControllerHandle = this.handle;\r\n        this.view.display();\r\n    }\r\n}\n\nclass NotFoundError extends Error {\r\n    constructor (message) {\r\n        super(message);\r\n    }\r\n}\n\nclass EventHarness {\r\n    /**\r\n     *\r\n     * @type {*[]}\r\n     */\r\n    #eventListeners = [];\r\n\r\n    static STOP_PROPAGATION = 'STOP_PROPAGATION';\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {Object} obj\r\n     * @param {Function} method\r\n     * @param {*=} constructionParam\r\n     * @deprecated use addListener instead\r\n     * @return {number} handle\r\n     */\r\n    bindListener (eventName, obj, method, constructionParam) {\r\n        this.#eventListeners = this.#eventListeners || [];\r\n\r\n        const handlerFunction =\r\n            function(context, eventName, invocationParam) {\r\n                return method.call(obj, context, eventName, invocationParam, constructionParam);\r\n            };\r\n\r\n        if (this.#eventListeners[eventName]) {\r\n            return (this.#eventListeners[eventName].push(handlerFunction))-1;\r\n        } else {\r\n            this.#eventListeners[eventName] = [handlerFunction];\r\n            return 0; // first element in array\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {Function} handler\r\n     * @param {*=} constructionParam\r\n     * @return {number} handle\r\n     */\r\n    addListener (eventName, handler, constructionParam = {}) {\r\n        this.#eventListeners = this.#eventListeners || [];\r\n\r\n        const handlerFunction =\r\n            function(context, eventName, invocationParam = {}) {\r\n                return handler({context, eventName, ...invocationParam, ...constructionParam});\r\n            };\r\n\r\n        if (this.#eventListeners[eventName]) {\r\n            return (this.#eventListeners[eventName].push(handlerFunction)) - 1;\r\n        } else {\r\n            this.#eventListeners[eventName] = [handlerFunction];\r\n            return 0; // first element in array\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {number} handle\r\n     * @returns undefined\r\n     */\r\n    removeListener(eventName, handle) {\r\n        if (this.#eventListeners[eventName] && this.#eventListeners[eventName][handle]) {\r\n            delete this.#eventListeners[eventName][handle];\r\n        } else {\r\n            console.log('trying to remove non-existent event handler, event = ' + eventName + ' handle = ' + handle);\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    /**\r\n     *\r\n     */\r\n    destructor() {\r\n        this.#eventListeners = null;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {Object=} param optional parameter to pass on to listener\r\n     * @return void\r\n     */\r\n    fireEvent (eventName, param) {\r\n        //console.log('fire event \"' + eventName + '\" called by '+this.fire_event.caller.caller+' invoked by '+this.fire_event.caller.caller.caller+' instigated by '+this.fire_event.caller.caller.caller.caller);\r\n\r\n        if (this.#eventListeners) {\r\n            for (let f in this.#eventListeners[eventName]) {\r\n                if (this.#eventListeners[eventName].hasOwnProperty(f)) {\r\n                    if (this.#eventListeners[eventName][f](this, eventName, arguments[1]) === EventHarness.STOP_PROPAGATION) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire(path) {\n\tthrow new Error('Could not dynamically require \"' + path + '\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');\n}\n\nvar localforage$1 = {exports: {}};\n\n/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n\n(function (module, exports) {\n\t(function(f){{module.exports=f();}})(function(){return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof commonjsRequire==\"function\"&&commonjsRequire;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r);}return n[o].exports}var i=typeof commonjsRequire==\"function\"&&commonjsRequire;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\t(function (global){\n\tvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\n\tvar scheduleDrain;\n\n\t{\n\t  if (Mutation) {\n\t    var called = 0;\n\t    var observer = new Mutation(nextTick);\n\t    var element = global.document.createTextNode('');\n\t    observer.observe(element, {\n\t      characterData: true\n\t    });\n\t    scheduleDrain = function () {\n\t      element.data = (called = ++called % 2);\n\t    };\n\t  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n\t    var channel = new global.MessageChannel();\n\t    channel.port1.onmessage = nextTick;\n\t    scheduleDrain = function () {\n\t      channel.port2.postMessage(0);\n\t    };\n\t  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n\t    scheduleDrain = function () {\n\n\t      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t      var scriptEl = global.document.createElement('script');\n\t      scriptEl.onreadystatechange = function () {\n\t        nextTick();\n\n\t        scriptEl.onreadystatechange = null;\n\t        scriptEl.parentNode.removeChild(scriptEl);\n\t        scriptEl = null;\n\t      };\n\t      global.document.documentElement.appendChild(scriptEl);\n\t    };\n\t  } else {\n\t    scheduleDrain = function () {\n\t      setTimeout(nextTick, 0);\n\t    };\n\t  }\n\t}\n\n\tvar draining;\n\tvar queue = [];\n\t//named nextTick for less confusing stack traces\n\tfunction nextTick() {\n\t  draining = true;\n\t  var i, oldQueue;\n\t  var len = queue.length;\n\t  while (len) {\n\t    oldQueue = queue;\n\t    queue = [];\n\t    i = -1;\n\t    while (++i < len) {\n\t      oldQueue[i]();\n\t    }\n\t    len = queue.length;\n\t  }\n\t  draining = false;\n\t}\n\n\tmodule.exports = immediate;\n\tfunction immediate(task) {\n\t  if (queue.push(task) === 1 && !draining) {\n\t    scheduleDrain();\n\t  }\n\t}\n\n\t}).call(this,typeof commonjsGlobal !== \"undefined\" ? commonjsGlobal : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n\t},{}],2:[function(_dereq_,module,exports){\n\tvar immediate = _dereq_(1);\n\n\t/* istanbul ignore next */\n\tfunction INTERNAL() {}\n\n\tvar handlers = {};\n\n\tvar REJECTED = ['REJECTED'];\n\tvar FULFILLED = ['FULFILLED'];\n\tvar PENDING = ['PENDING'];\n\n\tmodule.exports = Promise;\n\n\tfunction Promise(resolver) {\n\t  if (typeof resolver !== 'function') {\n\t    throw new TypeError('resolver must be a function');\n\t  }\n\t  this.state = PENDING;\n\t  this.queue = [];\n\t  this.outcome = void 0;\n\t  if (resolver !== INTERNAL) {\n\t    safelyResolveThenable(this, resolver);\n\t  }\n\t}\n\n\tPromise.prototype[\"catch\"] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n\t    typeof onRejected !== 'function' && this.state === REJECTED) {\n\t    return this;\n\t  }\n\t  var promise = new this.constructor(INTERNAL);\n\t  if (this.state !== PENDING) {\n\t    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n\t    unwrap(promise, resolver, this.outcome);\n\t  } else {\n\t    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n\t  }\n\n\t  return promise;\n\t};\n\tfunction QueueItem(promise, onFulfilled, onRejected) {\n\t  this.promise = promise;\n\t  if (typeof onFulfilled === 'function') {\n\t    this.onFulfilled = onFulfilled;\n\t    this.callFulfilled = this.otherCallFulfilled;\n\t  }\n\t  if (typeof onRejected === 'function') {\n\t    this.onRejected = onRejected;\n\t    this.callRejected = this.otherCallRejected;\n\t  }\n\t}\n\tQueueItem.prototype.callFulfilled = function (value) {\n\t  handlers.resolve(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallFulfilled = function (value) {\n\t  unwrap(this.promise, this.onFulfilled, value);\n\t};\n\tQueueItem.prototype.callRejected = function (value) {\n\t  handlers.reject(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallRejected = function (value) {\n\t  unwrap(this.promise, this.onRejected, value);\n\t};\n\n\tfunction unwrap(promise, func, value) {\n\t  immediate(function () {\n\t    var returnValue;\n\t    try {\n\t      returnValue = func(value);\n\t    } catch (e) {\n\t      return handlers.reject(promise, e);\n\t    }\n\t    if (returnValue === promise) {\n\t      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n\t    } else {\n\t      handlers.resolve(promise, returnValue);\n\t    }\n\t  });\n\t}\n\n\thandlers.resolve = function (self, value) {\n\t  var result = tryCatch(getThen, value);\n\t  if (result.status === 'error') {\n\t    return handlers.reject(self, result.value);\n\t  }\n\t  var thenable = result.value;\n\n\t  if (thenable) {\n\t    safelyResolveThenable(self, thenable);\n\t  } else {\n\t    self.state = FULFILLED;\n\t    self.outcome = value;\n\t    var i = -1;\n\t    var len = self.queue.length;\n\t    while (++i < len) {\n\t      self.queue[i].callFulfilled(value);\n\t    }\n\t  }\n\t  return self;\n\t};\n\thandlers.reject = function (self, error) {\n\t  self.state = REJECTED;\n\t  self.outcome = error;\n\t  var i = -1;\n\t  var len = self.queue.length;\n\t  while (++i < len) {\n\t    self.queue[i].callRejected(error);\n\t  }\n\t  return self;\n\t};\n\n\tfunction getThen(obj) {\n\t  // Make sure we only access the accessor once as required by the spec\n\t  var then = obj && obj.then;\n\t  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n\t    return function appyThen() {\n\t      then.apply(obj, arguments);\n\t    };\n\t  }\n\t}\n\n\tfunction safelyResolveThenable(self, thenable) {\n\t  // Either fulfill, reject or reject with error\n\t  var called = false;\n\t  function onError(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.reject(self, value);\n\t  }\n\n\t  function onSuccess(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.resolve(self, value);\n\t  }\n\n\t  function tryToUnwrap() {\n\t    thenable(onSuccess, onError);\n\t  }\n\n\t  var result = tryCatch(tryToUnwrap);\n\t  if (result.status === 'error') {\n\t    onError(result.value);\n\t  }\n\t}\n\n\tfunction tryCatch(func, value) {\n\t  var out = {};\n\t  try {\n\t    out.value = func(value);\n\t    out.status = 'success';\n\t  } catch (e) {\n\t    out.status = 'error';\n\t    out.value = e;\n\t  }\n\t  return out;\n\t}\n\n\tPromise.resolve = resolve;\n\tfunction resolve(value) {\n\t  if (value instanceof this) {\n\t    return value;\n\t  }\n\t  return handlers.resolve(new this(INTERNAL), value);\n\t}\n\n\tPromise.reject = reject;\n\tfunction reject(reason) {\n\t  var promise = new this(INTERNAL);\n\t  return handlers.reject(promise, reason);\n\t}\n\n\tPromise.all = all;\n\tfunction all(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\n\t  var values = new Array(len);\n\t  var resolved = 0;\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\n\t  while (++i < len) {\n\t    allResolver(iterable[i], i);\n\t  }\n\t  return promise;\n\t  function allResolver(value, i) {\n\t    self.resolve(value).then(resolveFromAll, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t    function resolveFromAll(outValue) {\n\t      values[i] = outValue;\n\t      if (++resolved === len && !called) {\n\t        called = true;\n\t        handlers.resolve(promise, values);\n\t      }\n\t    }\n\t  }\n\t}\n\n\tPromise.race = race;\n\tfunction race(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\n\t  while (++i < len) {\n\t    resolver(iterable[i]);\n\t  }\n\t  return promise;\n\t  function resolver(value) {\n\t    self.resolve(value).then(function (response) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.resolve(promise, response);\n\t      }\n\t    }, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t  }\n\t}\n\n\t},{\"1\":1}],3:[function(_dereq_,module,exports){\n\t(function (global){\n\tif (typeof global.Promise !== 'function') {\n\t  global.Promise = _dereq_(2);\n\t}\n\n\t}).call(this,typeof commonjsGlobal !== \"undefined\" ? commonjsGlobal : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n\t},{\"2\":2}],4:[function(_dereq_,module,exports){\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction getIDB() {\n\t    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n\t    try {\n\t        if (typeof indexedDB !== 'undefined') {\n\t            return indexedDB;\n\t        }\n\t        if (typeof webkitIndexedDB !== 'undefined') {\n\t            return webkitIndexedDB;\n\t        }\n\t        if (typeof mozIndexedDB !== 'undefined') {\n\t            return mozIndexedDB;\n\t        }\n\t        if (typeof OIndexedDB !== 'undefined') {\n\t            return OIndexedDB;\n\t        }\n\t        if (typeof msIndexedDB !== 'undefined') {\n\t            return msIndexedDB;\n\t        }\n\t    } catch (e) {\n\t        return;\n\t    }\n\t}\n\n\tvar idb = getIDB();\n\n\tfunction isIndexedDBValid() {\n\t    try {\n\t        // Initialize IndexedDB; fall back to vendor-prefixed versions\n\t        // if needed.\n\t        if (!idb || !idb.open) {\n\t            return false;\n\t        }\n\t        // We mimic PouchDB here;\n\t        //\n\t        // We test for openDatabase because IE Mobile identifies itself\n\t        // as Safari. Oh the lulz...\n\t        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n\t        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n\t        // Safari <10.1 does not meet our requirements for IDB support\n\t        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n\t        // Safari 10.1 shipped with fetch, we can use that to detect it.\n\t        // Note: this creates issues with `window.fetch` polyfills and\n\t        // overrides; see:\n\t        // https://github.com/localForage/localForage/issues/856\n\t        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n\t        // some outdated implementations of IDB that appear on Samsung\n\t        // and HTC Android devices <4.4 are missing IDBKeyRange\n\t        // See: https://github.com/mozilla/localForage/issues/128\n\t        // See: https://github.com/mozilla/localForage/issues/272\n\t        typeof IDBKeyRange !== 'undefined';\n\t    } catch (e) {\n\t        return false;\n\t    }\n\t}\n\n\t// Abstracts constructing a Blob object, so it also works in older\n\t// browsers that don't support the native Blob constructor. (i.e.\n\t// old QtWebKit versions, at least).\n\t// Abstracts constructing a Blob object, so it also works in older\n\t// browsers that don't support the native Blob constructor. (i.e.\n\t// old QtWebKit versions, at least).\n\tfunction createBlob(parts, properties) {\n\t    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n\t    parts = parts || [];\n\t    properties = properties || {};\n\t    try {\n\t        return new Blob(parts, properties);\n\t    } catch (e) {\n\t        if (e.name !== 'TypeError') {\n\t            throw e;\n\t        }\n\t        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n\t        var builder = new Builder();\n\t        for (var i = 0; i < parts.length; i += 1) {\n\t            builder.append(parts[i]);\n\t        }\n\t        return builder.getBlob(properties.type);\n\t    }\n\t}\n\n\t// This is CommonJS because lie is an external dependency, so Rollup\n\t// can just ignore it.\n\tif (typeof Promise === 'undefined') {\n\t    // In the \"nopromises\" build this will just throw if you don't have\n\t    // a global promise object, but it would throw anyway later.\n\t    _dereq_(3);\n\t}\n\tvar Promise$1 = Promise;\n\n\tfunction executeCallback(promise, callback) {\n\t    if (callback) {\n\t        promise.then(function (result) {\n\t            callback(null, result);\n\t        }, function (error) {\n\t            callback(error);\n\t        });\n\t    }\n\t}\n\n\tfunction executeTwoCallbacks(promise, callback, errorCallback) {\n\t    if (typeof callback === 'function') {\n\t        promise.then(callback);\n\t    }\n\n\t    if (typeof errorCallback === 'function') {\n\t        promise[\"catch\"](errorCallback);\n\t    }\n\t}\n\n\tfunction normalizeKey(key) {\n\t    // Cast the key to a string, as that's all we can set as a key.\n\t    if (typeof key !== 'string') {\n\t        console.warn(key + ' used as a key, but it is not a string.');\n\t        key = String(key);\n\t    }\n\n\t    return key;\n\t}\n\n\tfunction getCallback() {\n\t    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n\t        return arguments[arguments.length - 1];\n\t    }\n\t}\n\n\t// Some code originally from async_storage.js in\n\t// [Gaia](https://github.com/mozilla-b2g/gaia).\n\n\tvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n\tvar supportsBlobs = void 0;\n\tvar dbContexts = {};\n\tvar toString = Object.prototype.toString;\n\n\t// Transaction Modes\n\tvar READ_ONLY = 'readonly';\n\tvar READ_WRITE = 'readwrite';\n\n\t// Transform a binary string to an array buffer, because otherwise\n\t// weird stuff happens when you try to work with the binary string directly.\n\t// It is known.\n\t// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n\t// encode-decode-image-with-base64-breaks-image (2013-04-21)\n\tfunction _binStringToArrayBuffer(bin) {\n\t    var length = bin.length;\n\t    var buf = new ArrayBuffer(length);\n\t    var arr = new Uint8Array(buf);\n\t    for (var i = 0; i < length; i++) {\n\t        arr[i] = bin.charCodeAt(i);\n\t    }\n\t    return buf;\n\t}\n\n\t//\n\t// Blobs are not supported in all versions of IndexedDB, notably\n\t// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n\t//\n\t// Various other blob bugs exist in Chrome v37-42 (inclusive).\n\t// Detecting them is expensive and confusing to users, and Chrome 37-42\n\t// is at very low usage worldwide, so we do a hacky userAgent check instead.\n\t//\n\t// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n\t// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n\t// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n\t//\n\t// Code borrowed from PouchDB. See:\n\t// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n\t//\n\tfunction _checkBlobSupportWithoutCaching(idb) {\n\t    return new Promise$1(function (resolve) {\n\t        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n\t        var blob = createBlob(['']);\n\t        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n\t        txn.onabort = function (e) {\n\t            // If the transaction aborts now its due to not being able to\n\t            // write to the database, likely due to the disk being full\n\t            e.preventDefault();\n\t            e.stopPropagation();\n\t            resolve(false);\n\t        };\n\n\t        txn.oncomplete = function () {\n\t            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n\t            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n\t            // MS Edge pretends to be Chrome 42:\n\t            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\t            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n\t        };\n\t    })[\"catch\"](function () {\n\t        return false; // error, so assume unsupported\n\t    });\n\t}\n\n\tfunction _checkBlobSupport(idb) {\n\t    if (typeof supportsBlobs === 'boolean') {\n\t        return Promise$1.resolve(supportsBlobs);\n\t    }\n\t    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n\t        supportsBlobs = value;\n\t        return supportsBlobs;\n\t    });\n\t}\n\n\tfunction _deferReadiness(dbInfo) {\n\t    var dbContext = dbContexts[dbInfo.name];\n\n\t    // Create a deferred object representing the current database operation.\n\t    var deferredOperation = {};\n\n\t    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n\t        deferredOperation.resolve = resolve;\n\t        deferredOperation.reject = reject;\n\t    });\n\n\t    // Enqueue the deferred operation.\n\t    dbContext.deferredOperations.push(deferredOperation);\n\n\t    // Chain its promise to the database readiness.\n\t    if (!dbContext.dbReady) {\n\t        dbContext.dbReady = deferredOperation.promise;\n\t    } else {\n\t        dbContext.dbReady = dbContext.dbReady.then(function () {\n\t            return deferredOperation.promise;\n\t        });\n\t    }\n\t}\n\n\tfunction _advanceReadiness(dbInfo) {\n\t    var dbContext = dbContexts[dbInfo.name];\n\n\t    // Dequeue a deferred operation.\n\t    var deferredOperation = dbContext.deferredOperations.pop();\n\n\t    // Resolve its promise (which is part of the database readiness\n\t    // chain of promises).\n\t    if (deferredOperation) {\n\t        deferredOperation.resolve();\n\t        return deferredOperation.promise;\n\t    }\n\t}\n\n\tfunction _rejectReadiness(dbInfo, err) {\n\t    var dbContext = dbContexts[dbInfo.name];\n\n\t    // Dequeue a deferred operation.\n\t    var deferredOperation = dbContext.deferredOperations.pop();\n\n\t    // Reject its promise (which is part of the database readiness\n\t    // chain of promises).\n\t    if (deferredOperation) {\n\t        deferredOperation.reject(err);\n\t        return deferredOperation.promise;\n\t    }\n\t}\n\n\tfunction _getConnection(dbInfo, upgradeNeeded) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n\t        if (dbInfo.db) {\n\t            if (upgradeNeeded) {\n\t                _deferReadiness(dbInfo);\n\t                dbInfo.db.close();\n\t            } else {\n\t                return resolve(dbInfo.db);\n\t            }\n\t        }\n\n\t        var dbArgs = [dbInfo.name];\n\n\t        if (upgradeNeeded) {\n\t            dbArgs.push(dbInfo.version);\n\t        }\n\n\t        var openreq = idb.open.apply(idb, dbArgs);\n\n\t        if (upgradeNeeded) {\n\t            openreq.onupgradeneeded = function (e) {\n\t                var db = openreq.result;\n\t                try {\n\t                    db.createObjectStore(dbInfo.storeName);\n\t                    if (e.oldVersion <= 1) {\n\t                        // Added when support for blob shims was added\n\t                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\t                    }\n\t                } catch (ex) {\n\t                    if (ex.name === 'ConstraintError') {\n\t                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n\t                    } else {\n\t                        throw ex;\n\t                    }\n\t                }\n\t            };\n\t        }\n\n\t        openreq.onerror = function (e) {\n\t            e.preventDefault();\n\t            reject(openreq.error);\n\t        };\n\n\t        openreq.onsuccess = function () {\n\t            var db = openreq.result;\n\t            db.onversionchange = function (e) {\n\t                // Triggered when the database is modified (e.g. adding an objectStore) or\n\t                // deleted (even when initiated by other sessions in different tabs).\n\t                // Closing the connection here prevents those operations from being blocked.\n\t                // If the database is accessed again later by this instance, the connection\n\t                // will be reopened or the database recreated as needed.\n\t                e.target.close();\n\t            };\n\t            resolve(db);\n\t            _advanceReadiness(dbInfo);\n\t        };\n\t    });\n\t}\n\n\tfunction _getOriginalConnection(dbInfo) {\n\t    return _getConnection(dbInfo, false);\n\t}\n\n\tfunction _getUpgradedConnection(dbInfo) {\n\t    return _getConnection(dbInfo, true);\n\t}\n\n\tfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n\t    if (!dbInfo.db) {\n\t        return true;\n\t    }\n\n\t    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n\t    var isDowngrade = dbInfo.version < dbInfo.db.version;\n\t    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n\t    if (isDowngrade) {\n\t        // If the version is not the default one\n\t        // then warn for impossible downgrade.\n\t        if (dbInfo.version !== defaultVersion) {\n\t            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n\t        }\n\t        // Align the versions to prevent errors.\n\t        dbInfo.version = dbInfo.db.version;\n\t    }\n\n\t    if (isUpgrade || isNewStore) {\n\t        // If the store is new then increment the version (if needed).\n\t        // This will trigger an \"upgradeneeded\" event which is required\n\t        // for creating a store.\n\t        if (isNewStore) {\n\t            var incVersion = dbInfo.db.version + 1;\n\t            if (incVersion > dbInfo.version) {\n\t                dbInfo.version = incVersion;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    return false;\n\t}\n\n\t// encode a blob for indexeddb engines that don't support blobs\n\tfunction _encodeBlob(blob) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        var reader = new FileReader();\n\t        reader.onerror = reject;\n\t        reader.onloadend = function (e) {\n\t            var base64 = btoa(e.target.result || '');\n\t            resolve({\n\t                __local_forage_encoded_blob: true,\n\t                data: base64,\n\t                type: blob.type\n\t            });\n\t        };\n\t        reader.readAsBinaryString(blob);\n\t    });\n\t}\n\n\t// decode an encoded blob\n\tfunction _decodeBlob(encodedBlob) {\n\t    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n\t    return createBlob([arrayBuff], { type: encodedBlob.type });\n\t}\n\n\t// is this one of our fancy encoded blobs?\n\tfunction _isEncodedBlob(value) {\n\t    return value && value.__local_forage_encoded_blob;\n\t}\n\n\t// Specialize the default `ready()` function by making it dependent\n\t// on the current database operations. Thus, the driver will be actually\n\t// ready when it's been initialized (default) *and* there are no pending\n\t// operations on the database (initiated by some other instances).\n\tfunction _fullyReady(callback) {\n\t    var self = this;\n\n\t    var promise = self._initReady().then(function () {\n\t        var dbContext = dbContexts[self._dbInfo.name];\n\n\t        if (dbContext && dbContext.dbReady) {\n\t            return dbContext.dbReady;\n\t        }\n\t    });\n\n\t    executeTwoCallbacks(promise, callback, callback);\n\t    return promise;\n\t}\n\n\t// Try to establish a new db connection to replace the\n\t// current one which is broken (i.e. experiencing\n\t// InvalidStateError while creating a transaction).\n\tfunction _tryReconnect(dbInfo) {\n\t    _deferReadiness(dbInfo);\n\n\t    var dbContext = dbContexts[dbInfo.name];\n\t    var forages = dbContext.forages;\n\n\t    for (var i = 0; i < forages.length; i++) {\n\t        var forage = forages[i];\n\t        if (forage._dbInfo.db) {\n\t            forage._dbInfo.db.close();\n\t            forage._dbInfo.db = null;\n\t        }\n\t    }\n\t    dbInfo.db = null;\n\n\t    return _getOriginalConnection(dbInfo).then(function (db) {\n\t        dbInfo.db = db;\n\t        if (_isUpgradeNeeded(dbInfo)) {\n\t            // Reopen the database for upgrading.\n\t            return _getUpgradedConnection(dbInfo);\n\t        }\n\t        return db;\n\t    }).then(function (db) {\n\t        // store the latest db reference\n\t        // in case the db was upgraded\n\t        dbInfo.db = dbContext.db = db;\n\t        for (var i = 0; i < forages.length; i++) {\n\t            forages[i]._dbInfo.db = db;\n\t        }\n\t    })[\"catch\"](function (err) {\n\t        _rejectReadiness(dbInfo, err);\n\t        throw err;\n\t    });\n\t}\n\n\t// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n\t// so we have to do it with callbacks\n\tfunction createTransaction(dbInfo, mode, callback, retries) {\n\t    if (retries === undefined) {\n\t        retries = 1;\n\t    }\n\n\t    try {\n\t        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n\t        callback(null, tx);\n\t    } catch (err) {\n\t        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n\t            return Promise$1.resolve().then(function () {\n\t                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n\t                    // increase the db version, to create the new ObjectStore\n\t                    if (dbInfo.db) {\n\t                        dbInfo.version = dbInfo.db.version + 1;\n\t                    }\n\t                    // Reopen the database for upgrading.\n\t                    return _getUpgradedConnection(dbInfo);\n\t                }\n\t            }).then(function () {\n\t                return _tryReconnect(dbInfo).then(function () {\n\t                    createTransaction(dbInfo, mode, callback, retries - 1);\n\t                });\n\t            })[\"catch\"](callback);\n\t        }\n\n\t        callback(err);\n\t    }\n\t}\n\n\tfunction createDbContext() {\n\t    return {\n\t        // Running localForages sharing a database.\n\t        forages: [],\n\t        // Shared database.\n\t        db: null,\n\t        // Database readiness (promise).\n\t        dbReady: null,\n\t        // Deferred operations on the database.\n\t        deferredOperations: []\n\t    };\n\t}\n\n\t// Open the IndexedDB database (automatically creates one if one didn't\n\t// previously exist), using any options set in the config.\n\tfunction _initStorage(options) {\n\t    var self = this;\n\t    var dbInfo = {\n\t        db: null\n\t    };\n\n\t    if (options) {\n\t        for (var i in options) {\n\t            dbInfo[i] = options[i];\n\t        }\n\t    }\n\n\t    // Get the current context of the database;\n\t    var dbContext = dbContexts[dbInfo.name];\n\n\t    // ...or create a new context.\n\t    if (!dbContext) {\n\t        dbContext = createDbContext();\n\t        // Register the new context in the global container.\n\t        dbContexts[dbInfo.name] = dbContext;\n\t    }\n\n\t    // Register itself as a running localForage in the current context.\n\t    dbContext.forages.push(self);\n\n\t    // Replace the default `ready()` function with the specialized one.\n\t    if (!self._initReady) {\n\t        self._initReady = self.ready;\n\t        self.ready = _fullyReady;\n\t    }\n\n\t    // Create an array of initialization states of the related localForages.\n\t    var initPromises = [];\n\n\t    function ignoreErrors() {\n\t        // Don't handle errors here,\n\t        // just makes sure related localForages aren't pending.\n\t        return Promise$1.resolve();\n\t    }\n\n\t    for (var j = 0; j < dbContext.forages.length; j++) {\n\t        var forage = dbContext.forages[j];\n\t        if (forage !== self) {\n\t            // Don't wait for itself...\n\t            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n\t        }\n\t    }\n\n\t    // Take a snapshot of the related localForages.\n\t    var forages = dbContext.forages.slice(0);\n\n\t    // Initialize the connection process only when\n\t    // all the related localForages aren't pending.\n\t    return Promise$1.all(initPromises).then(function () {\n\t        dbInfo.db = dbContext.db;\n\t        // Get the connection or open a new one without upgrade.\n\t        return _getOriginalConnection(dbInfo);\n\t    }).then(function (db) {\n\t        dbInfo.db = db;\n\t        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n\t            // Reopen the database for upgrading.\n\t            return _getUpgradedConnection(dbInfo);\n\t        }\n\t        return db;\n\t    }).then(function (db) {\n\t        dbInfo.db = dbContext.db = db;\n\t        self._dbInfo = dbInfo;\n\t        // Share the final connection amongst related localForages.\n\t        for (var k = 0; k < forages.length; k++) {\n\t            var forage = forages[k];\n\t            if (forage !== self) {\n\t                // Self is already up-to-date.\n\t                forage._dbInfo.db = dbInfo.db;\n\t                forage._dbInfo.version = dbInfo.version;\n\t            }\n\t        }\n\t    });\n\t}\n\n\tfunction getItem(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.get(key);\n\n\t                    req.onsuccess = function () {\n\t                        var value = req.result;\n\t                        if (value === undefined) {\n\t                            value = null;\n\t                        }\n\t                        if (_isEncodedBlob(value)) {\n\t                            value = _decodeBlob(value);\n\t                        }\n\t                        resolve(value);\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Iterate over all items stored in database.\n\tfunction iterate(iterator, callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.openCursor();\n\t                    var iterationNumber = 1;\n\n\t                    req.onsuccess = function () {\n\t                        var cursor = req.result;\n\n\t                        if (cursor) {\n\t                            var value = cursor.value;\n\t                            if (_isEncodedBlob(value)) {\n\t                                value = _decodeBlob(value);\n\t                            }\n\t                            var result = iterator(value, cursor.key, iterationNumber++);\n\n\t                            // when the iterator callback returns any\n\t                            // (non-`undefined`) value, then we stop\n\t                            // the iteration immediately\n\t                            if (result !== void 0) {\n\t                                resolve(result);\n\t                            } else {\n\t                                cursor[\"continue\"]();\n\t                            }\n\t                        } else {\n\t                            resolve();\n\t                        }\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\n\t    return promise;\n\t}\n\n\tfunction setItem(key, value, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        var dbInfo;\n\t        self.ready().then(function () {\n\t            dbInfo = self._dbInfo;\n\t            if (toString.call(value) === '[object Blob]') {\n\t                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n\t                    if (blobSupport) {\n\t                        return value;\n\t                    }\n\t                    return _encodeBlob(value);\n\t                });\n\t            }\n\t            return value;\n\t        }).then(function (value) {\n\t            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n\t                    // The reason we don't _save_ null is because IE 10 does\n\t                    // not support saving the `null` type in IndexedDB. How\n\t                    // ironic, given the bug below!\n\t                    // See: https://github.com/mozilla/localForage/issues/161\n\t                    if (value === null) {\n\t                        value = undefined;\n\t                    }\n\n\t                    var req = store.put(value, key);\n\n\t                    transaction.oncomplete = function () {\n\t                        // Cast to undefined so the value passed to\n\t                        // callback/promise is the same as what one would get out\n\t                        // of `getItem()` later. This leads to some weirdness\n\t                        // (setItem('foo', undefined) will return `null`), but\n\t                        // it's not my fault localStorage is our baseline and that\n\t                        // it's weird.\n\t                        if (value === undefined) {\n\t                            value = null;\n\t                        }\n\n\t                        resolve(value);\n\t                    };\n\t                    transaction.onabort = transaction.onerror = function () {\n\t                        var err = req.error ? req.error : req.transaction.error;\n\t                        reject(err);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction removeItem(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    // We use a Grunt task to make this safe for IE and some\n\t                    // versions of Android (including those used by Cordova).\n\t                    // Normally IE won't like `.delete()` and will insist on\n\t                    // using `['delete']()`, but we have a build step that\n\t                    // fixes this for us now.\n\t                    var req = store[\"delete\"](key);\n\t                    transaction.oncomplete = function () {\n\t                        resolve();\n\t                    };\n\n\t                    transaction.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\n\t                    // The request will be also be aborted if we've exceeded our storage\n\t                    // space.\n\t                    transaction.onabort = function () {\n\t                        var err = req.error ? req.error : req.transaction.error;\n\t                        reject(err);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction clear(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.clear();\n\n\t                    transaction.oncomplete = function () {\n\t                        resolve();\n\t                    };\n\n\t                    transaction.onabort = transaction.onerror = function () {\n\t                        var err = req.error ? req.error : req.transaction.error;\n\t                        reject(err);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction length(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.count();\n\n\t                    req.onsuccess = function () {\n\t                        resolve(req.result);\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction key(n, callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        if (n < 0) {\n\t            resolve(null);\n\n\t            return;\n\t        }\n\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var advanced = false;\n\t                    var req = store.openKeyCursor();\n\n\t                    req.onsuccess = function () {\n\t                        var cursor = req.result;\n\t                        if (!cursor) {\n\t                            // this means there weren't enough keys\n\t                            resolve(null);\n\n\t                            return;\n\t                        }\n\n\t                        if (n === 0) {\n\t                            // We have the first key, return it if that's what they\n\t                            // wanted.\n\t                            resolve(cursor.key);\n\t                        } else {\n\t                            if (!advanced) {\n\t                                // Otherwise, ask the cursor to skip ahead n\n\t                                // records.\n\t                                advanced = true;\n\t                                cursor.advance(n);\n\t                            } else {\n\t                                // When we get here, we've got the nth key.\n\t                                resolve(cursor.key);\n\t                            }\n\t                        }\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction keys(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.openKeyCursor();\n\t                    var keys = [];\n\n\t                    req.onsuccess = function () {\n\t                        var cursor = req.result;\n\n\t                        if (!cursor) {\n\t                            resolve(keys);\n\t                            return;\n\t                        }\n\n\t                        keys.push(cursor.key);\n\t                        cursor[\"continue\"]();\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction dropInstance(options, callback) {\n\t    callback = getCallback.apply(this, arguments);\n\n\t    var currentConfig = this.config();\n\t    options = typeof options !== 'function' && options || {};\n\t    if (!options.name) {\n\t        options.name = options.name || currentConfig.name;\n\t        options.storeName = options.storeName || currentConfig.storeName;\n\t    }\n\n\t    var self = this;\n\t    var promise;\n\t    if (!options.name) {\n\t        promise = Promise$1.reject('Invalid arguments');\n\t    } else {\n\t        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n\t        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n\t            var dbContext = dbContexts[options.name];\n\t            var forages = dbContext.forages;\n\t            dbContext.db = db;\n\t            for (var i = 0; i < forages.length; i++) {\n\t                forages[i]._dbInfo.db = db;\n\t            }\n\t            return db;\n\t        });\n\n\t        if (!options.storeName) {\n\t            promise = dbPromise.then(function (db) {\n\t                _deferReadiness(options);\n\n\t                var dbContext = dbContexts[options.name];\n\t                var forages = dbContext.forages;\n\n\t                db.close();\n\t                for (var i = 0; i < forages.length; i++) {\n\t                    var forage = forages[i];\n\t                    forage._dbInfo.db = null;\n\t                }\n\n\t                var dropDBPromise = new Promise$1(function (resolve, reject) {\n\t                    var req = idb.deleteDatabase(options.name);\n\n\t                    req.onerror = function () {\n\t                        var db = req.result;\n\t                        if (db) {\n\t                            db.close();\n\t                        }\n\t                        reject(req.error);\n\t                    };\n\n\t                    req.onblocked = function () {\n\t                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n\t                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n\t                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n\t                    };\n\n\t                    req.onsuccess = function () {\n\t                        var db = req.result;\n\t                        if (db) {\n\t                            db.close();\n\t                        }\n\t                        resolve(db);\n\t                    };\n\t                });\n\n\t                return dropDBPromise.then(function (db) {\n\t                    dbContext.db = db;\n\t                    for (var i = 0; i < forages.length; i++) {\n\t                        var _forage = forages[i];\n\t                        _advanceReadiness(_forage._dbInfo);\n\t                    }\n\t                })[\"catch\"](function (err) {\n\t                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n\t                    throw err;\n\t                });\n\t            });\n\t        } else {\n\t            promise = dbPromise.then(function (db) {\n\t                if (!db.objectStoreNames.contains(options.storeName)) {\n\t                    return;\n\t                }\n\n\t                var newVersion = db.version + 1;\n\n\t                _deferReadiness(options);\n\n\t                var dbContext = dbContexts[options.name];\n\t                var forages = dbContext.forages;\n\n\t                db.close();\n\t                for (var i = 0; i < forages.length; i++) {\n\t                    var forage = forages[i];\n\t                    forage._dbInfo.db = null;\n\t                    forage._dbInfo.version = newVersion;\n\t                }\n\n\t                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n\t                    var req = idb.open(options.name, newVersion);\n\n\t                    req.onerror = function (err) {\n\t                        var db = req.result;\n\t                        db.close();\n\t                        reject(err);\n\t                    };\n\n\t                    req.onupgradeneeded = function () {\n\t                        var db = req.result;\n\t                        db.deleteObjectStore(options.storeName);\n\t                    };\n\n\t                    req.onsuccess = function () {\n\t                        var db = req.result;\n\t                        db.close();\n\t                        resolve(db);\n\t                    };\n\t                });\n\n\t                return dropObjectPromise.then(function (db) {\n\t                    dbContext.db = db;\n\t                    for (var j = 0; j < forages.length; j++) {\n\t                        var _forage2 = forages[j];\n\t                        _forage2._dbInfo.db = db;\n\t                        _advanceReadiness(_forage2._dbInfo);\n\t                    }\n\t                })[\"catch\"](function (err) {\n\t                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n\t                    throw err;\n\t                });\n\t            });\n\t        }\n\t    }\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tvar asyncStorage = {\n\t    _driver: 'asyncStorage',\n\t    _initStorage: _initStorage,\n\t    _support: isIndexedDBValid(),\n\t    iterate: iterate,\n\t    getItem: getItem,\n\t    setItem: setItem,\n\t    removeItem: removeItem,\n\t    clear: clear,\n\t    length: length,\n\t    key: key,\n\t    keys: keys,\n\t    dropInstance: dropInstance\n\t};\n\n\tfunction isWebSQLValid() {\n\t    return typeof openDatabase === 'function';\n\t}\n\n\t// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n\t// it to Base64, so this is how we store it to prevent very strange errors with less\n\t// verbose ways of binary <-> string data storage.\n\tvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\tvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\n\tvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\n\tvar SERIALIZED_MARKER = '__lfsc__:';\n\tvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n\t// OMG the serializations!\n\tvar TYPE_ARRAYBUFFER = 'arbf';\n\tvar TYPE_BLOB = 'blob';\n\tvar TYPE_INT8ARRAY = 'si08';\n\tvar TYPE_UINT8ARRAY = 'ui08';\n\tvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\n\tvar TYPE_INT16ARRAY = 'si16';\n\tvar TYPE_INT32ARRAY = 'si32';\n\tvar TYPE_UINT16ARRAY = 'ur16';\n\tvar TYPE_UINT32ARRAY = 'ui32';\n\tvar TYPE_FLOAT32ARRAY = 'fl32';\n\tvar TYPE_FLOAT64ARRAY = 'fl64';\n\tvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\n\tvar toString$1 = Object.prototype.toString;\n\n\tfunction stringToBuffer(serializedString) {\n\t    // Fill the string into a ArrayBuffer.\n\t    var bufferLength = serializedString.length * 0.75;\n\t    var len = serializedString.length;\n\t    var i;\n\t    var p = 0;\n\t    var encoded1, encoded2, encoded3, encoded4;\n\n\t    if (serializedString[serializedString.length - 1] === '=') {\n\t        bufferLength--;\n\t        if (serializedString[serializedString.length - 2] === '=') {\n\t            bufferLength--;\n\t        }\n\t    }\n\n\t    var buffer = new ArrayBuffer(bufferLength);\n\t    var bytes = new Uint8Array(buffer);\n\n\t    for (i = 0; i < len; i += 4) {\n\t        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n\t        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n\t        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n\t        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n\t        /*jslint bitwise: true */\n\t        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n\t        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n\t        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n\t    }\n\t    return buffer;\n\t}\n\n\t// Converts a buffer to a string to store, serialized, in the backend\n\t// storage library.\n\tfunction bufferToString(buffer) {\n\t    // base64-arraybuffer\n\t    var bytes = new Uint8Array(buffer);\n\t    var base64String = '';\n\t    var i;\n\n\t    for (i = 0; i < bytes.length; i += 3) {\n\t        /*jslint bitwise: true */\n\t        base64String += BASE_CHARS[bytes[i] >> 2];\n\t        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n\t        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n\t        base64String += BASE_CHARS[bytes[i + 2] & 63];\n\t    }\n\n\t    if (bytes.length % 3 === 2) {\n\t        base64String = base64String.substring(0, base64String.length - 1) + '=';\n\t    } else if (bytes.length % 3 === 1) {\n\t        base64String = base64String.substring(0, base64String.length - 2) + '==';\n\t    }\n\n\t    return base64String;\n\t}\n\n\t// Serialize a value, afterwards executing a callback (which usually\n\t// instructs the `setItem()` callback/promise to be executed). This is how\n\t// we store binary data with localStorage.\n\tfunction serialize(value, callback) {\n\t    var valueType = '';\n\t    if (value) {\n\t        valueType = toString$1.call(value);\n\t    }\n\n\t    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n\t    // checks fail when running the tests using casper.js...\n\t    //\n\t    // TODO: See why those tests fail and use a better solution.\n\t    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n\t        // Convert binary arrays to a string and prefix the string with\n\t        // a special marker.\n\t        var buffer;\n\t        var marker = SERIALIZED_MARKER;\n\n\t        if (value instanceof ArrayBuffer) {\n\t            buffer = value;\n\t            marker += TYPE_ARRAYBUFFER;\n\t        } else {\n\t            buffer = value.buffer;\n\n\t            if (valueType === '[object Int8Array]') {\n\t                marker += TYPE_INT8ARRAY;\n\t            } else if (valueType === '[object Uint8Array]') {\n\t                marker += TYPE_UINT8ARRAY;\n\t            } else if (valueType === '[object Uint8ClampedArray]') {\n\t                marker += TYPE_UINT8CLAMPEDARRAY;\n\t            } else if (valueType === '[object Int16Array]') {\n\t                marker += TYPE_INT16ARRAY;\n\t            } else if (valueType === '[object Uint16Array]') {\n\t                marker += TYPE_UINT16ARRAY;\n\t            } else if (valueType === '[object Int32Array]') {\n\t                marker += TYPE_INT32ARRAY;\n\t            } else if (valueType === '[object Uint32Array]') {\n\t                marker += TYPE_UINT32ARRAY;\n\t            } else if (valueType === '[object Float32Array]') {\n\t                marker += TYPE_FLOAT32ARRAY;\n\t            } else if (valueType === '[object Float64Array]') {\n\t                marker += TYPE_FLOAT64ARRAY;\n\t            } else {\n\t                callback(new Error('Failed to get type for BinaryArray'));\n\t            }\n\t        }\n\n\t        callback(marker + bufferToString(buffer));\n\t    } else if (valueType === '[object Blob]') {\n\t        // Conver the blob to a binaryArray and then to a string.\n\t        var fileReader = new FileReader();\n\n\t        fileReader.onload = function () {\n\t            // Backwards-compatible prefix for the blob type.\n\t            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n\t            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n\t        };\n\n\t        fileReader.readAsArrayBuffer(value);\n\t    } else {\n\t        try {\n\t            callback(JSON.stringify(value));\n\t        } catch (e) {\n\t            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n\t            callback(null, e);\n\t        }\n\t    }\n\t}\n\n\t// Deserialize data we've inserted into a value column/field. We place\n\t// special markers into our strings to mark them as encoded; this isn't\n\t// as nice as a meta field, but it's the only sane thing we can do whilst\n\t// keeping localStorage support intact.\n\t//\n\t// Oftentimes this will just deserialize JSON content, but if we have a\n\t// special marker (SERIALIZED_MARKER, defined above), we will extract\n\t// some kind of arraybuffer/binary data/typed array out of the string.\n\tfunction deserialize(value) {\n\t    // If we haven't marked this string as being specially serialized (i.e.\n\t    // something other than serialized JSON), we can just return it and be\n\t    // done with it.\n\t    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n\t        return JSON.parse(value);\n\t    }\n\n\t    // The following code deals with deserializing some kind of Blob or\n\t    // TypedArray. First we separate out the type of data we're dealing\n\t    // with from the data itself.\n\t    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n\t    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n\t    var blobType;\n\t    // Backwards-compatible blob type serialization strategy.\n\t    // DBs created with older versions of localForage will simply not have the blob type.\n\t    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n\t        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n\t        blobType = matcher[1];\n\t        serializedString = serializedString.substring(matcher[0].length);\n\t    }\n\t    var buffer = stringToBuffer(serializedString);\n\n\t    // Return the right type based on the code/type set during\n\t    // serialization.\n\t    switch (type) {\n\t        case TYPE_ARRAYBUFFER:\n\t            return buffer;\n\t        case TYPE_BLOB:\n\t            return createBlob([buffer], { type: blobType });\n\t        case TYPE_INT8ARRAY:\n\t            return new Int8Array(buffer);\n\t        case TYPE_UINT8ARRAY:\n\t            return new Uint8Array(buffer);\n\t        case TYPE_UINT8CLAMPEDARRAY:\n\t            return new Uint8ClampedArray(buffer);\n\t        case TYPE_INT16ARRAY:\n\t            return new Int16Array(buffer);\n\t        case TYPE_UINT16ARRAY:\n\t            return new Uint16Array(buffer);\n\t        case TYPE_INT32ARRAY:\n\t            return new Int32Array(buffer);\n\t        case TYPE_UINT32ARRAY:\n\t            return new Uint32Array(buffer);\n\t        case TYPE_FLOAT32ARRAY:\n\t            return new Float32Array(buffer);\n\t        case TYPE_FLOAT64ARRAY:\n\t            return new Float64Array(buffer);\n\t        default:\n\t            throw new Error('Unkown type: ' + type);\n\t    }\n\t}\n\n\tvar localforageSerializer = {\n\t    serialize: serialize,\n\t    deserialize: deserialize,\n\t    stringToBuffer: stringToBuffer,\n\t    bufferToString: bufferToString\n\t};\n\n\t/*\n\t * Includes code from:\n\t *\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\n\tfunction createDbTable(t, dbInfo, callback, errorCallback) {\n\t    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n\t}\n\n\t// Open the WebSQL database (automatically creates one if one didn't\n\t// previously exist), using any options set in the config.\n\tfunction _initStorage$1(options) {\n\t    var self = this;\n\t    var dbInfo = {\n\t        db: null\n\t    };\n\n\t    if (options) {\n\t        for (var i in options) {\n\t            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n\t        }\n\t    }\n\n\t    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n\t        // Open the database; the openDatabase API will automatically\n\t        // create it for us if it doesn't exist.\n\t        try {\n\t            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n\t        } catch (e) {\n\t            return reject(e);\n\t        }\n\n\t        // Create our key/value table if it doesn't exist.\n\t        dbInfo.db.transaction(function (t) {\n\t            createDbTable(t, dbInfo, function () {\n\t                self._dbInfo = dbInfo;\n\t                resolve();\n\t            }, function (t, error) {\n\t                reject(error);\n\t            });\n\t        }, reject);\n\t    });\n\n\t    dbInfo.serializer = localforageSerializer;\n\t    return dbInfoPromise;\n\t}\n\n\tfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n\t    t.executeSql(sqlStatement, args, callback, function (t, error) {\n\t        if (error.code === error.SYNTAX_ERR) {\n\t            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n\t                if (!results.rows.length) {\n\t                    // if the table is missing (was deleted)\n\t                    // re-create it table and retry\n\t                    createDbTable(t, dbInfo, function () {\n\t                        t.executeSql(sqlStatement, args, callback, errorCallback);\n\t                    }, errorCallback);\n\t                } else {\n\t                    errorCallback(t, error);\n\t                }\n\t            }, errorCallback);\n\t        } else {\n\t            errorCallback(t, error);\n\t        }\n\t    }, errorCallback);\n\t}\n\n\tfunction getItem$1(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n\t                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n\t                    // Check to see if this is serialized content we need to\n\t                    // unpack.\n\t                    if (result) {\n\t                        result = dbInfo.serializer.deserialize(result);\n\t                    }\n\n\t                    resolve(result);\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction iterate$1(iterator, callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n\t                    var rows = results.rows;\n\t                    var length = rows.length;\n\n\t                    for (var i = 0; i < length; i++) {\n\t                        var item = rows.item(i);\n\t                        var result = item.value;\n\n\t                        // Check to see if this is serialized content\n\t                        // we need to unpack.\n\t                        if (result) {\n\t                            result = dbInfo.serializer.deserialize(result);\n\t                        }\n\n\t                        result = iterator(result, item.key, i + 1);\n\n\t                        // void(0) prevents problems with redefinition\n\t                        // of `undefined`.\n\t                        if (result !== void 0) {\n\t                            resolve(result);\n\t                            return;\n\t                        }\n\t                    }\n\n\t                    resolve();\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction _setItem(key, value, callback, retriesLeft) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            // The localStorage API doesn't return undefined values in an\n\t            // \"expected\" way, so undefined is always cast to null in all\n\t            // drivers. See: https://github.com/mozilla/localForage/pull/42\n\t            if (value === undefined) {\n\t                value = null;\n\t            }\n\n\t            // Save the original value to pass to the callback.\n\t            var originalValue = value;\n\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.serializer.serialize(value, function (value, error) {\n\t                if (error) {\n\t                    reject(error);\n\t                } else {\n\t                    dbInfo.db.transaction(function (t) {\n\t                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n\t                            resolve(originalValue);\n\t                        }, function (t, error) {\n\t                            reject(error);\n\t                        });\n\t                    }, function (sqlError) {\n\t                        // The transaction failed; check\n\t                        // to see if it's a quota error.\n\t                        if (sqlError.code === sqlError.QUOTA_ERR) {\n\t                            // We reject the callback outright for now, but\n\t                            // it's worth trying to re-run the transaction.\n\t                            // Even if the user accepts the prompt to use\n\t                            // more storage on Safari, this error will\n\t                            // be called.\n\t                            //\n\t                            // Try to re-run the transaction.\n\t                            if (retriesLeft > 0) {\n\t                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n\t                                return;\n\t                            }\n\t                            reject(sqlError);\n\t                        }\n\t                    });\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction setItem$1(key, value, callback) {\n\t    return _setItem.apply(this, [key, value, callback, 1]);\n\t}\n\n\tfunction removeItem$1(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n\t                    resolve();\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Deletes every item in the table.\n\t// TODO: Find out if this resets the AUTO_INCREMENT number.\n\tfunction clear$1(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n\t                    resolve();\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Does a simple `COUNT(key)` to get the number of items stored in\n\t// localForage.\n\tfunction length$1(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                // Ahhh, SQL makes this one soooooo easy.\n\t                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n\t                    var result = results.rows.item(0).c;\n\t                    resolve(result);\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Return the key located at key index X; essentially gets the key from a\n\t// `WHERE id = ?`. This is the most efficient way I can think to implement\n\t// this rarely-used (in my experience) part of the API, but it can seem\n\t// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n\t// the ID of each key will change every time it's updated. Perhaps a stored\n\t// procedure for the `setItem()` SQL would solve this problem?\n\t// TODO: Don't change ID on `setItem()`.\n\tfunction key$1(n, callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n\t                    var result = results.rows.length ? results.rows.item(0).key : null;\n\t                    resolve(result);\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction keys$1(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n\t                    var keys = [];\n\n\t                    for (var i = 0; i < results.rows.length; i++) {\n\t                        keys.push(results.rows.item(i).key);\n\t                    }\n\n\t                    resolve(keys);\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// https://www.w3.org/TR/webdatabase/#databases\n\t// > There is no way to enumerate or delete the databases available for an origin from this API.\n\tfunction getAllStoreNames(db) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        db.transaction(function (t) {\n\t            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n\t                var storeNames = [];\n\n\t                for (var i = 0; i < results.rows.length; i++) {\n\t                    storeNames.push(results.rows.item(i).name);\n\t                }\n\n\t                resolve({\n\t                    db: db,\n\t                    storeNames: storeNames\n\t                });\n\t            }, function (t, error) {\n\t                reject(error);\n\t            });\n\t        }, function (sqlError) {\n\t            reject(sqlError);\n\t        });\n\t    });\n\t}\n\n\tfunction dropInstance$1(options, callback) {\n\t    callback = getCallback.apply(this, arguments);\n\n\t    var currentConfig = this.config();\n\t    options = typeof options !== 'function' && options || {};\n\t    if (!options.name) {\n\t        options.name = options.name || currentConfig.name;\n\t        options.storeName = options.storeName || currentConfig.storeName;\n\t    }\n\n\t    var self = this;\n\t    var promise;\n\t    if (!options.name) {\n\t        promise = Promise$1.reject('Invalid arguments');\n\t    } else {\n\t        promise = new Promise$1(function (resolve) {\n\t            var db;\n\t            if (options.name === currentConfig.name) {\n\t                // use the db reference of the current instance\n\t                db = self._dbInfo.db;\n\t            } else {\n\t                db = openDatabase(options.name, '', '', 0);\n\t            }\n\n\t            if (!options.storeName) {\n\t                // drop all database tables\n\t                resolve(getAllStoreNames(db));\n\t            } else {\n\t                resolve({\n\t                    db: db,\n\t                    storeNames: [options.storeName]\n\t                });\n\t            }\n\t        }).then(function (operationInfo) {\n\t            return new Promise$1(function (resolve, reject) {\n\t                operationInfo.db.transaction(function (t) {\n\t                    function dropTable(storeName) {\n\t                        return new Promise$1(function (resolve, reject) {\n\t                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n\t                                resolve();\n\t                            }, function (t, error) {\n\t                                reject(error);\n\t                            });\n\t                        });\n\t                    }\n\n\t                    var operations = [];\n\t                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n\t                        operations.push(dropTable(operationInfo.storeNames[i]));\n\t                    }\n\n\t                    Promise$1.all(operations).then(function () {\n\t                        resolve();\n\t                    })[\"catch\"](function (e) {\n\t                        reject(e);\n\t                    });\n\t                }, function (sqlError) {\n\t                    reject(sqlError);\n\t                });\n\t            });\n\t        });\n\t    }\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tvar webSQLStorage = {\n\t    _driver: 'webSQLStorage',\n\t    _initStorage: _initStorage$1,\n\t    _support: isWebSQLValid(),\n\t    iterate: iterate$1,\n\t    getItem: getItem$1,\n\t    setItem: setItem$1,\n\t    removeItem: removeItem$1,\n\t    clear: clear$1,\n\t    length: length$1,\n\t    key: key$1,\n\t    keys: keys$1,\n\t    dropInstance: dropInstance$1\n\t};\n\n\tfunction isLocalStorageValid() {\n\t    try {\n\t        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n\t        // in IE8 typeof localStorage.setItem === 'object'\n\t        !!localStorage.setItem;\n\t    } catch (e) {\n\t        return false;\n\t    }\n\t}\n\n\tfunction _getKeyPrefix(options, defaultConfig) {\n\t    var keyPrefix = options.name + '/';\n\n\t    if (options.storeName !== defaultConfig.storeName) {\n\t        keyPrefix += options.storeName + '/';\n\t    }\n\t    return keyPrefix;\n\t}\n\n\t// Check if localStorage throws when saving an item\n\tfunction checkIfLocalStorageThrows() {\n\t    var localStorageTestKey = '_localforage_support_test';\n\n\t    try {\n\t        localStorage.setItem(localStorageTestKey, true);\n\t        localStorage.removeItem(localStorageTestKey);\n\n\t        return false;\n\t    } catch (e) {\n\t        return true;\n\t    }\n\t}\n\n\t// Check if localStorage is usable and allows to save an item\n\t// This method checks if localStorage is usable in Safari Private Browsing\n\t// mode, or in any other case where the available quota for localStorage\n\t// is 0 and there wasn't any saved items yet.\n\tfunction _isLocalStorageUsable() {\n\t    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n\t}\n\n\t// Config the localStorage backend, using options set in the config.\n\tfunction _initStorage$2(options) {\n\t    var self = this;\n\t    var dbInfo = {};\n\t    if (options) {\n\t        for (var i in options) {\n\t            dbInfo[i] = options[i];\n\t        }\n\t    }\n\n\t    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n\t    if (!_isLocalStorageUsable()) {\n\t        return Promise$1.reject();\n\t    }\n\n\t    self._dbInfo = dbInfo;\n\t    dbInfo.serializer = localforageSerializer;\n\n\t    return Promise$1.resolve();\n\t}\n\n\t// Remove all keys from the datastore, effectively destroying all data in\n\t// the app's key/value store!\n\tfunction clear$2(callback) {\n\t    var self = this;\n\t    var promise = self.ready().then(function () {\n\t        var keyPrefix = self._dbInfo.keyPrefix;\n\n\t        for (var i = localStorage.length - 1; i >= 0; i--) {\n\t            var key = localStorage.key(i);\n\n\t            if (key.indexOf(keyPrefix) === 0) {\n\t                localStorage.removeItem(key);\n\t            }\n\t        }\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Retrieve an item from the store. Unlike the original async_storage\n\t// library in Gaia, we don't modify return values at all. If a key's value\n\t// is `undefined`, we pass that value to the callback function.\n\tfunction getItem$2(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n\t        // If a result was found, parse it from the serialized\n\t        // string into a JS object. If result isn't truthy, the key\n\t        // is likely undefined and we'll pass it straight to the\n\t        // callback.\n\t        if (result) {\n\t            result = dbInfo.serializer.deserialize(result);\n\t        }\n\n\t        return result;\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Iterate over all items in the store.\n\tfunction iterate$2(iterator, callback) {\n\t    var self = this;\n\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        var keyPrefix = dbInfo.keyPrefix;\n\t        var keyPrefixLength = keyPrefix.length;\n\t        var length = localStorage.length;\n\n\t        // We use a dedicated iterator instead of the `i` variable below\n\t        // so other keys we fetch in localStorage aren't counted in\n\t        // the `iterationNumber` argument passed to the `iterate()`\n\t        // callback.\n\t        //\n\t        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n\t        var iterationNumber = 1;\n\n\t        for (var i = 0; i < length; i++) {\n\t            var key = localStorage.key(i);\n\t            if (key.indexOf(keyPrefix) !== 0) {\n\t                continue;\n\t            }\n\t            var value = localStorage.getItem(key);\n\n\t            // If a result was found, parse it from the serialized\n\t            // string into a JS object. If result isn't truthy, the\n\t            // key is likely undefined and we'll pass it straight\n\t            // to the iterator.\n\t            if (value) {\n\t                value = dbInfo.serializer.deserialize(value);\n\t            }\n\n\t            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n\t            if (value !== void 0) {\n\t                return value;\n\t            }\n\t        }\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Same as localStorage's key() method, except takes a callback.\n\tfunction key$2(n, callback) {\n\t    var self = this;\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        var result;\n\t        try {\n\t            result = localStorage.key(n);\n\t        } catch (error) {\n\t            result = null;\n\t        }\n\n\t        // Remove the prefix from the key, if a key is found.\n\t        if (result) {\n\t            result = result.substring(dbInfo.keyPrefix.length);\n\t        }\n\n\t        return result;\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction keys$2(callback) {\n\t    var self = this;\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        var length = localStorage.length;\n\t        var keys = [];\n\n\t        for (var i = 0; i < length; i++) {\n\t            var itemKey = localStorage.key(i);\n\t            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n\t                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n\t            }\n\t        }\n\n\t        return keys;\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Supply the number of keys in the datastore to the callback function.\n\tfunction length$2(callback) {\n\t    var self = this;\n\t    var promise = self.keys().then(function (keys) {\n\t        return keys.length;\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Remove an item from the store, nice and simple.\n\tfunction removeItem$2(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        localStorage.removeItem(dbInfo.keyPrefix + key);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Set a key's value and run an optional callback once the value is set.\n\t// Unlike Gaia's implementation, the callback function is passed the value,\n\t// in case you want to operate on that value only after you're sure it\n\t// saved, or something like that.\n\tfunction setItem$2(key, value, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = self.ready().then(function () {\n\t        // Convert undefined values to null.\n\t        // https://github.com/mozilla/localForage/pull/42\n\t        if (value === undefined) {\n\t            value = null;\n\t        }\n\n\t        // Save the original value to pass to the callback.\n\t        var originalValue = value;\n\n\t        return new Promise$1(function (resolve, reject) {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.serializer.serialize(value, function (value, error) {\n\t                if (error) {\n\t                    reject(error);\n\t                } else {\n\t                    try {\n\t                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n\t                        resolve(originalValue);\n\t                    } catch (e) {\n\t                        // localStorage capacity exceeded.\n\t                        // TODO: Make this a specific error/event.\n\t                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n\t                            reject(e);\n\t                        }\n\t                        reject(e);\n\t                    }\n\t                }\n\t            });\n\t        });\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction dropInstance$2(options, callback) {\n\t    callback = getCallback.apply(this, arguments);\n\n\t    options = typeof options !== 'function' && options || {};\n\t    if (!options.name) {\n\t        var currentConfig = this.config();\n\t        options.name = options.name || currentConfig.name;\n\t        options.storeName = options.storeName || currentConfig.storeName;\n\t    }\n\n\t    var self = this;\n\t    var promise;\n\t    if (!options.name) {\n\t        promise = Promise$1.reject('Invalid arguments');\n\t    } else {\n\t        promise = new Promise$1(function (resolve) {\n\t            if (!options.storeName) {\n\t                resolve(options.name + '/');\n\t            } else {\n\t                resolve(_getKeyPrefix(options, self._defaultConfig));\n\t            }\n\t        }).then(function (keyPrefix) {\n\t            for (var i = localStorage.length - 1; i >= 0; i--) {\n\t                var key = localStorage.key(i);\n\n\t                if (key.indexOf(keyPrefix) === 0) {\n\t                    localStorage.removeItem(key);\n\t                }\n\t            }\n\t        });\n\t    }\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tvar localStorageWrapper = {\n\t    _driver: 'localStorageWrapper',\n\t    _initStorage: _initStorage$2,\n\t    _support: isLocalStorageValid(),\n\t    iterate: iterate$2,\n\t    getItem: getItem$2,\n\t    setItem: setItem$2,\n\t    removeItem: removeItem$2,\n\t    clear: clear$2,\n\t    length: length$2,\n\t    key: key$2,\n\t    keys: keys$2,\n\t    dropInstance: dropInstance$2\n\t};\n\n\tvar sameValue = function sameValue(x, y) {\n\t    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n\t};\n\n\tvar includes = function includes(array, searchElement) {\n\t    var len = array.length;\n\t    var i = 0;\n\t    while (i < len) {\n\t        if (sameValue(array[i], searchElement)) {\n\t            return true;\n\t        }\n\t        i++;\n\t    }\n\n\t    return false;\n\t};\n\n\tvar isArray = Array.isArray || function (arg) {\n\t    return Object.prototype.toString.call(arg) === '[object Array]';\n\t};\n\n\t// Drivers are stored here when `defineDriver()` is called.\n\t// They are shared across all instances of localForage.\n\tvar DefinedDrivers = {};\n\n\tvar DriverSupport = {};\n\n\tvar DefaultDrivers = {\n\t    INDEXEDDB: asyncStorage,\n\t    WEBSQL: webSQLStorage,\n\t    LOCALSTORAGE: localStorageWrapper\n\t};\n\n\tvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\n\tvar OptionalDriverMethods = ['dropInstance'];\n\n\tvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\n\tvar DefaultConfig = {\n\t    description: '',\n\t    driver: DefaultDriverOrder.slice(),\n\t    name: 'localforage',\n\t    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n\t    // we can use without a prompt.\n\t    size: 4980736,\n\t    storeName: 'keyvaluepairs',\n\t    version: 1.0\n\t};\n\n\tfunction callWhenReady(localForageInstance, libraryMethod) {\n\t    localForageInstance[libraryMethod] = function () {\n\t        var _args = arguments;\n\t        return localForageInstance.ready().then(function () {\n\t            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n\t        });\n\t    };\n\t}\n\n\tfunction extend() {\n\t    for (var i = 1; i < arguments.length; i++) {\n\t        var arg = arguments[i];\n\n\t        if (arg) {\n\t            for (var _key in arg) {\n\t                if (arg.hasOwnProperty(_key)) {\n\t                    if (isArray(arg[_key])) {\n\t                        arguments[0][_key] = arg[_key].slice();\n\t                    } else {\n\t                        arguments[0][_key] = arg[_key];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\n\t    return arguments[0];\n\t}\n\n\tvar LocalForage = function () {\n\t    function LocalForage(options) {\n\t        _classCallCheck(this, LocalForage);\n\n\t        for (var driverTypeKey in DefaultDrivers) {\n\t            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n\t                var driver = DefaultDrivers[driverTypeKey];\n\t                var driverName = driver._driver;\n\t                this[driverTypeKey] = driverName;\n\n\t                if (!DefinedDrivers[driverName]) {\n\t                    // we don't need to wait for the promise,\n\t                    // since the default drivers can be defined\n\t                    // in a blocking manner\n\t                    this.defineDriver(driver);\n\t                }\n\t            }\n\t        }\n\n\t        this._defaultConfig = extend({}, DefaultConfig);\n\t        this._config = extend({}, this._defaultConfig, options);\n\t        this._driverSet = null;\n\t        this._initDriver = null;\n\t        this._ready = false;\n\t        this._dbInfo = null;\n\n\t        this._wrapLibraryMethodsWithReady();\n\t        this.setDriver(this._config.driver)[\"catch\"](function () {});\n\t    }\n\n\t    // Set any config values for localForage; can be called anytime before\n\t    // the first API call (e.g. `getItem`, `setItem`).\n\t    // We loop through options so we don't overwrite existing config\n\t    // values.\n\n\n\t    LocalForage.prototype.config = function config(options) {\n\t        // If the options argument is an object, we use it to set values.\n\t        // Otherwise, we return either a specified config value or all\n\t        // config values.\n\t        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n\t            // If localforage is ready and fully initialized, we can't set\n\t            // any new configuration values. Instead, we return an error.\n\t            if (this._ready) {\n\t                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n\t            }\n\n\t            for (var i in options) {\n\t                if (i === 'storeName') {\n\t                    options[i] = options[i].replace(/\\W/g, '_');\n\t                }\n\n\t                if (i === 'version' && typeof options[i] !== 'number') {\n\t                    return new Error('Database version must be a number.');\n\t                }\n\n\t                this._config[i] = options[i];\n\t            }\n\n\t            // after all config options are set and\n\t            // the driver option is used, try setting it\n\t            if ('driver' in options && options.driver) {\n\t                return this.setDriver(this._config.driver);\n\t            }\n\n\t            return true;\n\t        } else if (typeof options === 'string') {\n\t            return this._config[options];\n\t        } else {\n\t            return this._config;\n\t        }\n\t    };\n\n\t    // Used to define a custom driver, shared across all instances of\n\t    // localForage.\n\n\n\t    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n\t        var promise = new Promise$1(function (resolve, reject) {\n\t            try {\n\t                var driverName = driverObject._driver;\n\t                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n\t                // A driver name should be defined and not overlap with the\n\t                // library-defined, default drivers.\n\t                if (!driverObject._driver) {\n\t                    reject(complianceError);\n\t                    return;\n\t                }\n\n\t                var driverMethods = LibraryMethods.concat('_initStorage');\n\t                for (var i = 0, len = driverMethods.length; i < len; i++) {\n\t                    var driverMethodName = driverMethods[i];\n\n\t                    // when the property is there,\n\t                    // it should be a method even when optional\n\t                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n\t                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n\t                        reject(complianceError);\n\t                        return;\n\t                    }\n\t                }\n\n\t                var configureMissingMethods = function configureMissingMethods() {\n\t                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n\t                        return function () {\n\t                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n\t                            var promise = Promise$1.reject(error);\n\t                            executeCallback(promise, arguments[arguments.length - 1]);\n\t                            return promise;\n\t                        };\n\t                    };\n\n\t                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n\t                        var optionalDriverMethod = OptionalDriverMethods[_i];\n\t                        if (!driverObject[optionalDriverMethod]) {\n\t                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n\t                        }\n\t                    }\n\t                };\n\n\t                configureMissingMethods();\n\n\t                var setDriverSupport = function setDriverSupport(support) {\n\t                    if (DefinedDrivers[driverName]) {\n\t                        console.info('Redefining LocalForage driver: ' + driverName);\n\t                    }\n\t                    DefinedDrivers[driverName] = driverObject;\n\t                    DriverSupport[driverName] = support;\n\t                    // don't use a then, so that we can define\n\t                    // drivers that have simple _support methods\n\t                    // in a blocking manner\n\t                    resolve();\n\t                };\n\n\t                if ('_support' in driverObject) {\n\t                    if (driverObject._support && typeof driverObject._support === 'function') {\n\t                        driverObject._support().then(setDriverSupport, reject);\n\t                    } else {\n\t                        setDriverSupport(!!driverObject._support);\n\t                    }\n\t                } else {\n\t                    setDriverSupport(true);\n\t                }\n\t            } catch (e) {\n\t                reject(e);\n\t            }\n\t        });\n\n\t        executeTwoCallbacks(promise, callback, errorCallback);\n\t        return promise;\n\t    };\n\n\t    LocalForage.prototype.driver = function driver() {\n\t        return this._driver || null;\n\t    };\n\n\t    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n\t        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n\t        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n\t        return getDriverPromise;\n\t    };\n\n\t    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n\t        var serializerPromise = Promise$1.resolve(localforageSerializer);\n\t        executeTwoCallbacks(serializerPromise, callback);\n\t        return serializerPromise;\n\t    };\n\n\t    LocalForage.prototype.ready = function ready(callback) {\n\t        var self = this;\n\n\t        var promise = self._driverSet.then(function () {\n\t            if (self._ready === null) {\n\t                self._ready = self._initDriver();\n\t            }\n\n\t            return self._ready;\n\t        });\n\n\t        executeTwoCallbacks(promise, callback, callback);\n\t        return promise;\n\t    };\n\n\t    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n\t        var self = this;\n\n\t        if (!isArray(drivers)) {\n\t            drivers = [drivers];\n\t        }\n\n\t        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n\t        function setDriverToConfig() {\n\t            self._config.driver = self.driver();\n\t        }\n\n\t        function extendSelfWithDriver(driver) {\n\t            self._extend(driver);\n\t            setDriverToConfig();\n\n\t            self._ready = self._initStorage(self._config);\n\t            return self._ready;\n\t        }\n\n\t        function initDriver(supportedDrivers) {\n\t            return function () {\n\t                var currentDriverIndex = 0;\n\n\t                function driverPromiseLoop() {\n\t                    while (currentDriverIndex < supportedDrivers.length) {\n\t                        var driverName = supportedDrivers[currentDriverIndex];\n\t                        currentDriverIndex++;\n\n\t                        self._dbInfo = null;\n\t                        self._ready = null;\n\n\t                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n\t                    }\n\n\t                    setDriverToConfig();\n\t                    var error = new Error('No available storage method found.');\n\t                    self._driverSet = Promise$1.reject(error);\n\t                    return self._driverSet;\n\t                }\n\n\t                return driverPromiseLoop();\n\t            };\n\t        }\n\n\t        // There might be a driver initialization in progress\n\t        // so wait for it to finish in order to avoid a possible\n\t        // race condition to set _dbInfo\n\t        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n\t            return Promise$1.resolve();\n\t        }) : Promise$1.resolve();\n\n\t        this._driverSet = oldDriverSetDone.then(function () {\n\t            var driverName = supportedDrivers[0];\n\t            self._dbInfo = null;\n\t            self._ready = null;\n\n\t            return self.getDriver(driverName).then(function (driver) {\n\t                self._driver = driver._driver;\n\t                setDriverToConfig();\n\t                self._wrapLibraryMethodsWithReady();\n\t                self._initDriver = initDriver(supportedDrivers);\n\t            });\n\t        })[\"catch\"](function () {\n\t            setDriverToConfig();\n\t            var error = new Error('No available storage method found.');\n\t            self._driverSet = Promise$1.reject(error);\n\t            return self._driverSet;\n\t        });\n\n\t        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n\t        return this._driverSet;\n\t    };\n\n\t    LocalForage.prototype.supports = function supports(driverName) {\n\t        return !!DriverSupport[driverName];\n\t    };\n\n\t    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n\t        extend(this, libraryMethodsAndProperties);\n\t    };\n\n\t    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n\t        var supportedDrivers = [];\n\t        for (var i = 0, len = drivers.length; i < len; i++) {\n\t            var driverName = drivers[i];\n\t            if (this.supports(driverName)) {\n\t                supportedDrivers.push(driverName);\n\t            }\n\t        }\n\t        return supportedDrivers;\n\t    };\n\n\t    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n\t        // Add a stub for each driver API method that delays the call to the\n\t        // corresponding driver method until localForage is ready. These stubs\n\t        // will be replaced by the driver methods as soon as the driver is\n\t        // loaded, so there is no performance impact.\n\t        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n\t            callWhenReady(this, LibraryMethods[i]);\n\t        }\n\t    };\n\n\t    LocalForage.prototype.createInstance = function createInstance(options) {\n\t        return new LocalForage(options);\n\t    };\n\n\t    return LocalForage;\n\t}();\n\n\t// The actual localForage object that we expose as a module or via a\n\t// global. It's extended by pulling in one of our other libraries.\n\n\n\tvar localforage_js = new LocalForage();\n\n\tmodule.exports = localforage_js;\n\n\t},{\"3\":3}]},{},[4])(4)\n\t});\n} (localforage$1));\n\nvar localforage = localforage$1.exports;\n\nfunction uuid(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,uuid)}\r\n\r\n/**\r\n * regex used to validate AppObject external ids\r\n * (UUID form is 8 digits followed by three groups of 4 digits followed by a group of 12)\r\n */\r\nconst UUID_REGEX = /^[a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}$/;\r\n\r\nconst SAVE_STATE_LOCAL = 'SAVED_LOCALLY';\r\nconst SAVE_STATE_SERVER = 'SAVED_TO_SERVER';\r\n\r\nclass Model extends EventHarness {\r\n    /**\r\n     * @type {string}\r\n     */\r\n    _id;\r\n\r\n    /**\r\n     * set if the object has been posted to the server\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    _savedRemotely = false;\r\n\r\n    static EVENT_SAVED_REMOTELY = 'savedremotely';\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} savedFlag\r\n     */\r\n    set savedRemotely(savedFlag) {\r\n        if (this._savedRemotely !== savedFlag) {\r\n            this._savedRemotely = !!savedFlag;\r\n\r\n            if (this._savedRemotely) {\r\n                this.fireEvent(Model.EVENT_SAVED_REMOTELY, {id : this.id});\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set if the object has been added to a temporary store (e.g. indexedDb)\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    _savedLocally = false;\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    deleted = false;\r\n\r\n    /**\r\n     * unix timestamp (seconds since epoch)\r\n     * Provided that the created stamp is < the modified stamp then the externally assigned creation stamp will be used\r\n     *\r\n     * @type {number}\r\n     */\r\n    createdStamp;\r\n\r\n    /**\r\n     * unix timestamp (seconds since epoch)\r\n     * modified stamp is generally server assigned - rather than using a potentially discrepant client clock\r\n     * this may increase synchrony and trust between distributed clients\r\n     *\r\n     * @type {number}\r\n     */\r\n    modifiedStamp;\r\n\r\n    /**\r\n     * DDb AppProject id\r\n     *\r\n     * @type {number}\r\n     */\r\n    projectId;\r\n\r\n    /**\r\n     * paired with isNew this marks records that have never been edited\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isPristine = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.createdStamp = Math.floor(Date.now() / 1000);\r\n    }\r\n\r\n    /**\r\n     * returns true if either remote or local copy is missing\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    unsaved() {\r\n        return !(this._savedLocally && this._savedRemotely);\r\n    }\r\n\r\n    /**\r\n     * string\r\n     */\r\n    get id() {\r\n        if (!this._id) {\r\n            this._id = uuid();\r\n        } else if (this._id === 'undefined') {\r\n            console.error(\"id is literal 'undefined', am forcing new id\");\r\n            this._id = uuid();\r\n        }\r\n\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} newId\r\n     */\r\n    set id(newId) {\r\n        // only allow an id to be set if not present already\r\n\r\n        if (this._id && newId !== this._id) {\r\n            throw new Error(`Occurrence id has already been set, when trying to set new id '${newId}'.`);\r\n        }\r\n        this._id = newId;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<function>}\r\n     * @private\r\n     */\r\n    static _tasks = [];\r\n\r\n    /**\r\n     * Add a post request to the queue\r\n     * Requests run in sequence.\r\n     * Returns a promise that resolves once the queued request completes\r\n     *\r\n     * The queue reduces the chance of requests being sent to the server out-of-order (which can lead to race conditions)\r\n     *\r\n     * @param formData\r\n     * @returns {Promise}\r\n     */\r\n    queuePost(formData) {\r\n        return new Promise((resolve, reject) => {\r\n            /**\r\n             * @returns {Promise}\r\n             */\r\n            const task = () => {\r\n                console.log({'posting form data': formData});\r\n                return this.post(formData).then(resolve, reject);\r\n            };\r\n\r\n            Model._tasks.push(task);\r\n\r\n            if (Model._tasks.length > 1) {\r\n                console.log(`Added post request to the queue.`);\r\n            } else {\r\n                console.log(`No pending tasks, starting post request immediately.`);\r\n                task().finally(Model._next);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    static _next() {\r\n        Model._tasks.shift(); // save is done\r\n\r\n        if (Model._tasks.length) {\r\n            // run the next task\r\n            console.log('Running the next task.');\r\n            return Model._tasks[0]().finally(Model._next);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /save<object>\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexdb\r\n     * a successful save will result in a json response containing the uri from which the image may be retrieved\r\n     * and also the state of persistence (whether or not the image was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the image directly to indexdb\r\n     *\r\n     * must test indexdb for this eventuality after the save has returned\r\n     *\r\n     * @param {FormData} formData\r\n     * @returns {Promise}\r\n     */\r\n    post(formData) {\r\n        return fetch(this.SAVE_ENDPOINT, {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                // need to find out whether this was a local store in indexedDb by the service worker\r\n                // or a server-side save\r\n\r\n                // to do that need to decode the json response\r\n                // which can only be done once, so need to clone first\r\n                const clonedResponse = response.clone();\r\n                return clonedResponse.json().then((responseData) => {\r\n                    /** @param {{saveState : string, created : number, modified : number}} responseData */\r\n\r\n                    console.log({'returned to client after save' : responseData});\r\n\r\n                    switch (responseData.saveState) {\r\n                        case SAVE_STATE_SERVER:\r\n                            this._savedLocally = true;\r\n                            //this._savedRemotely = true;\r\n                            this.savedRemotely = true;\r\n                            break;\r\n\r\n                        case SAVE_STATE_LOCAL:\r\n                            this._savedLocally = true;\r\n                            //this._savedRemotely = false;\r\n                            this.savedRemotely = false;\r\n                            break;\r\n\r\n                        default:\r\n                            console.log(`Unrecognised save state '${responseData.saveState}'`);\r\n                    }\r\n\r\n                    this.createdStamp = parseInt(responseData.created, 10);\r\n                    this.modifiedStamp = parseInt(responseData.modified, 10);\r\n\r\n                    // return the json version of the original response as a promise\r\n                    return response.json(); // assign appropriate JSON type to the response\r\n                });\r\n            } else {\r\n                // try instead to write the data to local storage\r\n\r\n                console.log('Save failed, presumably service worker is missing and there is no network connection. Should write to IndexedDb here.');\r\n                return Promise.reject('IndexedDb storage not yet implemented');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @param {(Survey|Occurrence|OccurrenceImage)} modelObject\r\n     * @returns {Promise}\r\n     */\r\n    static retrieveFromLocal(id, modelObject) {\r\n        return localforage.getItem(`${modelObject.TYPE}.${id}`)\r\n            .then((descriptor) => {\r\n                if (descriptor) {\r\n                    modelObject.id = id;\r\n                    modelObject._parseDescriptor(descriptor);\r\n\r\n                    return modelObject;\r\n                } else {\r\n                    return Promise.reject(`Failed to retrieve ${modelObject.TYPE}.${id} locally`);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{id : string, saveState: string, attributes: Object.<string, *>, deleted: boolean|string, created: (number|string), modified: (number|string), projectId: (number|string)}} descriptor\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        this._parseAttributes(descriptor.attributes);\r\n        this._parseSavedState(descriptor.saveState);\r\n        this.deleted = (descriptor.deleted === true) || (descriptor.deleted === 'true'); // cast stringified boolean to true boolean\r\n        this.createdStamp = parseInt(descriptor.created, 10);\r\n        //this.modifiedStamp = descriptor.modified ? parseInt(descriptor.modified, 10) : this.createdStamp; // avoids NaN\r\n        this.modifiedStamp = descriptor.modified ? parseInt(descriptor.modified, 10) : 0; // avoids NaN\r\n        this.projectId = parseInt(descriptor.projectId, 10);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object.<string, {}>|string|Array} attributes\r\n     */\r\n    _parseAttributes(attributes) {\r\n        if (typeof attributes === 'string') {\r\n            attributes = JSON.parse(attributes);\r\n        }\r\n\r\n        if (Array.isArray(attributes)) {\r\n            // problematic bug, where empty attributes come back as an array rather than as an object\r\n\r\n            console.log('Attributes were spuriously represented as an array rather than as an empty object');\r\n            this.attributes = {};\r\n        } else {\r\n            this.attributes = attributes;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} saveState\r\n     */\r\n    _parseSavedState(saveState) {\r\n        switch (saveState) {\r\n            case SAVE_STATE_LOCAL:\r\n                //this._savedRemotely = false;\r\n                this.savedRemotely = false;\r\n                this._savedLocally = true;\r\n                break;\r\n\r\n            case SAVE_STATE_SERVER:\r\n                //this._savedRemotely = true;\r\n                this.savedRemotely = true;\r\n                this._savedLocally = true;\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Unrecognised saved state '${saveState}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * update modified stamp to current time\r\n     */\r\n    touch() {\r\n        this.modifiedStamp = Math.floor(Date.now() / 1000);\r\n\r\n        if (this.isPristine) {\r\n            this.isPristine = false;\r\n            this.createdStamp = this.modifiedStamp;\r\n        }\r\n\r\n        this._savedLocally = false;\r\n        //this._savedRemotely = false;\r\n        this.savedRemotely = false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{}} formSectionProperties\r\n     * @return {{requiredFieldsPresent: boolean, validity: Object.<string, boolean>}}\r\n     */\r\n    evaluateCompletionStatus(formSectionProperties) {\r\n        const validity = {};\r\n        let requiredFieldsPresent = true;\r\n\r\n        for (let key in formSectionProperties) {\r\n            if (formSectionProperties.hasOwnProperty(key)) {\r\n                let property = formSectionProperties[key];\r\n\r\n                validity[key] = property.validator ?\r\n                    property.validator(key, property, this.attributes)\r\n                    :\r\n                    property.field.isValid(key, property, this.attributes);\r\n\r\n                if (null !== validity[key]) {\r\n                    // validity can be 'null' in which case field was optional and not assessed\r\n                    requiredFieldsPresent = requiredFieldsPresent && validity[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            requiredFieldsPresent,\r\n            validity\r\n        };\r\n    }\r\n}\n\n/**\r\n *\r\n * @param text\r\n * @returns {string}\r\n */\r\nfunction escapeHTML(text) {\r\n    try {\r\n        // IE (even v 11) sometimes fails here with 'Unknown runtime error', see http://blog.rakeshpai.me/2007/02/ies-unknown-runtime-error-when-using.html\r\n        const textArea = document.createElement('textarea');\r\n        textArea.innerHTML = text;\r\n        return textArea.innerHTML.replace(/\"/g, '&quot;');\r\n    } catch (e) {\r\n        const pre = document.createElement('pre');\r\n        pre.appendChild(document.createTextNode(text));\r\n        return pre.innerHTML.replace(/\"/g, '&quot;');\r\n    }\r\n}\n\n// a Survey captures the currentSurvey meta data\r\n//import {TextGeorefField} from \"../views/formfields/TextGeorefField\";\r\n//import {Form} from \"../views/forms/Form\";\r\n\r\nclass Survey extends Model {\r\n\r\n    /**\r\n     * fired from Survey when the object's contents have been modified\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_MODIFIED = 'modified';\r\n\r\n    SAVE_ENDPOINT = '/savesurvey.php';\r\n\r\n    TYPE = 'survey';\r\n\r\n    /**\r\n     *\r\n     * @type {Object.<string, *>}\r\n     */\r\n    attributes = {\r\n\r\n    };\r\n\r\n    /**\r\n     * if set then provide default values (e.g. GPS look-up of current geo-reference)\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isNew = false;\r\n\r\n    /**\r\n     * kludge to flag once the App singleton has set up a listner for changes on the survey\r\n     * @type {boolean}\r\n     */\r\n    hasAppModifiedListener = false;\r\n\r\n    /**\r\n     *\r\n     * @returns {({rawString: string, precision: number|null, source: string|null, gridRef: string, latLng: ({lat: number, lng: number}|null)}|null)}\r\n     */\r\n    get geoReference() {\r\n        return this.attributes.georef || {\r\n            gridRef: '',\r\n            rawString: '', // what was provided by the user to generate this grid-ref (might be a postcode or placename)\r\n            source: 'unknown', //TextGeorefField.GEOREF_SOURCE_UNKNOWN,\r\n            latLng: null,\r\n            precision: null\r\n        };\r\n    };\r\n\r\n    get date() {\r\n        return this.attributes.date || '';\r\n    }\r\n\r\n    get place() {\r\n        return this.attributes.place || '';\r\n    }\r\n\r\n    /**\r\n     * called after the form has changed, before the values have been read back in to the occurrence\r\n     *\r\n     * @param {{form: SurveyForm}} params\r\n     */\r\n    formChangedHandler(params) {\r\n        console.log('Survey change handler invoked.');\r\n\r\n        // read new values\r\n        // then fire its own change event (Occurrence.EVENT_MODIFIED)\r\n        params.form.updateModelFromContent();\r\n\r\n        console.log('Survey calling conditional validation.');\r\n\r\n        // refresh the form's validation state\r\n        params.form.conditionallyValidateForm();\r\n\r\n        this.touch();\r\n        this.fireEvent(Survey.EVENT_MODIFIED, {surveyId : this.id});\r\n    }\r\n\r\n    /**\r\n     * Used for special-case setting of a custom attribute\r\n     * (i.e. not usually one linked to a form)\r\n     * e.g. used for updating the NYPH null-list flag\r\n     *\r\n     * @param attributeName\r\n     * @param value\r\n     */\r\n    setAttribute(attributeName, value) {\r\n        if (this.attributes[attributeName] !== value) {\r\n            this.attributes[attributeName] = value;\r\n\r\n            this.touch();\r\n            this.fireEvent(Survey.EVENT_MODIFIED, {surveyId : this.id});\r\n        }\r\n    }\r\n\r\n    // /**\r\n    //  *\r\n    //  * @param {SurveyForm} form\r\n    //  */\r\n    // registerForm(form) {\r\n    //     form.model = this;\r\n    //     form.addListener('change', this.formChangedHandler.bind(this));\r\n    //\r\n    //     if (this.isNew) {\r\n    //         form.fireEvent('initialisenew', {}); // allows first-time initialisation of dynamic default data, e.g. starting a GPS fix\r\n    //         form.liveValidation = false;\r\n    //     } else {\r\n    //         form.liveValidation = true;\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /savesurvey.php\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexdb\r\n     * a successful save will result in a json response containing the uri from which the image may be retrieved\r\n     * and also the state of persistence (whether or not the image was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the image directly to indexdb\r\n     *\r\n     * must test indexdb for this eventuality after the save has returned\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    save() {\r\n        if (!this._savedRemotely) {\r\n            const formData = new FormData;\r\n\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', this.id);\r\n            formData.append('id', this.id);\r\n            formData.append('projectId', this.projectId.toString());\r\n            formData.append('attributes', JSON.stringify(this.attributes));\r\n            formData.append('deleted', this.deleted.toString());\r\n            formData.append('created', this.createdStamp.toString());\r\n\r\n            console.log('queueing survey post');\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.reject(`${this.id} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string} an html-safe string based on the locality and creation date\r\n     */\r\n    generateSurveyName() {\r\n        if (this.attributes.casual) {\r\n            // special-case treatment of surveys with 'casual' attribute (which won't have a locality or date as part of the survey)\r\n\r\n            return this.attributes.surveyName ?\r\n                escapeHTML(this.attributes.surveyName)\r\n                :\r\n                `Data-set created on ${(new Date(this.createdStamp * 1000)).toString()}`\r\n        } else {\r\n            let place = (this.attributes.place || (this.attributes.georef && this.attributes.georef.gridRef) || '(unlocalised)').trim();\r\n\r\n            const userDate = this.date;\r\n            let dateString;\r\n\r\n            if (userDate) {\r\n                dateString = userDate;\r\n            } else {\r\n                const createdDate = new Date(this.createdStamp * 1000);\r\n\r\n                try {\r\n                    // 'default' locale fails on Edge\r\n                    dateString = createdDate.toLocaleString('default', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric'\r\n                    });\r\n                } catch (e) {\r\n                    dateString = createdDate.toLocaleString('en-GB', {year: 'numeric', month: 'long', day: 'numeric'});\r\n                }\r\n            }\r\n\r\n            return `${escapeHTML(place)} ${dateString}`;\r\n        }\r\n    }\r\n}\n\n/**\r\n *\r\n */\r\nclass InternalAppError extends Error {\r\n\r\n}\n\nclass TaxonError extends Error {\r\n\r\n}\n\n/**\r\n * @external BsbiDb\r\n */\r\n\r\nclass Taxon {\r\n    /**\r\n     * @typedef RawTaxon\r\n     * @type {array}\r\n     * @property {string} 0 - nameString\r\n     * @property {(string|number)} 1 - canonical\r\n     * @property {string} 2 hybridCanonical, raw entry is 0 if canonical == hybridCanonical\r\n     * @property {(string|number)} 3 acceptedEntityId or 0 if name is accepted\r\n     * @property {string} 4 qualifier\r\n     * @property {string} 5 authority\r\n     * @property {string} 6 vernacular\r\n     * @property {string} 7 vernacularRoot\r\n     * @property {number} 8 used\r\n     * @property {number} 9 sortOrder\r\n     * @property {Array.<string>} 10 parentIds\r\n     */\r\n\r\n    /**\r\n     *\r\n     * @type {Object.<string, RawTaxon>}\r\n     */\r\n    static rawTaxa; // = BsbiDb.TaxonNames;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    id;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    nameString = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    canonical = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    hybridCanonical = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    acceptedEntityId = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    qualifier = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    authority = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    vernacular = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    vernacularRoot = '';\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    used;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    sortOrder;\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<string>}\r\n     */\r\n    parentIds = [];\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static showVernacular = true;\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @returns {Taxon}\r\n     * @throws {TaxonError}\r\n     */\r\n    static fromId (id) {\r\n        if (!Taxon.rawTaxa) {\r\n            // may not yet have been initialised due to deferred loading\r\n\r\n            if (BsbiDb.TaxonNames) {\r\n                Taxon.rawTaxa = BsbiDb.TaxonNames;\r\n            } else {\r\n                throw new TaxonError(`Taxon.fromId() called before taxon list has loaded.`);\r\n            }\r\n        }\r\n\r\n        if (!Taxon.rawTaxa.hasOwnProperty(id)) {\r\n            throw new TaxonError(`Taxon id '${id}' not found.`);\r\n        }\r\n\r\n        const raw = Taxon.rawTaxa[id];\r\n\r\n        const taxon = new Taxon;\r\n\r\n        taxon.id = id;\r\n        taxon.nameString = raw[0];\r\n        taxon.canonical = raw[1] || raw[0]; // raw entry is blank if namesString == canonical\r\n        taxon.hybridCanonical = raw[2] || taxon.canonical; // raw entry is blank if canonical == hybridCanonical\r\n        taxon.acceptedEntityId = raw[3] || id;\r\n        taxon.qualifier = raw[4];\r\n        taxon.authority = raw[5];\r\n        taxon.vernacular = raw[6];\r\n        taxon.vernacularRoot = raw[7];\r\n        taxon.used = raw[8];\r\n        taxon.sortOrder = raw[9];\r\n        taxon.parentIds = raw[10];\r\n\r\n        return taxon;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {boolean} vernacularMatched\r\n     * @returns {string}\r\n     */\r\n    formattedHTML(vernacularMatched) {\r\n        let acceptedTaxon;\r\n        if (this.id !== this.acceptedEntityId) {\r\n            acceptedTaxon = Taxon.fromId(this.acceptedEntityId);\r\n        }\r\n\r\n        if (Taxon.showVernacular) {\r\n            if (vernacularMatched) {\r\n                return (acceptedTaxon) ?\r\n                    `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>` +\r\n                        ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n                    :\r\n                    `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n                    ;\r\n            } else {\r\n                return (acceptedTaxon) ?\r\n                    `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''\r\n                        } = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n                    :\r\n                    `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''}`\r\n                    ;\r\n            }\r\n        } else {\r\n            return (acceptedTaxon) ?\r\n                `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>` +\r\n                    ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n                :\r\n                `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n                ;\r\n        }\r\n    }\r\n}\n\n//import {Form} from \"../views/forms/Form\";\r\n\r\nclass Occurrence extends Model {\r\n\r\n    /**\r\n     *\r\n     * @type {Object.<string, *>}\r\n     */\r\n    attributes = {\r\n        // taxon: {\r\n        //     taxonId: '',\r\n        //     taxonName: '',\r\n        //     vernacularMatch: false\r\n        // }\r\n    };\r\n\r\n    // /**\r\n    //  * set if the image has been posted to the server\r\n    //  * (a local copy might still exist, which may have been reduced to thumbnail resolution)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedRemotely = false;\r\n\r\n    // /**\r\n    //  * set if the image has been added to a temporary store (e.g. indexedDb)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedLocally = false;\r\n\r\n    SAVE_ENDPOINT = '/saveoccurrence.php';\r\n\r\n    TYPE = 'occurrence';\r\n\r\n    /**\r\n     * fired from Occurrence when the object's contents have been modified\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_MODIFIED = 'modified';\r\n\r\n    /**\r\n     * set if this is a new entry (before user has moved on to the next entry)\r\n     * influences whether form validation errors are displayed\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isNew = false;\r\n\r\n    /**\r\n     *\r\n     * @returns {(Taxon|null)} returns null for unmatched taxa specified by name\r\n     */\r\n    get taxon() {\r\n        return this.attributes.taxon && this.attributes.taxon.taxonId ? Taxon.fromId(this.attributes.taxon.taxonId) : null;\r\n    };\r\n\r\n    // /**\r\n    //  *\r\n    //  * @param {OccurrenceForm} form\r\n    //  * @returns {OccurrenceForm}\r\n    //  */\r\n    // setForm(form) {\r\n    //     form.addListener(Form.CHANGE_EVENT, this.formChangedHandler.bind(this));\r\n    //\r\n    //     if (!this.isNew) {\r\n    //         form.liveValidation = true;\r\n    //     }\r\n    //     return form;\r\n    // }\r\n\r\n    /**\r\n     * called after the form has changed, before the values have been read back in to the occurrence\r\n     *\r\n     * @param {{form: Form}} params\r\n     */\r\n    formChangedHandler(params) {\r\n        console.log('Occurrence change handler invoked.');\r\n\r\n        // read new values\r\n        // then fire it's own change event (Occurrence.EVENT_MODIFIED)\r\n        params.form.updateModelFromContent();\r\n\r\n        // refresh the form's validation state\r\n        params.form.conditionallyValidateForm();\r\n\r\n        this.touch();\r\n        this.fireEvent(Occurrence.EVENT_MODIFIED, {occurrenceId : this.id});\r\n    }\r\n\r\n    delete() {\r\n        if (!this.deleted) {\r\n            this.touch();\r\n            this.deleted = true;\r\n\r\n            this.fireEvent(Occurrence.EVENT_MODIFIED, {occurrenceId : this.id});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /saveoccurrence.php\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexdb\r\n     * a successful save will result in a json response containing the uri from which the image may be retrieved\r\n     * and also the state of persistence (whether or not the image was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the image directly to indexdb\r\n     *\r\n     * must test indexdb for this eventuality after the save has returned\r\n     *\r\n     * @param {string} surveyId\r\n     * @returns {Promise}\r\n     */\r\n    save(surveyId) {\r\n        if (!this._savedRemotely) {\r\n            const formData = new FormData;\r\n\r\n            if (!surveyId && this.surveyId) {\r\n                surveyId = this.surveyId;\r\n            }\r\n\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', surveyId);\r\n            formData.append('occurrenceId', this.id);\r\n            formData.append('id', this.id);\r\n            formData.append('projectId', this.projectId.toString());\r\n            formData.append('attributes', JSON.stringify(this.attributes));\r\n            formData.append('deleted', this.deleted.toString());\r\n            formData.append('created', this.createdStamp.toString());\r\n\r\n            console.log('queueing occurrence post');\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.reject(`${this.id} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{id : string, saveState: string, attributes: Object.<string, *>, deleted: boolean|string, created: number, modified: number, projectId: number, surveyId: string}} descriptor\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this.surveyId = descriptor.surveyId;\r\n    }\r\n}\n\nclass OccurrenceImage extends Model {\r\n\r\n    /**\r\n     * raw file object retrieved from a file upload image element\r\n     *\r\n     * @type {File}\r\n     */\r\n    file;\r\n\r\n    /**\r\n     *\r\n     * @type {Map.<string, OccurrenceImage>}\r\n     */\r\n    static imageCache = new Map;\r\n\r\n    TYPE = 'image';\r\n\r\n    /**\r\n     * fetches a url of the image\r\n     * this might be a remote url (or one intercepted by a service worker)\r\n     * or a data url of the raw image, (not yet uploaded)\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getUrl () {\r\n\r\n    }\r\n\r\n    SAVE_ENDPOINT = '/saveimage.php';\r\n\r\n    /**\r\n     *\r\n     * @param {File} file\r\n     */\r\n    static fromFile(file) {\r\n        const image = new OccurrenceImage;\r\n        image.file = file;\r\n\r\n        return image;\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /saveimage.php\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexdb\r\n     * a successful save will result in a json response containing the uri from which the image may be retrieved\r\n     * and also the state of persistence (whether or not the image was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the image directly to indexdb\r\n     *\r\n     * must test indexdb for this eventuality after the save has returned\r\n     *\r\n     * @param {string} surveyId\r\n     * @param {string} occurrenceId\r\n     * @param {number} projectId\r\n     * @returns {Promise}\r\n     */\r\n    save(surveyId, occurrenceId, projectId) {\r\n        if (!this._savedRemotely) {\r\n\r\n            const formData = new FormData;\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', surveyId ? surveyId : ''); // avoid 'undefined'\r\n            formData.append('occurrenceId', occurrenceId ? occurrenceId : this.occurrenceId); // avoid 'undefined'\r\n            formData.append('projectId', projectId ? projectId.toString() : '');\r\n            formData.append('imageId', this.id);\r\n            formData.append('id', this.id);\r\n            formData.append('image', this.file);\r\n            formData.append('deleted', this.deleted.toString());\r\n\r\n            console.log(`queueing image post, image id ${this.id}`);\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.reject(`${this.id} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * fired from Occurrence when the object's contents have been modified\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_MODIFIED = 'modified';\r\n\r\n    /**\r\n     *\r\n     * @param id\r\n     * @returns {OccurrenceImage}\r\n     */\r\n    static placeholder(id) {\r\n        let placeholderObject = new OccurrenceImage;\r\n        placeholderObject._id = id;\r\n\r\n        OccurrenceImage.imageCache.set(id, placeholderObject);\r\n\r\n        return placeholderObject;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{surveyId: string, occurrenceId: string, [image]: File}} descriptor\r\n     * @private\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this.surveyId = descriptor.surveyId; // note lower case\r\n        this.occurrenceId = descriptor.occurrenceId; // note lower case\r\n        this.file = descriptor.image;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @param {(number|null)} width\r\n     * @param {(number|null)} height\r\n     * @param {{[className] : string}} [attributes]\r\n     * @return {string}\r\n     */\r\n    static imageLink(id, width, height, attributes) {\r\n        width = width || 0;\r\n        height = height || 0;\r\n\r\n        let attributesString = '';\r\n\r\n        if (attributes.className) {\r\n            attributesString += ` class=\"${attributes.className}\"`;\r\n        }\r\n\r\n        const renderingConstraint = (width > height) ?\r\n            `width=\"${width}\"`\r\n            :\r\n            `height=\"${height}\"`;\r\n\r\n        return `<picture><source srcset=\"/image.php?imageid=${id}&amp;height=128&amp;format=webp\" type=\"image/webp\"><img${attributesString} src=\"/image.php?imageid=${id}&amp;width=${width}&amp;height=${height}&amp;format=jpeg\" ${renderingConstraint} alt=\"photo\"></picture>`;\r\n    }\r\n}\n\n// App.js\r\n\r\nclass App extends EventHarness {\r\n    /**\r\n     * @type {PatchedNavigo}\r\n     */\r\n    #router;\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     */\r\n    #containerEl;\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<AppController>}\r\n     */\r\n    controllers = [];\r\n\r\n    /**\r\n     * tracks the handle of the current page controller\r\n     * updating this is the responsibility of the controller\r\n     *\r\n     * @type {number|boolean}\r\n     */\r\n    currentControllerHandle = false;\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<{url : string}>}\r\n     */\r\n    routeHistory = [];\r\n\r\n    /**\r\n     * keyed by occurrence id (a UUID string)\r\n     *\r\n     * @type {Map.<string,Occurrence>}\r\n     */\r\n    occurrences;\r\n\r\n    /**\r\n     * keyed by survey id (a UUID string)\r\n     *\r\n     * @type {Map.<string,Survey>}\r\n     */\r\n    surveys;\r\n\r\n    /**\r\n     * @type {?Survey}\r\n     */\r\n    _currentSurvey = null;\r\n\r\n    /**\r\n     * @abstract\r\n     * @type {number}\r\n     */\r\n    projectId;\r\n\r\n    /**\r\n     *\r\n     * @param {?Survey} survey\r\n     */\r\n    set currentSurvey(survey) {\r\n        if (this._currentSurvey !== survey) {\r\n            this._currentSurvey = survey || null;\r\n\r\n            let surveyId = survey ? survey.id : null;\r\n            localforage.setItem(App.CURRENT_SURVEY_KEY_NAME, surveyId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {?Survey}\r\n     */\r\n    get currentSurvey() {\r\n        return this._currentSurvey;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<string | null>}\r\n     */\r\n    getLastSurveyId() {\r\n        return localforage.getItem(App.CURRENT_SURVEY_KEY_NAME)\r\n            .catch((error) => {\r\n                console.log({'Error retrieving last survey id' : error});\r\n                return Promise.resolve(null);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @type {Layout}\r\n     */\r\n    layout;\r\n\r\n    /**\r\n     * Event fired when user requests a new blank survey\r\n     * @type {string}\r\n     */\r\n    static EVENT_ADD_SURVEY_USER_REQUEST = 'useraddsurveyrequest';\r\n\r\n    /**\r\n     * Event fired when user requests a reset (local clearance) of all surveys\r\n     * @type {string}\r\n     */\r\n    static EVENT_RESET_SURVEYS = 'userresetsurveys';\r\n\r\n    /**\r\n     * Fired after App.currentSurvey has been set to a new blank survey\r\n     * the survey will be accessible in App.currentSurvey\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_NEW_SURVEY = 'newsurvey';\r\n\r\n    static LOAD_SURVEYS_ENDPOINT = '/loadsurveys.php';\r\n\r\n    static EVENT_OCCURRENCE_ADDED = 'occurrenceadded';\r\n\r\n    /**\r\n     * Fired if the surveys list might need updating (as a survey has been added, removed or changed)\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_SURVEYS_CHANGED = 'surveyschanged';\r\n\r\n    /**\r\n     * Fired after fully-successful sync-all\r\n     * (or if sync-all resolved with nothing to send)\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_ALL_SYNCED_TO_SERVER = 'allsyncedtoserver';\r\n\r\n    /**\r\n     * fired if sync-all called, but one or more objects failed to be saved to the server\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_SYNC_ALL_FAILED = 'syncallfailed';\r\n\r\n    /**\r\n     * IndexedDb key used for storing id of current (last accessed) survey (or null)\r\n     *\r\n     * @type {string}\r\n     */\r\n    static CURRENT_SURVEY_KEY_NAME = 'currentsurvey';\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static devMode = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     */\r\n    setLocalForageName(name) {\r\n        localforage.config({\r\n            name: name\r\n        });\r\n    }\r\n\r\n    reset() {\r\n        this.surveys = new Map();\r\n        this.clearCurrentSurvey();\r\n    }\r\n\r\n    /**\r\n     * unset the current survey and its associated list of occurrences\r\n     * called when switching surveys and during startup\r\n     */\r\n    clearCurrentSurvey() {\r\n        this.occurrences = new Map();\r\n        this.currentSurvey = null;\r\n    }\r\n\r\n    /**\r\n     * see https://github.com/krasimir/navigo\r\n     * @param {PatchedNavigo} router\r\n     */\r\n    set router(router) {\r\n        this.#router = router;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {PatchedNavigo}\r\n     */\r\n    get router() {\r\n        return this.#router;\r\n    }\r\n\r\n    set containerId(containerId) {\r\n        const el = document.getElementById(containerId);\r\n        if (!el) {\r\n            throw new Error(`App container '${containerId}' not found.`);\r\n        } else {\r\n            this.#containerEl = el;\r\n        }\r\n    }\r\n\r\n    get container() {\r\n        return this.#containerEl;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {AppController} controller\r\n     */\r\n    registerController(controller) {\r\n        controller.handle = this.controllers.length;\r\n        this.controllers[this.controllers.length] = controller;\r\n\r\n        controller.app = this;\r\n        controller.registerRoute(this.#router);\r\n    }\r\n\r\n    initialise() {\r\n        //Page.initialise_layout(this.#containerEl);\r\n        this.layout.initialise();\r\n\r\n        this.#router.notFound((query) => {\r\n            // called when there is path specified but\r\n            // there is no route matching\r\n\r\n            console.log(`no route found for '${query}'`);\r\n            //this.#router.navigate('/list');\r\n\r\n            // const view = new NotFoundView();\r\n            // view.display();\r\n            this.notFoundView();\r\n        });\r\n\r\n        //default homepage\r\n        this.#router.on(() => {\r\n            // special-case redirect (replacing in history) from '/' to '/list' without updating browser history\r\n\r\n            console.log(\"redirecting from '/' to '/list'\");\r\n\r\n            this.#router.pause();\r\n            //if (this.clearCurrentSurvey && this.currentSurvey.isPristine) { // this appears to be a bug 'this.clearCurrentSurvey'\r\n            // rather than 'this.clearCurrentSurvey()' is nonsensical\r\n            // and if clearCurrentSurvey() was actually called then the isPristine test would fail (called on null)\r\n            if (this.currentSurvey && this.currentSurvey.isPristine) {\r\n                this.#router.navigate('/list/survey/welcome').resume();\r\n            } else {\r\n                this.#router.navigate('/list').resume();\r\n            }\r\n            this.#router.resolve();\r\n        });\r\n\r\n        for (let controller of this.controllers) {\r\n            controller.initialise();\r\n        }\r\n    }\r\n\r\n    display() {\r\n        console.log('App display');\r\n        this.#router.resolve();\r\n\r\n        // it's opportune at this point to try to ping the server again to save anything left outstanding\r\n        this.syncAll();\r\n    }\r\n\r\n    saveRoute() {\r\n        const lastRoute = this.#router.lastRouteResolved();\r\n        if (this.routeHistory.length) {\r\n            if (this.routeHistory[this.routeHistory.length - 1] !== lastRoute) {\r\n                this.routeHistory[this.routeHistory.length] = lastRoute;\r\n            }\r\n        } else {\r\n            this.routeHistory[0] = lastRoute;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * mark the current survey and its constituent records as subject to validation checks (not pristine)\r\n     */\r\n    markAllNotPristine() {\r\n        for (let occurrenceTuple of this.occurrences) {\r\n            occurrenceTuple[1].isPristine = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Layout} layout\r\n     */\r\n    setLayout(layout) {\r\n        this.layout = layout;\r\n        layout.setApp(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Survey} survey\r\n     */\r\n    addSurvey(survey) {\r\n        if (survey.projectId !== this.projectId) {\r\n            throw new Error(`Survey project id '${survey.projectId} does not match with current project ('${this.projectId}')`);\r\n        }\r\n\r\n        //if (!this.surveys.has(survey.id)) {\r\n        if (!survey.hasAppModifiedListener) {\r\n            survey.hasAppModifiedListener = true;\r\n\r\n            console.log(\"setting survey's modified/save handler\");\r\n            survey.addListener(\r\n                Survey.EVENT_MODIFIED,\r\n                () => {\r\n                    this.fireEvent(App.EVENT_SURVEYS_CHANGED);\r\n                    return survey.save();\r\n                }\r\n            );\r\n        }\r\n\r\n        this.surveys.set(survey.id, survey);\r\n        this.fireEvent(App.EVENT_SURVEYS_CHANGED);\r\n    }\r\n\r\n    /**\r\n     * tests whether occurrences have been defined, excluding any that have been deleted\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    haveExtantOccurrences() {\r\n        for (let occurrence of this.occurrences) {\r\n            if (!occurrence.deleted) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Occurrence} occurrence\r\n     */\r\n    addOccurrence(occurrence) {\r\n        if (!occurrence.surveyId) {\r\n            throw new InternalAppError('Survey id must set prior to registering occurrence.');\r\n        }\r\n\r\n        if (this.occurrences.size === 0) {\r\n            // this is the first occurrence added, set the survey creation stamp to match\r\n            // this avoids anomalies where a 'stale' survey created when the form was first opened but not used sits around\r\n            // for a protracted period\r\n\r\n            const survey = this.surveys.get(occurrence.surveyId);\r\n            survey.createdStamp = occurrence.createdStamp;\r\n        }\r\n        console.log(`in addOccurrence setting id '${occurrence.id}'`);\r\n        this.occurrences.set(occurrence.id, occurrence);\r\n\r\n        occurrence.addListener(Occurrence.EVENT_MODIFIED,\r\n            // possibly this should be async, with await on the survey and occurrence save\r\n            () => {\r\n                const survey = this.surveys.get(occurrence.surveyId);\r\n                if (!survey) {\r\n                    throw new Error(`Failed to look up survey id ${occurrence.surveyId}`);\r\n                } else {\r\n                    survey.isPristine = false;\r\n\r\n                    // need to ensure that currentSurvey is saved before occurrence\r\n                    // rather than using a promise chain here, instead rely on enforced queuing of post requests in Model\r\n                    // otherwise there are problems with queue-jumping (e.g. when an image needs to be saved after both previous requests)\r\n                    if (survey.unsaved()) {\r\n                        // noinspection JSIgnoredPromiseFromCall\r\n                        survey.save();\r\n                    }\r\n                    occurrence.save(survey.id);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * attempts to refresh the state of local storage for the specified survey ids\r\n     * if fetch fails then return a failed promise\r\n     *\r\n     * updates local copy of surveys and occurrences\r\n     *\r\n     * no service worker interception of this call - passed through and not cached\r\n     *\r\n     * @param {Array.<string>} surveyIds\r\n     * @return {Promise}\r\n     */\r\n    refreshFromServer(surveyIds) {\r\n        console.log({'Refresh from server, ids' : surveyIds});\r\n        const formData = new FormData;\r\n\r\n        let n = 0;\r\n        for (let key of surveyIds) {\r\n            if (key && key !== 'undefined') {\r\n                formData.append(`surveyId[${n++}]`, key);\r\n            }\r\n        }\r\n\r\n        return fetch(App.LOAD_SURVEYS_ENDPOINT, {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                return Promise.reject(`Invalid response from server when refreshing survey ids`);\r\n            }\r\n        }).then((jsonResponse) => {\r\n            /** @param {{survey : Array.<object>, occurrence: Array.<object>, image: Array.<object>}} jsonResponse */\r\n\r\n            console.log({'refresh from server json response' : jsonResponse});\r\n\r\n            // if external objects newer than local version then place in local storage\r\n            const promises = [];\r\n\r\n            for (let type in jsonResponse) {\r\n                if (jsonResponse.hasOwnProperty(type)) {\r\n                    for (let object of jsonResponse[type]) {\r\n                        promises.push(this._conditionallyReplaceObject(object));\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            return Promise.all(promises);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * compare modified stamp of indexeddb and external objects and write external version locally if more recent\r\n     *\r\n     * @param {{id : string, type : string, modified : number, created : number, saveState : string, deleted : boolean}} externalVersion\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _conditionallyReplaceObject(externalVersion) {\r\n        const objectType = externalVersion.type;\r\n        const id = externalVersion.id;\r\n        const key = `${objectType}.${id}`;\r\n\r\n        return localforage.getItem(key)\r\n            .then((localVersion) => {\r\n                if (localVersion) {\r\n                    // compare stamps\r\n\r\n                    // if (externalVersion.deleted) {\r\n                    //     // if the external copy is deleted then remove the local copy\r\n                    //     return localforage.removeItem(key);\r\n                    // }\r\n\r\n                    if (!externalVersion.deleted && localVersion.modified >= externalVersion.modified) {\r\n                        console.log(`Local copy of ${key} is the same or newer than the server copy. (${localVersion.modified} >= ${externalVersion.modified}) `);\r\n                        return Promise.resolve();\r\n                    }\r\n                }\r\n\r\n                // no local copy or stale copy\r\n                // so store response locally\r\n                console.log(`Adding or replacing local copy of ${key}`);\r\n                return localforage.setItem(key, externalVersion);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * retrieve the full set of keys from local storage (IndexedDb)\r\n     *\r\n     * @param {{survey: Array.<string>, occurrence : Array.<string>, image: Array.<string>}} storedObjectKeys\r\n     * @returns {Promise}\r\n     */\r\n    seekKeys(storedObjectKeys) {\r\n        console.log('starting seekKeys');\r\n        return localforage.keys().then((keys) => {\r\n            console.log({\"in seekKeys: local forage keys\" : keys});\r\n\r\n            for (let key of keys) {\r\n                if (key !== App.CURRENT_SURVEY_KEY_NAME) {\r\n                    let type, id;\r\n\r\n                    [type, id] = key.split('.', 2);\r\n\r\n                    if (storedObjectKeys.hasOwnProperty(type)) {\r\n                        if (!storedObjectKeys[type].includes(id)) {\r\n                            storedObjectKeys[type].push(id);\r\n                        }\r\n                    } else {\r\n                        console.log(`Unrecognised stored key type '${type}.`);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return storedObjectKeys;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @returns {Promise}\r\n     */\r\n    syncAll() {\r\n        const storedObjectKeys = {\r\n            survey : [],\r\n            occurrence : [],\r\n            image : []\r\n        };\r\n\r\n        return this.seekKeys(storedObjectKeys)\r\n            .then((storedObjectKeys) => {\r\n                return this._syncLocalUnsaved(storedObjectKeys)\r\n                    .then((result) => {\r\n                        this.fireEvent(App.EVENT_ALL_SYNCED_TO_SERVER);\r\n\r\n                        return result;\r\n                    });\r\n            }, (failedResult) => {\r\n                console.log(`Failed to sync all: ${failedResult}`);\r\n                this.fireEvent(App.EVENT_SYNC_ALL_FAILED);\r\n                return false;\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param storedObjectKeys\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _syncLocalUnsaved(storedObjectKeys) {\r\n        // synchronises surveys first, then occurrences, then images from indexedDb\r\n\r\n        const promises = [];\r\n        for(let surveyKey of storedObjectKeys.survey) {\r\n            promises.push(Survey.retrieveFromLocal(surveyKey, new Survey)\r\n                .then((survey) => {\r\n                    if (survey.unsaved()) {\r\n                        return survey.save();\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        for(let occurrenceKey of storedObjectKeys.occurrence) {\r\n            promises.push(Occurrence.retrieveFromLocal(occurrenceKey, new Occurrence)\r\n                .then((occurrence) => {\r\n                    if (occurrence.unsaved()) {\r\n                        return occurrence.save();\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        for(let imageKey of storedObjectKeys.image) {\r\n            promises.push(OccurrenceImage.retrieveFromLocal(imageKey, new OccurrenceImage)\r\n                .then((image) => {\r\n                    if (image.unsaved()) {\r\n                        return image.save();\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        return Promise.all(promises).catch((result) => {\r\n            console.log(`Save failure: ${result}`);\r\n            return Promise.reject(result); // pass on the failed save (catch was only for logging, not to allow subsequent success)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * restore previous state, pulling back from local and external store\r\n     * @todo this needs a save phase, so that local changes are saved back to the server\r\n     *\r\n     * @param {string} [targetSurveyId] if specified then select this id as the current survey\r\n     * @return {Promise}\r\n     */\r\n    restoreOccurrences(targetSurveyId = '') {\r\n\r\n        console.log(`Invoked restoreOccurrences, target survey id: ${targetSurveyId}`);\r\n\r\n        if (targetSurveyId === 'undefined') {\r\n            console.error(`Attempt to restore occurrences for literal 'undefined' survey id.`);\r\n            targetSurveyId = '';\r\n        }\r\n\r\n        return (targetSurveyId) ?\r\n            this._restoreOccurrenceImp(targetSurveyId)\r\n            :\r\n            this.getLastSurveyId().then(\r\n                (lastSurveyId) => {\r\n                    console.log(`Retrieved last used survey id '${lastSurveyId}'`);\r\n\r\n                    return this._restoreOccurrenceImp(lastSurveyId).catch(() => {\r\n                        console.log(`Failed to retrieve lastSurveyId ${lastSurveyId}. Resetting current survey and retrying.`);\r\n\r\n                        this.currentSurvey = null;\r\n                        return this._restoreOccurrenceImp();\r\n                    });\r\n                },\r\n                () => this._restoreOccurrenceImp()\r\n            );\r\n    }\r\n\r\n    _restoreOccurrenceImp(targetSurveyId) {\r\n        // need to check for a special case where restoring a survey that has never been saved even locally\r\n        // i.e. new and unmodified\r\n        // only present in current App.surveys\r\n        // this occurs if user creates a new survey, makes no changes, switches away from it then switches back\r\n        if (targetSurveyId && this.surveys.has(targetSurveyId)) {\r\n            const localSurvey = this.surveys.get(targetSurveyId);\r\n\r\n            if (localSurvey.isPristine) {\r\n                this.clearCurrentSurvey(); // clear occurrences from the previous survey\r\n\r\n                this.currentSurvey = localSurvey;\r\n                this.fireEvent(App.EVENT_SURVEYS_CHANGED); // current survey should be set now, so menu needs refresh\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n\r\n        const storedObjectKeys = {\r\n            survey: [],\r\n            occurrence: [],\r\n            image: []\r\n        };\r\n\r\n        if (targetSurveyId) {\r\n            storedObjectKeys.survey[0] = targetSurveyId;\r\n        }\r\n\r\n        return this.seekKeys(storedObjectKeys).then((storedObjectKeys) => {\r\n            if (storedObjectKeys.survey.length) {\r\n                return this.refreshFromServer(storedObjectKeys.survey).finally(() => {\r\n                    // re-seek keys from indexed db, to take account of any new occurrences received from the server\r\n                    return this.seekKeys(storedObjectKeys);\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }).finally(() => {\r\n            // called regardless of whether a server refresh was successful\r\n            // storedObjectKeys and indexed db should be as up-to-date as possible\r\n\r\n            console.log({storedObjectKeys});\r\n\r\n            if (storedObjectKeys && storedObjectKeys.survey && storedObjectKeys.survey.length) {\r\n\r\n                const surveyFetchingPromises = [];\r\n                let n = 0;\r\n\r\n                for (let surveyKey of storedObjectKeys.survey) {\r\n                    // arbitrarily set first survey key as current if a target id hasn't been specified\r\n\r\n                    surveyFetchingPromises.push(\r\n                        this._restoreSurveyFromLocal(surveyKey, storedObjectKeys, (targetSurveyId === surveyKey) || (!targetSurveyId && n++ === 0))\r\n                    );\r\n                }\r\n\r\n                return Promise.all(surveyFetchingPromises)\r\n                    .finally(() => {\r\n                        //this.currentSurvey = this.surveys.get(storedObjectKeys.survey[0]);\r\n\r\n                        if (!this.currentSurvey) {\r\n                            // survey doesn't actually exist\r\n                            // this could have happened in an invalid survey id was provided as a targetSurveyId\r\n                            console.log(`Failed to retrieve survey id '${targetSurveyId}'`);\r\n                            return Promise.reject(new Error(`Failed to retrieve survey id '${targetSurveyId}'`));\r\n                        }\r\n\r\n                        if (this.currentSurvey.deleted) {\r\n                            // unusual case where survey is deleted\r\n                            // substitute a new one\r\n\r\n                            // this should probably never happen, as items deleted on the server ought to have been\r\n                            // removed locally\r\n                            this.setNewSurvey();\r\n                        } else {\r\n                            this.fireEvent(App.EVENT_SURVEYS_CHANGED); // current survey should be set now, so menu needs refresh\r\n                        }\r\n                        return Promise.resolve();\r\n                    });\r\n            } else {\r\n                console.log('no pre-existing surveys, so creating a new one');\r\n                // no pre-existing surveys, so create a new one\r\n                this.setNewSurvey();\r\n\r\n                return Promise.resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{}|null} [attributes]\r\n     */\r\n    setNewSurvey(attributes) {\r\n        this.currentSurvey = new Survey();\r\n\r\n        if (attributes) {\r\n            this.currentSurvey.attributes = {...this.currentSurvey.attributes, ...attributes};\r\n        }\r\n\r\n        this.currentSurvey.projectId = this.projectId;\r\n        this.currentSurvey.isPristine = true;\r\n        this.currentSurvey.isNew = true;\r\n\r\n        this.fireEvent(App.EVENT_NEW_SURVEY);\r\n\r\n        this.addSurvey(this.currentSurvey);\r\n    }\r\n\r\n    /**\r\n     * @return {Occurrence}\r\n     */\r\n    addNewOccurrence() {\r\n        const occurrence = new Occurrence();\r\n        occurrence.surveyId = this.currentSurvey.id;\r\n        occurrence.projectId = this.projectId;\r\n\r\n        occurrence.isNew = true;\r\n        occurrence.isPristine = true;\r\n\r\n        this.addOccurrence(occurrence);\r\n\r\n        this.fireEvent(App.EVENT_OCCURRENCE_ADDED, {occurrenceId: occurrence.id, surveyId: occurrence.surveyId});\r\n\r\n        return occurrence;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} surveyId\r\n     * @param {{survey: Array, occurrence: Array, image: Array}} storedObjectKeys\r\n     * @param {boolean} setAsCurrent\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _restoreSurveyFromLocal(surveyId, storedObjectKeys, setAsCurrent) {\r\n        // retrieve surveys first, then occurrences, then images from indexedDb\r\n\r\n        let promise = Survey.retrieveFromLocal(surveyId, new Survey).then((survey) => {\r\n            console.log(`retrieving local survey ${surveyId}`);\r\n\r\n            if (setAsCurrent) {\r\n                // the apps occurrences should only relate to the current survey\r\n                // (the reset are remote or in IndexedDb)\r\n                this.clearCurrentSurvey();\r\n\r\n                this.addSurvey(survey);\r\n                const occurrenceFetchingPromises = [];\r\n\r\n                for (let occurrenceKey of storedObjectKeys.occurrence) {\r\n                    occurrenceFetchingPromises.push(Occurrence.retrieveFromLocal(occurrenceKey, new Occurrence)\r\n                        .then((occurrence) => {\r\n                            if (occurrence.surveyId === surveyId) {\r\n                                console.log(`adding occurrence ${occurrenceKey}`);\r\n                                this.addOccurrence(occurrence);\r\n                            }\r\n                        }));\r\n                }\r\n\r\n                return Promise.all(occurrenceFetchingPromises);\r\n            } else {\r\n                // not the current survey, so just add it but don't load occurrences\r\n                this.addSurvey(survey);\r\n            }\r\n        });\r\n\r\n        if (setAsCurrent) {\r\n            promise.finally(() => {\r\n                //console.log('Reached image fetching part');\r\n                const imageFetchingPromises = [];\r\n\r\n                for (let occurrenceImageKey of storedObjectKeys.image) {\r\n                    imageFetchingPromises.push(OccurrenceImage.retrieveFromLocal(occurrenceImageKey, new OccurrenceImage)\r\n                        .then((occurrenceImage) => {\r\n                            console.log(`restoring image id '${occurrenceImageKey}'`);\r\n\r\n                            if (occurrenceImage.surveyId === surveyId) {\r\n                                OccurrenceImage.imageCache.set(occurrenceImageKey, occurrenceImage);\r\n                            }\r\n                        }, (reason) => {\r\n                            console.log(`Failed to retrieve an image: ${reason}`);\r\n                        }));\r\n                }\r\n\r\n                this.currentSurvey = this.surveys.get(storedObjectKeys.survey[0]);\r\n\r\n                return Promise.all(imageFetchingPromises);\r\n            });\r\n        }\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    clearLocalForage() {\r\n        return localforage.clear();\r\n    }\r\n\r\n    /**\r\n     * @abstract\r\n     */\r\n    notFoundView() {\r\n        // const view = new NotFoundView();\r\n        // view.display();\r\n    }\r\n}\n\n// SurveyPickerController\r\n//import Modal from 'bootstrap/js/dist/modal';\r\n\r\nclass SurveyPickerController extends AppController {\r\n    route = '/survey/:action/:id';\r\n\r\n    static EVENT_BACK = 'back';\r\n\r\n    title = 'Survey picker';\r\n\r\n    /**\r\n     * @type {App}\r\n     */\r\n    app;\r\n\r\n    /**\r\n     *\r\n     * @type {SurveyPickerView}\r\n     */\r\n    view;\r\n\r\n    /**\r\n     *\r\n     * @returns {Survey}\r\n     */\r\n    get survey() {\r\n        return this.app.currentSurvey;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {SurveyPickerView} view\r\n     */\r\n    constructor (view) {\r\n        super();\r\n\r\n        this.view = view;\r\n        view.controller = this;\r\n\r\n        this.handle = AppController.nextHandle;\r\n    }\r\n\r\n    /**\r\n     * registers the default route from this.route\r\n     * or alternatively is overridden in a child class\r\n     *\r\n     * @param {PatchedNavigo} router\r\n     */\r\n    registerRoute(router) {\r\n        router.on(\r\n            '/survey',\r\n            this.mainRouteHandler.bind(this, 'survey', '', ''),\r\n            {\r\n                // before : this.beforeRouteHandler ? this.beforeRouteHandler.bind(this) : null,\r\n                // after : this.afterRouteHandler ? this.afterRouteHandler.bind(this) : null,\r\n                // leave : this.leaveRouteHandler ? this.leaveRouteHandler.bind(this) : null,\r\n                // already : this.alreadyRouteHandler ? this.alreadyRouteHandler.bind(this) : null\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/new',\r\n            this.newSurveyHandler.bind(this, 'survey', 'new', ''),\r\n            {\r\n                before : this.beforeNewHandler.bind(this)\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/reset',\r\n            this.mainRouteHandler.bind(this, 'survey', 'reset', ''),\r\n            {\r\n                before : this.beforeResetHandler.bind(this)\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/save',\r\n            this.mainRouteHandler.bind(this, 'survey', 'save', ''),\r\n            {\r\n                before : this.beforeSaveAllHandler.bind(this)\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/add/:surveyId',\r\n            this.addSurveyHandler.bind(this, 'survey', 'add', '')\r\n        );\r\n\r\n        this.app.addListener(App.EVENT_ADD_SURVEY_USER_REQUEST, this.addNewSurveyHandler.bind(this));\r\n        this.app.addListener(App.EVENT_RESET_SURVEYS, this.resetSurveysHandler.bind(this));\r\n    }\r\n\r\n    beforeNewHandler(done) {\r\n        this.view.newSurveyDialog();\r\n\r\n        this.app.router.pause();\r\n\r\n        console.log({'route history' : this.app.routeHistory});\r\n\r\n        if (window.history.state) {\r\n            window.history.back(); // this could fail if previous url was not under the single-page-app umbrella (should test)\r\n        }\r\n        this.app.router.resume();\r\n\r\n        done(false); // block navigation\r\n    }\r\n\r\n    beforeResetHandler(done) {\r\n        this.view.showResetDialog();\r\n\r\n        this.app.router.pause();\r\n        if (window.history.state) {\r\n            window.history.back(); // this could fail if previous url was not under the single-page-app umbrella (should test)\r\n        }\r\n        this.app.router.resume();\r\n\r\n        done(false); // block navigation\r\n    }\r\n\r\n    beforeSaveAllHandler(done) {\r\n        // invoke sync of any/all unsaved data\r\n        // show pop-ups on success and failure\r\n        this.app.syncAll().then((result) => {\r\n            console.log({'In save all handler, success result' : result});\r\n\r\n            if (Array.isArray(result)) {\r\n                //$(`#${Layout.SAVE_ALL_SUCCESS_MODAL_ID}`).modal();\r\n                //Modal.getOrCreateInstance(Layout.SAVE_ALL_SUCCESS_MODAL_ID).show();\r\n                this.view.showSaveAllSuccess();\r\n            } else {\r\n                //$(`#${Layout.SAVE_ALL_FAILURE_MODAL_ID}`).modal();\r\n                //Modal.getOrCreateInstance(Layout.SAVE_ALL_FAILURE_MODAL_ID).show();\r\n                this.view.showSaveAllFailure();\r\n            }\r\n        }, (result) => {\r\n            console.log({'In save all handler, failure result' : result});\r\n            //$(`#${Layout.SAVE_ALL_FAILURE_MODAL_ID}`).modal();\r\n            //Modal.getOrCreateInstance(Layout.SAVE_ALL_FAILURE_MODAL_ID).show();\r\n            this.view.showSaveAllFailure();\r\n        }).finally(() => {\r\n            // stop the spinner\r\n\r\n        });\r\n\r\n        this.app.router.pause();\r\n        if (window.history.state) {\r\n            window.history.back(); // this could fail if previous url was not under the single-page-app umbrella (should test)\r\n        }\r\n        this.app.router.resume();\r\n\r\n        done(false); // block navigation\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} context typically 'survey'\r\n     * @param {('new'|'')} subcontext\r\n     * @param {(''|'help')} rhs currently not used\r\n     * @param {Object.<string, string>} queryParameters surveyId\r\n     */\r\n    newSurveyHandler(context, subcontext, rhs, queryParameters) {\r\n        // should not get here, as beforeNewHandler ought to have been invoked first\r\n    }\r\n\r\n    /**\r\n     * called after user has confirmed add new survey dialog box\r\n     *\r\n     */\r\n    addNewSurveyHandler() {\r\n        console.log(\"reached addNewSurveyHandler\");\r\n        this.app.currentControllerHandle = this.handle; // when navigate back need to list need to ensure full view refresh\r\n\r\n        // the apps occurrences should only relate to the current survey\r\n        // (the reset are remote or in IndexedDb)\r\n        this.app.clearCurrentSurvey();\r\n\r\n        this.app.setNewSurvey();\r\n\r\n        // it's opportune at this point to try to ping the server again to save anything left outstanding\r\n        this.app.syncAll();\r\n\r\n        this.app.router.pause();\r\n        this.app.router.navigate('/list/survey/about').resume(); // jump straight into the survey rather than to welcome stage\r\n        this.app.router.resolve();\r\n    }\r\n\r\n    /**\r\n     * called after user has confirmed reset surveys dialog box\r\n     */\r\n    resetSurveysHandler() {\r\n        this.app.clearLocalForage().then(() => {\r\n            this.app.reset();\r\n            this.addNewSurveyHandler();\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} context typically 'survey'\r\n     * @param {('add'|'')} subcontext\r\n     * @param {(''|'help')} rhs currently not used\r\n     * @param {Object.<string, string>} queryParameters surveyId\r\n     */\r\n    addSurveyHandler(context, subcontext, rhs, queryParameters) {\r\n        console.log(\"reached addSurveyHandler\");\r\n        console.log({context: context, params: subcontext, query: queryParameters});\r\n\r\n        this.app.currentControllerHandle = this.handle; // when navigate back need to list need to ensure full view refresh\r\n\r\n        let surveyId = queryParameters.surveyId;\r\n\r\n        if (!surveyId || !surveyId.match(UUID_REGEX)) {\r\n            throw new NotFoundError(`Failed to match survey id '${surveyId}', the id format appears to be incorrect`);\r\n        }\r\n\r\n        surveyId = surveyId.toLowerCase();\r\n\r\n        this.app.restoreOccurrences(surveyId)\r\n            .then(() => {\r\n                this.app.markAllNotPristine();\r\n\r\n                this.app.router.pause();\r\n                this.app.router.navigate('/list').resume();\r\n                this.app.router.resolve();\r\n            }, (error) => {\r\n                console.log({'failed survey restoration' : error});\r\n\r\n                // should display a modal error message\r\n                // either the survey was not found or there was no network connection\r\n\r\n                // should switch to displaying a list of available surveys and an option to start a new survey\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} context typically 'survey'\r\n     * @param {('add'|'')} subcontext\r\n     * @param {(''|'help')} rhs currently not used\r\n     * @param {Object.<string, string>} queryParameters surveyId\r\n     */\r\n    mainRouteHandler(context, subcontext, rhs, queryParameters) {\r\n        console.log(\"reached special route handler for SurveyPickerController.js\");\r\n        console.log({context: context, params: subcontext, query: queryParameters});\r\n    }\r\n}\n\nclass ResponseFactory {\r\n    static responses = {};\r\n\r\n    /**\r\n     *\r\n     * @param {FormData} formData\r\n     * @returns {LocalResponse}\r\n     */\r\n    static fromPostedData(formData) {\r\n        /**\r\n         * the object that will be saved to IndexedDb\r\n         *\r\n         * this needs to be in scope for several stages of the promise chain\r\n         * @type {{[saved]: string, [type]: string, [imageId]: string, [surveyId]: string, [occurrenceId]: string, [image]: file, [projectId]: number, saveState: string }}\r\n         */\r\n        const toSaveLocally = {\r\n            saveState: SAVE_STATE_LOCAL // mark as not saved externally\r\n        };\r\n\r\n        for(let pair of formData.entries()) {\r\n            toSaveLocally[pair[0]] = pair[1];\r\n        }\r\n\r\n        if (!toSaveLocally.type) {\r\n            throw new Error('Missing type in form data.');\r\n        }\r\n\r\n        if (ResponseFactory.responses.hasOwnProperty(toSaveLocally.type)) {\r\n            return new ResponseFactory.responses[toSaveLocally.type](toSaveLocally, {});\r\n        } else {\r\n            throw new Error(`Unrecognised post type '${toSaveLocally.type}'`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{}} returnedToClient\r\n     */\r\n    static fromPostResponse(returnedToClient) {\r\n        if (!returnedToClient) {\r\n            throw new Error('Invalid empty post response.');\r\n        }\r\n\r\n        if (!returnedToClient.type) {\r\n            throw new Error('Missing type in returned response.');\r\n        }\r\n\r\n        if (ResponseFactory.responses.hasOwnProperty(returnedToClient.type)) {\r\n            console.log(`in fromPostResponse returning a ${returnedToClient.type}`);\r\n            return new ResponseFactory.responses[returnedToClient.type]({}, returnedToClient);\r\n        } else {\r\n            throw new Error(`Unrecognised post type '${returnedToClient.type}'`);\r\n        }\r\n    }\r\n}\n\nfunction packageClientResponse (returnedToClient) {\r\n    const headers = new Headers;\r\n    headers.set('Content-Type', 'application/json');\r\n\r\n    return new Response(\r\n        JSON.stringify(returnedToClient),\r\n        {\r\n            status: returnedToClient.error ? 500 : 200,\r\n            headers\r\n        });\r\n}\n\nclass LocalResponse {\r\n    toSaveLocally;\r\n    returnedToClient;\r\n\r\n    /**\r\n     * @type {Response}\r\n     */\r\n    prebuiltResponse;\r\n\r\n    failureErrorMessage = 'Failed to save a local copy on your device.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    constructor(toSaveLocally, returnedToClient) {\r\n        this.toSaveLocally = toSaveLocally;\r\n        this.returnedToClient = returnedToClient;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Response} prebuiltResponse\r\n     * @returns this\r\n     */\r\n    setPrebuiltResponse(prebuiltResponse) {\r\n        this.prebuiltResponse = prebuiltResponse;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<Response>}\r\n     */\r\n    storeLocally() {\r\n        return localforage.setItem(this.localKey(), this.toSaveLocally).then(() => {\r\n                console.log(`Stored object ${this.localKey()} locally`);\r\n                return this.prebuiltResponse ? this.prebuiltResponse : packageClientResponse(this.returnedToClient);\r\n            },\r\n            (reason) => {\r\n                console.log(`Failed to store object ${this.localKey()} locally`);\r\n                console.log({reason});\r\n                this.returnedToClient.error = this.failureErrorMessage;\r\n                this.returnedToClient.errorHelp = this.failureErrorHelp;\r\n\r\n                return packageClientResponse(this.returnedToClient);\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * @return {string}\r\n     */\r\n    localKey () {\r\n        throw new Error(`LocalKey must be implemented in a subclass for ${this.toSaveLocally.type}`);\r\n    }\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     * @abstract\r\n     */\r\n    populateClientResponse() {\r\n    }\r\n}\n\nclass ImageResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store image.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.id = this.toSaveLocally.imageId ? this.toSaveLocally.imageId : this.toSaveLocally.id;\r\n        this.returnedToClient.imageId = this.toSaveLocally.imageId ? this.toSaveLocally.imageId : this.toSaveLocally.id;\r\n        this.returnedToClient.type = 'image';\r\n        this.returnedToClient.surveyId = this.toSaveLocally.surveyId;\r\n        this.returnedToClient.occurrenceId = this.toSaveLocally.occurrenceId;\r\n        this.returnedToClient.created = parseInt(this.toSaveLocally.created, 10); // stamps from server always take precedence\r\n        this.returnedToClient.modified = parseInt(this.toSaveLocally.modified, 10);\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted;\r\n        this.returnedToClient.projectId = parseInt(this.toSaveLocally.projectId, 10);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.surveyId = this.returnedToClient.surveyId;\r\n        this.toSaveLocally.type = 'image';\r\n        this.toSaveLocally.occurrenceId = this.returnedToClient.occurrenceId;\r\n        this.toSaveLocally.imageId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.imageId; // hedging\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.imageId; // hedging\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = (this.returnedToClient.deleted === true || this.returnedToClient.deleted === 'true');\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `image.${this.toSaveLocally.imageId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.image = ImageResponse;\r\n    }\r\n}\n\nclass SurveyResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store survey.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.toSaveLocally.surveyId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.surveyId; // hedging\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.surveyId; // hedging\r\n        this.returnedToClient.type = 'survey';\r\n        this.returnedToClient.attributes = this.toSaveLocally.attributes;\r\n        this.returnedToClient.created = this.toSaveLocally.created; // stamps from server always take precedence\r\n        this.returnedToClient.modified = this.toSaveLocally.modified;\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted;\r\n        this.returnedToClient.projectId = this.toSaveLocally.projectId;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.surveyId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.surveyId;\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.surveyId;\r\n        this.toSaveLocally.type = 'survey';\r\n        this.toSaveLocally.attributes = this.returnedToClient.attributes;\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = this.returnedToClient.deleted;\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `survey.${this.toSaveLocally.surveyId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.survey = SurveyResponse;\r\n    }\r\n}\n\nclass OccurrenceResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store occurrence.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.id = this.toSaveLocally.occurrenceId ? this.toSaveLocally.occurrenceId : this.toSaveLocally.id;\r\n        this.returnedToClient.occurrenceId = this.toSaveLocally.occurrenceId ? this.toSaveLocally.occurrenceId : this.toSaveLocally.id;\r\n        this.returnedToClient.type = 'occurrence';\r\n        this.returnedToClient.surveyId = this.toSaveLocally.surveyId;\r\n        this.returnedToClient.attributes = this.toSaveLocally.attributes;\r\n        this.returnedToClient.created = parseInt(this.toSaveLocally.created, 10); // stamps from server always take precedence\r\n        this.returnedToClient.modified = parseInt(this.toSaveLocally.modified, 10);\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted;\r\n        this.returnedToClient.projectId = parseInt(this.toSaveLocally.projectId, 10);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.occurrenceId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.occurrenceId; // hedging\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.occurrenceId; // hedging\r\n        this.toSaveLocally.type = 'occurrence';\r\n        this.toSaveLocally.surveyId = this.returnedToClient.surveyId;\r\n        this.toSaveLocally.attributes = this.returnedToClient.attributes;\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = (this.returnedToClient.deleted === true || this.returnedToClient.deleted === 'true');\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `occurrence.${this.toSaveLocally.occurrenceId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.occurrence = OccurrenceResponse;\r\n    }\r\n}\n\n// service worker for BSBI app\r\n\r\nclass BSBIServiceWorker {\r\n\r\n    /**\r\n     * @var {Array.<string>}\r\n     */\r\n    URL_CACHE_SET;\r\n\r\n    /**\r\n     *\r\n     * @param {{\r\n     *  forageName : string,\r\n     *  postPassThroughWhitelist : RegExp,\r\n     *  postImageUrlMatch : RegExp,\r\n     *  getImageUrlMatch : RegExp,\r\n     *  interceptUrlMatches : RegExp,\r\n     *  ignoreUrlMatches : RegExp,\r\n     *  passThroughNoCache : RegExp,\r\n     *  indexUrl : string,\r\n     *  urlCacheSet : Array.<string>,\r\n     *  version : string\r\n     * }} configuration\r\n     */\r\n    initialise(configuration) {\r\n        if (!Promise.prototype.finally) {\r\n            Promise.prototype.finally = function (callback) { // must use 'function' here rather than arrow, due to this binding requirement\r\n                return this.then(callback)\r\n                    .catch(callback);\r\n            };\r\n        }\r\n\r\n        ImageResponse.register();\r\n        SurveyResponse.register();\r\n        OccurrenceResponse.register();\r\n\r\n        this.CACHE_VERSION = `version-1.0.3.1666903485-${configuration.version}`;\r\n\r\n        const POST_PASS_THROUGH_WHITELIST = configuration.postPassThroughWhitelist;\r\n        const POST_IMAGE_URL_MATCH = configuration.postImageUrlMatch;\r\n        const GET_IMAGE_URL_MATCH = configuration.getImageUrlMatch;\r\n        const SERVICE_WORKER_INTERCEPT_URL_MATCHES = configuration.interceptUrlMatches;\r\n        const SERVICE_WORKER_IGNORE_URL_MATCHES = configuration.ignoreUrlMatches;\r\n        const SERVICE_WORKER_PASS_THROUGH_NO_CACHE = configuration.passThroughNoCache;\r\n        const INDEX_URL = configuration.indexUrl;\r\n\r\n        this.URL_CACHE_SET = configuration.urlCacheSet;\r\n\r\n        localforage.config({\r\n            name: configuration.forageName\r\n        });\r\n\r\n        // On install, cache some resources.\r\n        self.addEventListener('install', (evt) => {\r\n            console.log('BSBI app service worker is being installed.');\r\n\r\n            // noinspection JSIgnoredPromiseFromCall\r\n            self.skipWaiting();\r\n\r\n            // Ask the service worker to keep installing until the returning promise\r\n            // resolves.\r\n            evt.waitUntil(\r\n                this.precache()\r\n                    // see https://serviceworke.rs/immediate-claim_service-worker_doc.html\r\n                    // .finally(() => {\r\n                    //     console.log(\"Service worker skip waiting after precache.\");\r\n                    //\r\n                    //     return self.skipWaiting();\r\n                    // })\r\n            );\r\n        });\r\n\r\n        self.addEventListener('activate', (event) => {\r\n            console.log({'service worker activate event' : event});\r\n\r\n            event.waitUntil(\r\n                self.clients.matchAll({\r\n                    includeUncontrolled: true\r\n                }).then((clientList) => {\r\n                    const urls = clientList.map((client) => {\r\n                        return client.url;\r\n                    });\r\n                    console.log('[ServiceWorker] Matching clients:', urls.join(', '));\r\n                }).then(() => caches.keys())\r\n                    .then((cacheNames) => {\r\n                        return Promise.all(\r\n                            cacheNames.map((cacheName) => {\r\n                                // test for 'version' prefix to avoid deleting mapbox tiles\r\n                                if (cacheName.startsWith('version') && cacheName !== this.CACHE_VERSION) {\r\n                                    console.log('[ServiceWorker] Deleting old cache:', cacheName);\r\n                                    return caches.delete(cacheName);\r\n                                }\r\n                            })\r\n                        );\r\n                    }).then(() => {\r\n                        console.log('[ServiceWorker] Claiming clients for version', this.CACHE_VERSION);\r\n                        return self.clients.claim();\r\n                    })\r\n                );\r\n            });\r\n\r\n\r\n        // // see https://davidwalsh.name/background-sync\r\n        // // https://developers.google.com/web/updates/2015/12/background-sync\r\n        // self.addEventListener('sync', function(event) {\r\n        //\r\n        // });\r\n\r\n        // On fetch, use cache but update the entry with the latest contents\r\n        // from the server.\r\n        self.addEventListener('fetch', /** @param {FetchEvent} evt */ (evt) => {\r\n            //console.log(`The service worker is serving: '${evt.request.url}'`);\r\n\r\n            evt.preventDefault();\r\n\r\n            if (evt.request.method === 'POST') {\r\n                //console.log(`Got a post request`);\r\n\r\n                //if (evt.request.url.match(POST_PASS_THROUGH_WHITELIST)) {\r\n                if (POST_PASS_THROUGH_WHITELIST.test(evt.request.url)) {\r\n                    console.log(`Passing through whitelisted post request for: ${evt.request.url}`);\r\n                    evt.respondWith(fetch(evt.request));\r\n                } else if (SERVICE_WORKER_PASS_THROUGH_NO_CACHE.test(evt.request.url)) {\r\n                    console.log(`Passing through nocache list post request for: ${evt.request.url}`);\r\n                    evt.respondWith(fetch(evt.request));\r\n                } else {\r\n                    //if (evt.request.url.match(POST_IMAGE_URL_MATCH)) {\r\n                    if (POST_IMAGE_URL_MATCH.test(evt.request.url)) {\r\n                        console.log(`Got an image post request: '${evt.request.url}'`);\r\n                        this.handle_image_post(evt);\r\n                    } else {\r\n                        console.log(`Got post request: '${evt.request.url}'`);\r\n                        this.handle_post(evt);\r\n                    }\r\n                }\r\n            } else {\r\n                // test whether this is a direct link in to a page that should be substituted by\r\n                // the single page app\r\n\r\n                // console.log(`about to test url '${evt.request.url}'`);\r\n\r\n                if (SERVICE_WORKER_INTERCEPT_URL_MATCHES.test(evt.request.url) &&\r\n                    !SERVICE_WORKER_IGNORE_URL_MATCHES.test(evt.request.url)\r\n                ) {\r\n                    // serving single page app instead\r\n                    console.log(`redirecting to the root of the SPA for '${evt.request.url}'`);\r\n                    let spaRequest = new Request(INDEX_URL);\r\n                    evt.respondWith(this.fromCache(spaRequest));\r\n                    evt.waitUntil(this.update(spaRequest));\r\n                } else if (evt.request.url.match(GET_IMAGE_URL_MATCH)) {\r\n                    console.log(`request is for an image '${evt.request.url}'`);\r\n                    this.handleImageFetch(evt);\r\n                } else if (SERVICE_WORKER_PASS_THROUGH_NO_CACHE.test(evt.request.url)) {\r\n                    // typically for external content that can't/shouldn't be cached, e.g. MapBox tiles (which mapbox stores directly in the cache itself)\r\n                    evt.respondWith(fetch(evt.request));\r\n                } else {\r\n                    console.log(`request is for non-image '${evt.request.url}'`);\r\n                    // You can use `respondWith()` to answer immediately, without waiting for the\r\n                    // network response to reach the service worker...\r\n                    evt.respondWith(this.fromCache(evt.request));\r\n                    // ...and `waitUntil()` to prevent the worker from being killed until the\r\n                    // cache is updated.\r\n                    evt.waitUntil(this.update(evt.request));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * used to handle small posts (not images)\r\n     * attempts remote save first then caches locally\r\n     *\r\n     * @param {FetchEvent} evt\r\n     */\r\n    handle_post(evt) {\r\n        let clonedRequest;\r\n        try {\r\n            clonedRequest = evt.request.clone();\r\n        } catch (e) {\r\n            console.log('Failed to clone request.');\r\n            console.log({'Cloning error': e});\r\n        }\r\n\r\n        evt.respondWith(fetch(evt.request)\r\n            .then((response) => {\r\n                // would get here if the server responds at all, but need to check that the response is ok (not a server error)\r\n                if (response.ok) {\r\n                    return Promise.resolve(response)\r\n                        .then((response) => {\r\n                            // save the response locally\r\n                            // before returning it to the client\r\n\r\n                            console.log('About to clone the json response.');\r\n\r\n                            return response.clone().json();\r\n                        })\r\n                        .then((jsonResponseData) => {\r\n                            console.log('Following successful remote post, about to save locally.');\r\n\r\n                            return ResponseFactory\r\n                                .fromPostResponse(jsonResponseData)\r\n                                .setPrebuiltResponse(response)\r\n                                .populateLocalSave()\r\n                                .storeLocally();\r\n                        })\r\n                        .catch((error) => {\r\n                            // for some reason local storage failed, after a successful server save\r\n                            console.log({'local storage failed' : error});\r\n\r\n                            return Promise.resolve(response); // pass through the server response\r\n                        });\r\n                } else {\r\n                    console.log(`Failed to save, moving on to attempt IndexedDb`);\r\n                    return Promise.reject('Failed to save to server.');\r\n                }\r\n            })\r\n            .catch( (reason) => {\r\n                    console.log({'post fetch failed (probably no network)': reason});\r\n\r\n                    // would get here if the network is down\r\n                    // or if got invalid response from the server\r\n\r\n                    console.log(`post fetch failed (probably no network), (reason: ${reason})`);\r\n                    //console.log({'post failure reason' : reason});\r\n\r\n                    // /**\r\n                    //  * simulated result of post, returned as JSON body\r\n                    //  * @type {{surveyId: string, occurrenceId: string, imageId: string, saveState: string, [error]: string, [errorHelp]: string}}\r\n                    //  */\r\n                    // let returnedToClient = {};\r\n\r\n                    return clonedRequest.formData()\r\n                        .then((formData) => {\r\n                                console.log('got to form data handler');\r\n                                //console.log({formData});\r\n\r\n                                return ResponseFactory\r\n                                    .fromPostedData(formData)\r\n                                    .populateClientResponse()\r\n                                    .storeLocally();\r\n                            }, (reason) => {\r\n                                console.log({'failed to read form data locally' : reason});\r\n\r\n                                /**\r\n                                 * simulated result of post, returned as JSON body\r\n                                 * @type {{[surveyId]: string, [occurrenceId]: string, [imageId]: string, [saveState]: string, [error]: string, [errorHelp]: string}}\r\n                                 */\r\n                                let returnedToClient = {\r\n                                    error: 'Failed to process posted response data. (internal error)',\r\n                                    errorHelp: 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n                                        'It wasn\\'t possible to save a temporary copy on your device. (an unexpected error occurred) ' +\r\n                                        'Please try to re-establish a network connection and try again.'\r\n                                };\r\n\r\n                                return packageClientResponse(returnedToClient);\r\n                            }\r\n                        );\r\n                }\r\n            ));\r\n    }\r\n\r\n    /**\r\n     * used to handle image posts, which need to respond quickly even if the network is slow\r\n     * attempts local cache first then saves out to network\r\n     *\r\n     * @param {FetchEvent} event\r\n     */\r\n    handle_image_post(event) {\r\n        let clonedRequest;\r\n\r\n        console.log('posting image');\r\n\r\n        try {\r\n            clonedRequest = event.request.clone();\r\n        } catch (e) {\r\n            console.log('Failed to clone request.');\r\n            console.log({'Cloning error': e});\r\n        }\r\n\r\n        // send back a quick response to the client from local storage (before the server request completes)\r\n        event.respondWith(\r\n            clonedRequest.formData()\r\n                .then((formData) => {\r\n                        console.log('got to form data handler');\r\n                        //console.log({formData});\r\n\r\n                        return ResponseFactory\r\n                            .fromPostedData(formData)\r\n                            .populateClientResponse()\r\n                            .storeLocally()\r\n                            .then((response) => {\r\n\r\n                                // separately send data to the server, but response goes to client before this completes\r\n                                // am unsure if the return from the wait until part ever reaches the client\r\n                                event.waitUntil(fetch(event.request)\r\n                                    .then((response) => {\r\n                                            console.log('posting image to server in waitUntil part of fetch cycle');\r\n\r\n                                            // would get here if the server responds at all, but need to check that the response is ok (not a server error)\r\n                                            if (response.ok) {\r\n                                                console.log('posted image to server in waitUntil part of fetch cycle: got OK response');\r\n\r\n                                                return Promise.resolve(response)\r\n                                                    .then((response) => {\r\n                                                        // save the response locally\r\n                                                        // before returning it to the client\r\n\r\n                                                        return response.clone().json();\r\n                                                    })\r\n                                                    .then((jsonResponseData) => {\r\n                                                        return ResponseFactory\r\n                                                            .fromPostResponse(jsonResponseData)\r\n                                                            .setPrebuiltResponse(response)\r\n                                                            .populateLocalSave()\r\n                                                            .storeLocally();\r\n                                                    })\r\n                                                    .catch((error) => {\r\n                                                        // for some reason local storage failed, after a successful server save\r\n                                                        console.log({error});\r\n\r\n                                                        return Promise.resolve(response); // pass through the server response\r\n                                                    });\r\n                                            } else {\r\n                                                console.log('posted image to server in waitUntil part of fetch cycle: got Error response');\r\n\r\n                                                /**\r\n                                                 * simulated result of post, returned as JSON body\r\n                                                 * @type {{[surveyId]: string, [occurrenceId]: string, [imageId]: string, [saveState]: string, [error]: string, [errorHelp]: string}}\r\n                                                 */\r\n                                                let returnedToClient = {\r\n                                                    error: 'Failed to save posted response data. (internal error)',\r\n                                                    errorHelp: 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n                                                        'It wasn\\'t possible to save a temporary copy on your device. (an unexpected error occurred) ' +\r\n                                                        'Please try to re-establish a network connection and try again.'\r\n                                                };\r\n\r\n                                                return packageClientResponse(returnedToClient);\r\n                                            }\r\n                                        }, () => {\r\n                                            console.log('Rejected image post fetch from server - implies network is down');\r\n                                        }\r\n                                    ));\r\n\r\n                                return response;\r\n                            });\r\n                    }, (reason) => {\r\n                        console.log('failed to read form data locally');\r\n                        console.log({reason});\r\n\r\n                        /**\r\n                         * simulated result of post, returned as JSON body\r\n                         * @type {{[surveyId]: string, [occurrenceId]: string, [imageId]: string, [saveState]: string, [error]: string, [errorHelp]: string}}\r\n                         */\r\n                        let returnedToClient = {\r\n                            error: 'Failed to process posted response data. (internal error)',\r\n                            errorHelp: 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n                                'It wasn\\'t possible to save a temporary copy on your device. (an unexpected error occurred) ' +\r\n                                'Please try to re-establish a network connection and try again.'\r\n                        };\r\n\r\n                        return packageClientResponse(returnedToClient);\r\n                    }\r\n                )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Open a cache and use `addAll()` with an array of assets to add all of them\r\n     * to the cache. Return a promise resolving when all the assets are added.\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    precache() {\r\n        return caches.open(this.CACHE_VERSION).then((cache) => {\r\n            return cache.addAll(this.URL_CACHE_SET);\r\n        }).catch((error) => {\r\n            console.log({'Precache failed result' : error});\r\n            return Promise.resolve();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open the cache where the assets were stored and search for the requested\r\n     * resource. Notice that in case of no matching, the promise still resolves\r\n     * but it does with `undefined` as value.\r\n     *\r\n     * @param {Request} request\r\n     * @returns {Promise<Response | Promise<Response>>}\r\n     */\r\n    fromCache(request) {\r\n        // @todo need to serve index.html in place of all Navigo-served pages\r\n        // (an issue if someone returns to a bookmarked page within the app)\r\n\r\n        console.log('attempting fromCache response');\r\n\r\n        return caches.open(this.CACHE_VERSION).then((cache) => {\r\n            console.log('cache is open');\r\n\r\n            return cache.match(request).then((matching) => {\r\n                console.log(matching ?\r\n                    `cache matched ${request.url}`\r\n                    :\r\n                    `no cache match for ${request.url}`);\r\n\r\n                //return matching || fetch(request); // return cache match or if not cached then go out to network\r\n                return matching || this.update(request); // return cache match or if not cached then go out to network (and then locally cache the response)\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Special case response for images\r\n     * attempt to serve from local cache first,\r\n     * if that fails then go out to network\r\n     * finally see if there is an image in indexeddb\r\n     *\r\n     * @param {FetchEvent} evt\r\n     */\r\n    handleImageFetch(evt) {\r\n        evt.respondWith(this.fromCache(evt.request).then((response) => {\r\n                console.log('In handleImageFetch promise');\r\n\r\n                // response may be a 404\r\n                if (response && response.ok) {\r\n                    console.log('Responding with image from cache (or remotely if no cache).');\r\n                    return response;\r\n                } else {\r\n                    // not cached and no network access\r\n                    // try to respond from local storage\r\n\r\n                    const url = evt.request.url;\r\n                    console.log(`Attempting image match for '${url}'`);\r\n\r\n                    const matches = url.match(/imageid=([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12})/);\r\n\r\n                    if (matches) {\r\n                        const imageId = matches[1];\r\n                        console.log(`Returning image match for '${url}' from local database`);\r\n                        return this.imageFromLocalDatabase(imageId);\r\n                    } else {\r\n                        console.log(`Failed to match image id in url '${url}'`);\r\n                    }\r\n                }\r\n            })\r\n                .catch((error) => {\r\n                    const url = evt.request.url;\r\n                    console.log({'caught' : error});\r\n                    console.log(`In catch following failed network fetch, attempting image match for '${url}'`);\r\n\r\n                    const matches = url.match(/imageid=([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12})/);\r\n\r\n                    if (matches) {\r\n                        const imageId = matches[1];\r\n                        console.log(`(via catch) Returning image match for '${url}' from local database`);\r\n                        return this.imageFromLocalDatabase(imageId);\r\n                    } else {\r\n                        console.log(`(via catch) Failed to match image id in url '${url}'`);\r\n                        return Promise.reject(null);\r\n                    }\r\n                })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} imageId\r\n     * @returns {Promise}\r\n     */\r\n    imageFromLocalDatabase(imageId) {\r\n        const image = new OccurrenceImage();\r\n\r\n        console.log('attempting retrieval of image data from local database');\r\n\r\n        return Model.retrieveFromLocal(imageId, image).then((image) => {\r\n            console.log(`Retrieved image '${imageId}' from indexeddb.`);\r\n            if (image.file) {\r\n                const headers = new Headers();\r\n                headers.append('Content-Type', image.file.type);\r\n\r\n                return new Response(image.file, {\r\n                    \"status\": 200,\r\n                    \"statusText\": \"OK image response from IndexedDb\"\r\n                });\r\n            } else {\r\n                console.log(`No local file object associated with retrieved image '${imageId}' from indexeddb.`);\r\n                return Promise.reject(`No local file object associated with retrieved image '${imageId}' from indexeddb.`);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update consists in opening the cache, performing a network request and\r\n     * storing the new response data.\r\n     *\r\n     * @param {Request} request\r\n     * @returns {Promise<Response>}\r\n     */\r\n    update(request) {\r\n        request = new Request(request, {mode: 'cors', credentials: 'omit'});\r\n\r\n        console.log(`Attempting fetch and cache update of ${request.url}`);\r\n\r\n        return caches.open(this.CACHE_VERSION).then((cache) => {\r\n            return fetch(request, {cache: \"no-cache\"}).then((response) => {\r\n                if (response.ok) {\r\n                    console.log(`(re-)caching ${request.url}`);\r\n                    return cache.put(request, response).then(() => {\r\n                        return cache.match(request);\r\n                    });\r\n                } else {\r\n                    console.log(`Request during cache update failed for ${request.url}`);\r\n                    console.log({'failed cache response': response});\r\n                    return Promise.reject('Request during cache update failed, not caching.');\r\n                }\r\n            }).catch((error) => {\r\n                console.log(`Cache attempt failed for ${request.url}: error was ${error}`);\r\n                return Promise.reject(`Cache attempt failed for ${request.url}: error was ${error}`);\r\n            });\r\n        });\r\n    }\r\n}\n\n/**\r\n * @external BsbiDb\r\n */\r\n\r\n/**\r\n *\r\n */\r\nclass TaxaLoadedHook {\r\n    static callbackStack = [];\r\n\r\n    static taxaLoadedEntryPoint() {\r\n        Taxon.rawTaxa = BsbiDb.TaxonNames;\r\n        while (TaxaLoadedHook.callbackStack.length) {\r\n            const callback = TaxaLoadedHook.callbackStack.shift();\r\n            try {\r\n                callback();\r\n            } catch (e) {\r\n                console.log({'Exception after taxon load' : e});\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<any>|Promise<void>}\r\n     */\r\n    static onceTaxaLoaded() {\r\n        if (BsbiDb.hasOwnProperty('TaxonNames')) {\r\n            return Promise.resolve();\r\n        } else {\r\n            if (!BsbiDb.taxonNamesLoadedEntryPoint) {\r\n                BsbiDb.taxonNamesLoadedEntryPoint = TaxaLoadedHook.taxaLoadedEntryPoint;\r\n            }\r\n\r\n            return new Promise(\r\n                (resolve) => {\r\n                    TaxaLoadedHook.callbackStack.push(resolve);\r\n                }\r\n            );\r\n        }\r\n    }\r\n}\n\n/**\r\n *\r\n * @param {string} separator\r\n * @param {string} finalSeparator\r\n * @param {Array.<string>} list\r\n * @return string\r\n */\r\nfunction formattedImplode(separator, finalSeparator, list) {\r\n    if (list.length > 2) {\r\n        const last = list.pop();\r\n        return `${list.join(separator + ' ')} ${finalSeparator} ${last}`;\r\n    } else {\r\n        return list.join(` ${finalSeparator} `);\r\n    }\r\n}\n\nexport { App, AppController, BSBIServiceWorker, EventHarness, InternalAppError, Model, NotFoundError, Occurrence, OccurrenceImage, StaticContentController, Survey, SurveyPickerController, TaxaLoadedHook, Taxon, TaxonError, UUID_REGEX, escapeHTML, formattedImplode, uuid };\n//# sourceMappingURL=index.js.map\n","import {App} from \"bsbi-app-framework\";\r\n//import {NotFoundView} from \"bsbi-app-framework-view\";\r\n\r\nexport const PROJECT_ID_NYPH = 2;\r\n\r\nexport const FORAGE_NAME = 'Nyph App2023';\r\n\r\nexport class NyphApp extends App {\r\n    /**\r\n     * @type {number}\r\n     */\r\n    projectId = PROJECT_ID_NYPH;\r\n\r\n    static forageName = FORAGE_NAME;\r\n\r\n    //static LOAD_SURVEYS_ENDPOINT = '/loadsurveys.php';\r\n\r\n    //static EVENT_OCCURRENCE_ADDED = 'occurrenceadded';\r\n    //static EVENT_SURVEYS_CHANGED = 'surveyschanged';\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static devMode = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.initialiseSurveyFieldsMirror();\r\n    }\r\n\r\n    _coreSurveyFields = [\r\n        'recorder',\r\n        'email'\r\n    ];\r\n\r\n    _coreSurveyFieldCache = [\r\n\r\n    ];\r\n\r\n    /**\r\n     * Sets handlers to allow certain survey fields to be duplicated from last current survey to new survey\r\n     * used for email address and primary recorder name\r\n     */\r\n    initialiseSurveyFieldsMirror() {\r\n        this.addListener(App.EVENT_NEW_SURVEY, () => {\r\n            console.log('Try to initialise core fields of new survey.');\r\n            if (this._coreSurveyFieldCache) {\r\n                console.log({'Using cached survey values' : this._coreSurveyFieldCache});\r\n                for (let key of this._coreSurveyFields) {\r\n                    this.currentSurvey.attributes[key] = this._coreSurveyFieldCache[key];\r\n                }\r\n            }\r\n        });\r\n\r\n        this.addListener(App.EVENT_SURVEYS_CHANGED, () => {\r\n            if (this.currentSurvey && !this.currentSurvey.isNew) {\r\n                for (let key of this._coreSurveyFields) {\r\n                    this._coreSurveyFieldCache[key] = this.currentSurvey.attributes[key];\r\n                }\r\n\r\n                console.log({'Saved core survey fields' : this._coreSurveyFieldCache});\r\n            }\r\n        });\r\n\r\n        this.addListener(App.EVENT_RESET_SURVEYS, () => {\r\n            this._coreSurveyFieldCache = [];\r\n            console.log('Have reset core survey field cache.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A convoluted approach is used to avoid requirement to import NotFoundView\r\n     * (as that bloats the service worker, by pulling in the full view library and bootstrap)\r\n     *\r\n     * @type {NotFoundView}\r\n     */\r\n    notFoundViewObject;\r\n\r\n    notFoundView() {\r\n        this.notFoundViewObject.display();\r\n    }\r\n\r\n    // notFoundView() {\r\n    //     const view = new NotFoundView();\r\n    //     view.display();\r\n    // }\r\n}\r\n","// service worker for Nyph app\r\n\r\n// based around the 'Cache and update' recipe along with many modifications\r\n// see https://serviceworke.rs\r\n\r\n'use strict';\r\n\r\nimport {BSBIServiceWorker} from \"bsbi-app-framework\";\r\nimport {FORAGE_NAME} from \"../framework/NyphApp\";\r\n\r\n// noinspection JSUnusedLocalSymbols,ES6ConvertVarToLetConst\r\nvar BsbiDb = BsbiDb || {scriptVersions: { TaxonNames : [] } };\r\n\r\n// mainly aiming to determine whether '/app/' or '/testapp/'\r\nlet pathPrefix = location.pathname.split('/')[1];\r\n\r\n// kill after 2023-03-01 to prevent the app perpetuating itself\r\nif ((new Date).toJSON().slice(0,10) >= '2023-03-01') {\r\n    throw new Error(\"Built-in expiry date has passed for NYPH.\");\r\n}\r\n\r\nconst serviceWorker = new BSBIServiceWorker();\r\nserviceWorker.initialise({\r\n    forageName : FORAGE_NAME,\r\n\r\n    postPassThroughWhitelist : /^https:\\/\\/__DOMAIN_REGEX__\\/loadsurveys.php/,\r\n    postImageUrlMatch : /^https:\\/\\/__DOMAIN_REGEX__\\/saveimage.php/,\r\n    getImageUrlMatch : /^https:\\/\\/__DOMAIN_REGEX__\\/image\\.php/,\r\n    interceptUrlMatches : new RegExp(`^https://__DOMAIN_REGEX__/${pathPrefix}/|^https://__DOMAIN_REGEX__/${pathPrefix}$`),\r\n    ignoreUrlMatches : new RegExp(`^https://__DOMAIN_REGEX__/${pathPrefix}/app\\.m?js|^https://__DOMAIN_REGEX__/${pathPrefix}/serviceworker\\.m?js|^https://__DOMAIN_REGEX__/${pathPrefix}/manifest\\.webmanifest|^https://__DOMAIN_REGEX__/${pathPrefix}/index\\.html|^https://api\\.mapbox\\.com`),\r\n    indexUrl : `https://__DOMAIN__/${pathPrefix}/index.html`,\r\n\r\n    // postPassThroughWhitelist : /^https:\\/\\/__DOMAIN_REGEX__\\/loadsurveys.php/,\r\n    // postImageUrlMatch : /^https:\\/\\/__DOMAIN_REGEX__\\/saveimage.php/,\r\n    // getImageUrlMatch : /^https:\\/\\/__DOMAIN_REGEX__\\/image\\.php/,\r\n    // interceptUrlMatches : /^https:\\/\\/__DOMAIN_REGEX__\\/app\\/|^https:\\/\\/__DOMAIN_REGEX__\\/app$/,\r\n    // ignoreUrlMatches : /^https:\\/\\/__DOMAIN_REGEX__\\/app\\/app\\.js|^https:\\/\\/__DOMAIN_REGEX__\\/app\\/serviceworker\\.js|^https:\\/\\/__DOMAIN_REGEX__\\/app\\/manifest\\.webmanifest|^https:\\/\\/__DOMAIN_REGEX__\\/app\\/index\\.html|^https:\\/\\/api\\.mapbox\\.com/,\r\n    // indexUrl : 'https://__DOMAIN__/app/index.html',\r\n\r\n    urlCacheSet : [\r\n        './index.html',\r\n        './app.mjs?version=__BSBI_APP_VERSION__',\r\n        './manifest.webmanifest',\r\n        '/appcss/app.__BSBI_APP_VERSION__.css', // note no leading '.' - this is an absolute path\r\n        '/appcss/theme.css',\r\n        //'/img/gwh_logo1_tsp.png',\r\n        '/img/icons/favicon-32x32.png',\r\n        '/img/icons/favicon-16x16.png',\r\n        '/img/icons/android-icon-192x192.png',\r\n        '/img/nyph_final@2x.png',\r\n        //'/img/icons/gwh_logo1_tsp-512x512.png',\r\n        //'/img/BSBIlong.png',\r\n        'https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Round',\r\n        //'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css',\r\n        '/js/taxonnames.js.php',\r\n        //'https://database.bsbi.org/js/taxonnames.js.php',\r\n        //'https://code.jquery.com/jquery-3.3.1.slim.min.js',\r\n        //'https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js',\r\n        //'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js',\r\n        'https://fonts.googleapis.com/css2?family=Gentium+Basic&display=swap',\r\n        // am not caching files under api.mapbox.com\r\n        // so instead serve this locally\r\n        //'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.2/mapbox-gl-geocoder.min.js',\r\n        '/js/mapbox-gl-geocoder-v4.7.2.min.js'\r\n    ],\r\n    passThroughNoCache : /^https:\\/\\/api\\.mapbox\\.com|^https:\\/\\/events\\.mapbox\\.com|^https:\\/\\/browser-update\\.org/,\r\n    version : '__BSBI_APP_VERSION__'\r\n});\r\n"],"names":[],"mappings":"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"}