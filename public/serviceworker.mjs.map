{"version":3,"file":"serviceworker.mjs","sources":["../../js-british-isles-gridrefs/dist/gridrefutils.mjs","../../bsbi-app-framework/dist/esm/index.js","../src/serviceworker/worker.js","../src/framework/NyphApp.js"],"sourcesContent":["const deg2rad = Math.PI / 180;\r\nconst rad2deg = 180.0 / Math.PI;\n\nclass LatLng {\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tlat;\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tlng;\r\n\r\n\t/**\r\n\t * represents lat lng\r\n\t *\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t * @constructor\r\n\t */\r\n\tconstructor(lat, lng) {\r\n\t\tthis.lat = lat;\r\n\t\tthis.lng = lng;\r\n\t};\r\n\r\n\tstatic _transform(lat, lon, a, e, h, a2, e2, xp, yp, zp, xr, yr, zr, s) {\r\n\t\t// convert to cartesian; lat, lon are radians\r\n\t\tconst sf = s * 0.000001;\r\n\t\tlet v = a / (Math.sqrt(1 - (e * (Math.sin(lat) * Math.sin(lat)))));\r\n\t\tconst x = (v + h) * Math.cos(lat) * Math.cos(lon);\r\n\t\tconst y = (v + h) * Math.cos(lat) * Math.sin(lon);\r\n\t\tconst z = ((1 - e) * v + h) * Math.sin(lat);\r\n\t\t// transform cartesian\r\n\t\tconst xrot = (xr / 3600) * deg2rad;\r\n\t\tconst yrot = (yr / 3600) * deg2rad;\r\n\t\tconst zrot = (zr / 3600) * deg2rad;\r\n\t\tconst hx = x + (x * sf) - (y * zrot) + (z * yrot) + xp;\r\n\t\tconst hy = (x * zrot) + y + (y * sf) - (z * xrot) + yp;\r\n\t\tconst hz = (-1 * x * yrot) + (y * xrot) + z + (z * sf) + zp;\r\n\t\t// Convert back to lat, lon\r\n\t\tlon = Math.atan(hy / hx);\r\n\t\tconst p = Math.sqrt((hx * hx) + (hy * hy));\r\n\t\tlat = Math.atan(hz / (p * (1 - e2)));\r\n\t\tv = a2 / (Math.sqrt(1 - e2 * (Math.sin(lat) * Math.sin(lat))));\r\n\t\tlet errvalue = 1.0;\r\n\t\tlet lat0 = 0;\r\n\t\twhile (errvalue > 0.001) {\r\n\t\t\tlat0 = Math.atan((hz + e2 * v * Math.sin(lat)) / p);\r\n\t\t\terrvalue = Math.abs(lat0 - lat);\r\n\t\t\tlat = lat0;\r\n\t\t}\r\n\t\t//h = p / Math.cos(lat) - v;\r\n\t\t//var geo = { latitude: lat, longitude: lon, height: h };  // object to hold lat and lon\r\n\t\treturn (new LatLng(lat, lon));\r\n\t}\r\n\r\n\t//helper\r\n\tstatic _Marc(bf0, n, phi0, phi) {\r\n\t\treturn bf0 * (((1 + n + ((5 / 4) * (n * n)) + ((5 / 4) * (n * n * n))) * (phi - phi0))\r\n\t\t\t- (((3 * n) + (3 * (n * n)) + ((21 / 8) * (n * n * n))) * (Math.sin(phi - phi0)) * (Math.cos(phi + phi0)))\r\n\t\t\t+ ((((15 / 8) * (n * n)) + ((15 / 8) * (n * n * n))) * (Math.sin(2 * (phi - phi0))) * (Math.cos(2 * (phi + phi0))))\r\n\t\t\t- (((35 / 24) * (n * n * n)) * (Math.sin(3 * (phi - phi0))) * (Math.cos(3 * (phi + phi0)))));\r\n\t};\r\n\r\n}\n\n/**\r\n * represents lat lng as WGS84 (google map form)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\n\r\nclass LatLngWGS84 extends LatLng {\r\n\tconstructor(lat, lng) {\r\n\t\tsuper(lat, lng);\r\n\t}\r\n}\n\n/**\r\n * represents lat lng as OSGB1936 (Ordnance Survey projection)\r\n *\r\n * @param {number} lat\r\n * @param {number} lng\r\n * @constructor\r\n */\r\nclass LatLngGB extends LatLng {\r\n\r\n\tconstructor(lat, lng) {\r\n\t\tsuper(lat, lng);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_WGS84() {\r\n\t\t//airy1830 = new RefEll(6377563.396, 6356256.909);\r\n\t\tlet a = 6377563.396; //airy1830.maj;\r\n\t\t//var b        = 6356256.909; //airy1830.min;\r\n\t\tlet eSquared = 0.00667054007; // ((maj * maj) - (min * min)) / (maj * maj); // airy1830.ecc;\r\n\t\tconst phi = this.lat * deg2rad; // (Math.PI / 180)(this.lat);\r\n\t\tconst sinPhi = Math.sin(phi);\r\n\t\tconst lambda = this.lng * deg2rad; // (Math.PI / 180)(this.lng);\r\n\t\tconst v = a / (Math.sqrt(1 - eSquared * (sinPhi * sinPhi)));\r\n\t\t//H = 0; // height\r\n\t\tconst x = v * Math.cos(phi) * Math.cos(lambda);\r\n\t\tconst y = v * Math.cos(phi) * Math.sin(lambda);\r\n\t\tconst z = ((1 - eSquared) * v) * sinPhi;\r\n\r\n\t\tconst tx = 446.448;\r\n\t\tconst ty = -124.157;\r\n\t\tconst tz = 542.060;\r\n\t\tconst s = -0.0000204894;\r\n\t\tconst rx = 0.000000728190110241429; // (Math.PI / 180)( 0.00004172222);\r\n\t\tconst ry = 0.000001197489772948010; // (Math.PI / 180)( 0.00006861111);\r\n\t\tconst rz = 0.000004082615892268120; // (Math.PI / 180)( 0.00023391666);\r\n\r\n\t\tconst xB = tx + (x * (1 + s)) + (-rx * y) + (ry * z);\r\n\t\tconst yB = ty + (rz * x) + (y * (1 + s)) + (-rx * z);\r\n\t\tconst zB = tz + (-ry * x) + (rx * y) + (z * (1 + s));\r\n\r\n\t\t//wgs84 = new RefEll(6378137.000, 6356752.3141);\r\n\t\ta = 6378137.000; // wgs84.maj;\r\n\t\t//var b        = 6356752.3141; // wgs84.min;\r\n\t\teSquared = 0.00669438003;// ((maj * maj) - (min * min)) / (maj * maj); //wgs84.ecc;\r\n\r\n\t\t//lambdaB = (180 / Math.PI)(Math.atan(yB / xB));\r\n\t\tconst p = Math.sqrt((xB * xB) + (yB * yB));\r\n\t\tlet phiN = Math.atan(zB / (p * (1 - eSquared)));\r\n\r\n\t\tfor (let i = 1; i < 10; ++i) {\r\n\t\t\tlet sinPhiN = Math.sin(phiN); // this must be in the for loop as phiN is variable\r\n\t\t\tphiN = Math.atan((zB + (eSquared * (a / (Math.sqrt(1 - eSquared * (sinPhiN * sinPhiN)))) * sinPhiN)) / p);\r\n\t\t}\r\n\r\n\t\t//this.lat = rad2deg * phiN;\r\n\t\t//this.lng = rad2deg * (Math.atan(yB / xB)); // lambdaB;\r\n\r\n\t\treturn new LatLngWGS84(rad2deg * phiN, rad2deg * (Math.atan(yB / xB)));\r\n\t};\r\n\r\n// /**\r\n//  * converts lat and lon (OSGB36) to OS northings and eastings\r\n//  *\r\n//  * @returns {GridCoordsGB}\r\n//  */\r\n// LatLngGB.prototype.to_os_coords = function() {\r\n//     var phi = this.lat * deg2rad; // convert latitude to radians\r\n//     var lam = this.lng * deg2rad; // convert longitude to radians\r\n//     var a = 6377563.396; // OSGB semi-major axis\r\n//     var b = 6356256.91; // OSGB semi-minor axis\r\n//     var e0 = 400000; // easting of false origin\r\n//     var n0 = -100000; // northing of false origin\r\n//     var f0 = 0.9996012717; // OSGB scale factor on central meridian\r\n//     var e2 = 0.0066705397616; // OSGB eccentricity squared\r\n//     var lam0 = -0.034906585039886591; // OSGB false east\r\n//     var phi0 = 0.85521133347722145; // OSGB false north\r\n//     var af0 = a * f0;\r\n//     var bf0 = b * f0;\r\n//\r\n//     // easting\r\n//     var slat2 = Math.sin(phi) * Math.sin(phi);\r\n//     var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n//     var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n//     var eta2 = (nu / rho) - 1;\r\n//     var p = lam - lam0;\r\n//     var IV = nu * Math.cos(phi);\r\n//     var clat3 = Math.pow(Math.cos(phi), 3);\r\n//     var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n//     var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n//     var clat5 = Math.pow(Math.cos(phi), 5);\r\n//     var tlat4 = Math.pow(Math.tan(phi), 4);\r\n//     var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n//     var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n//\r\n//     // northing\r\n//     var n = (af0 - bf0) / (af0 + bf0);\r\n//     var M = LatLng._Marc(bf0, n, phi0, phi);\r\n//     var I = M + (n0);\r\n//     var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n//     var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n//     var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n//     var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n//\r\n// \treturn new GridCoordsGB(Math.round(east), Math.round(north));\r\n// };\r\n\r\n\t/**\r\n\t *\r\n\t * @param {LatLngWGS84} latLngWGS84\r\n\t * @returns {LatLngGB}\r\n\t */\r\n\tstatic from_wgs84(latLngWGS84) {\r\n\r\n\t\t//first off convert to radians\r\n\t\tconst radWGlat = latLngWGS84.lat * deg2rad;\r\n\t\tconst radWGlon = latLngWGS84.lng * deg2rad;\r\n\t\t//these are the values for WGS84(GRS80) to OSGB36(Airy)\r\n\t\tconst a = 6378137; // WGS84_AXIS\r\n\t\tconst e = 0.00669438037928458; // WGS84_ECCENTRIC\r\n\t\t//var h = height; // height above datum (from GPGGA sentence)\r\n\t\tconst h = 0;\r\n\t\tconst a2 = 6377563.396; // OSGB_AXIS\r\n\t\tconst e2 = 0.0066705397616; // OSGB_ECCENTRIC\r\n\t\tconst xp = -446.448;\r\n\t\tconst yp = 125.157;\r\n\t\tconst zp = -542.06;\r\n\t\tconst xr = -0.1502;\r\n\t\tconst yr = -0.247;\r\n\t\tconst zr = -0.8421;\r\n\t\tconst s = 20.4894;\r\n\r\n\t\t// convert to cartesian; lat, lon are in radians\r\n\t\tconst sf = s * 0.000001;\r\n\t\tlet v = a / (Math.sqrt(1 - (e * Math.sin(radWGlat) * Math.sin(radWGlat))));\r\n\t\tconst x = (v + h) * Math.cos(radWGlat) * Math.cos(radWGlon);\r\n\t\tconst y = (v + h) * Math.cos(radWGlat) * Math.sin(radWGlon);\r\n\t\tconst z = ((1 - e) * v + h) * Math.sin(radWGlat);\r\n\r\n\t\t// transform cartesian\r\n\t\tconst xrot = (xr / 3600) * deg2rad;\r\n\t\tconst yrot = (yr / 3600) * deg2rad;\r\n\t\tconst zrot = (zr / 3600) * deg2rad;\r\n\t\tconst hx = x + (x * sf) - (y * zrot) + (z * yrot) + xp;\r\n\t\tconst hy = (x * zrot) + y + (y * sf) - (z * xrot) + yp;\r\n\t\tconst hz = (-1 * x * yrot) + (y * xrot) + z + (z * sf) + zp;\r\n\r\n\t\t// Convert back to lat, lon\r\n\t\tconst newLon = Math.atan(hy / hx);\r\n\t\tconst p = Math.sqrt((hx * hx) + (hy * hy));\r\n\t\tlet newLat = Math.atan(hz / (p * (1 - e2)));\r\n\t\tv = a2 / (Math.sqrt(1 - e2 * (Math.sin(newLat) * Math.sin(newLat))));\r\n\t\tlet errvalue = 1.0;\r\n\t\tlet lat0 = 0;\r\n\t\twhile (errvalue > 0.001) {\r\n\t\t\tlat0 = Math.atan((hz + e2 * v * Math.sin(newLat)) / p);\r\n\t\t\terrvalue = Math.abs(lat0 - newLat);\r\n\t\t\tnewLat = lat0;\r\n\t\t}\r\n\r\n\t\treturn new LatLngGB(newLat * rad2deg, newLon * rad2deg);\r\n\t}\r\n}\n\n/**\r\n * represents lat lng as Modified Airy (Irish grid projection)\r\n *\r\n */\r\nclass LatLngIE extends LatLng {\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t */\r\n\tconstructor(lat, lng) {\r\n\t\tsuper(lat, lng);\r\n\t};\r\n\r\n// /**\r\n//  * converts lat and lon (modified Airy) to OSI northings and eastings\r\n//  *\r\n//  * @returns {GridCoordsIE}\r\n//  */\r\n// to_os_coords() {\r\n//     //var deg2rad = Math.PI / 180;\r\n//     //var rad2deg = 180.0 / Math.PI;\r\n//\r\n//     var phi = this.lat * deg2rad; // convert latitude to radians\r\n//     var lam = this.lng * deg2rad; // convert longitude to radians\r\n//     var a = 6377340.189;      // OSI semi-major\r\n//     var b = 6356034.447;      // OSI semi-minor\r\n//     var e0 = 200000;          // OSI easting of false origin\r\n//     var n0 = 250000;          // OSI northing of false origin\r\n//     var f0 = 1.000035;        // OSI scale factor on central meridian\r\n//     var e2 = 0.00667054015;   // OSI eccentricity squared\r\n//     var lam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n//     var phi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n//     var af0 = a * f0;\r\n//     var bf0 = b * f0;\r\n//\r\n//     // easting\r\n//     var slat2 = Math.sin(phi) * Math.sin(phi);\r\n//     var nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n//     var rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n//     var eta2 = (nu / rho) - 1;\r\n//     var p = lam - lam0;\r\n//     var IV = nu * Math.cos(phi);\r\n//     var clat3 = Math.pow(Math.cos(phi), 3);\r\n//     var tlat2 = Math.tan(phi) * Math.tan(phi);\r\n//     var V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n//     var clat5 = Math.pow(Math.cos(phi), 5);\r\n//     var tlat4 = Math.pow(Math.tan(phi), 4);\r\n//     var VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n//     var east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n//\r\n//     // northing\r\n//     var n = (af0 - bf0) / (af0 + bf0);\r\n//     var M = LatLng._Marc(bf0, n, phi0, phi);\r\n//     var I = M + (n0);\r\n//     var II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n//     var III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n//     var IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n//     var north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n//\r\n// \t//return {x: Math.round(east), y: Math.round(north)};\r\n//\r\n// \t/*\r\n// \treturn (east > 0 && north > 0) ?\r\n// \t\tnew GridCoordsIE(Math.round(east), Math.round(north))\r\n// \t\t:\r\n// \t\tnull;\r\n// \t*/\r\n//    return new GridCoordsIE(Math.round(east), Math.round(north));\r\n// };\r\n\r\n\t/**\r\n\t * convert Irish projection to WGS84 (for Google Maps)\r\n\t * see http://www.carabus.co.uk/ll_ngr.html\r\n\t */\r\n\tto_WGS84() {\r\n\t\tconst IRISH_AXIS = 6377340.189;\r\n\t\tconst IRISH_ECCENTRIC = 0.00667054015;\r\n\r\n\t\tconst WGS84_AXIS = 6378137;\r\n\t\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\t\t/*\r\n\t\t * IE\r\n\t\ta = 6377340.189;      // OSI semi-major\r\n\t\tb = 6356034.447;      // OSI semi-minor\r\n\t\te0 = 200000;          // OSI easting of false origin\r\n\t\tn0 = 250000;          // OSI northing of false origin\r\n\t\tf0 = 1.000035;        // OSI scale factor on central meridian\r\n\t\te2 = 0.00667054015;   // OSI eccentricity squared\r\n\t\tlam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n\t\tphi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n\t\t*/\r\n\r\n\t\t//height = 0;\r\n\r\n\t\tconst latLngRadians = LatLng._transform(this.lat * deg2rad, this.lng * deg2rad, IRISH_AXIS, IRISH_ECCENTRIC, 0, WGS84_AXIS, WGS84_ECCENTRIC,\r\n\t\t\t482.53, -130.596, 564.557, -1.042, -0.214, -0.631, -8.15);\r\n\r\n\t\treturn new LatLngWGS84(latLngRadians.lat * rad2deg, latLngRadians.lng * rad2deg);\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @param {LatLngWGS84} latLngWGS84\r\n\t * @returns {LatLngIE}\r\n\t */\r\n\tstatic from_wgs84(latLngWGS84) {\r\n\t\tconst phip = latLngWGS84.lat * deg2rad;\r\n\t\tconst lambdap = latLngWGS84.lng * deg2rad;\r\n\r\n\t\tconst IRISH_AXIS = 6377340.189;\r\n\t\tconst IRISH_ECCENTRIC = 0.00667054015;\r\n\r\n\t\tconst WGS84_AXIS = 6378137;\r\n\t\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\r\n\t\t/*\r\n\t\t * IE\r\n\t\ta = 6377340.189;      // OSI semi-major\r\n\t\tb = 6356034.447;      // OSI semi-minor\r\n\t\te0 = 200000;          // OSI easting of false origin\r\n\t\tn0 = 250000;          // OSI northing of false origin\r\n\t\tf0 = 1.000035;        // OSI scale factor on central meridian\r\n\t\te2 = 0.00667054015;   // OSI eccentricity squared\r\n\t\tlam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n\t\tphi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n\t\t */\r\n\r\n\t\tconst height = 0;\r\n\t\tconst latlng = LatLng._transform(phip, lambdap, WGS84_AXIS, WGS84_ECCENTRIC, height, IRISH_AXIS, IRISH_ECCENTRIC,\r\n\t\t\t-482.53, 130.596, -564.557, 1.042, 0.214, 0.631, 8.15);\r\n\r\n\t\treturn new LatLngIE(latlng.lat * rad2deg, latlng.lng * rad2deg);\r\n\t}\r\n}\n\nclass LatLngCI extends LatLng {\r\n\t/**\r\n\t * represents lat lng as INT24 (CI grid projection)\r\n\t *\r\n\t * @constructor\r\n\t * @param {number} lat\r\n\t * @param {number} lng\r\n\t */\r\n\tconstructor(lat, lng) {\r\n\t\tsuper(lat, lng);\r\n\t};\r\n\r\n\t// /**\r\n\t//  * converts lat and lon to CI northings and eastings\r\n\t//  *\r\n\t//  * @returns GridCoordsCI\r\n\t//  */\r\n\t// to_os_coords() {\r\n\t// \tvar phi = this.lat * deg2rad; // convert latitude to radians\r\n\t// \tvar lam = this.lng * deg2rad; // convert longitude to radians\r\n\t// \tvar a = 6378388.000;      // OSI semi-major\r\n\t// \tvar b = 6356911.946;      // OSI semi-minor\r\n\t// \tvar e0 = 500000;          // OSI easting of false origin\r\n\t// \tvar n0 = 0;          // OSI northing of false origin\r\n\t// \tvar f0 = 0.9996;        // OSI scale factor on central meridian\r\n\t// \tvar e2 = 0.0067226700223333;   // OSI eccentricity squared\r\n\t// \tvar lam0 = -0.0523598775598;   // OSI false east\r\n\t// \tvar phi0 = 0;    // OSI false north\r\n\t// \tvar af0 = a * f0;\r\n\t// \tvar bf0 = b * f0;\r\n\t//\r\n\t// \t// easting\r\n\t// \tvar slat2 = Math.sin(phi) * Math.sin(phi);\r\n\t// \tvar nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n\t// \tvar rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n\t// \tvar eta2 = (nu / rho) - 1;\r\n\t// \tvar p = lam - lam0;\r\n\t// \tvar IV = nu * Math.cos(phi);\r\n\t// \tvar clat3 = Math.pow(Math.cos(phi), 3);\r\n\t// \tvar tlat2 = Math.tan(phi) * Math.tan(phi);\r\n\t// \tvar V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n\t// \tvar clat5 = Math.pow(Math.cos(phi), 5);\r\n\t// \tvar tlat4 = Math.pow(Math.tan(phi), 4);\r\n\t// \tvar VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n\t// \tvar east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\t//\r\n\t// \t// northing\r\n\t// \tvar n = (af0 - bf0) / (af0 + bf0);\r\n\t// \tvar M = LatLng._Marc(bf0, n, phi0, phi);\r\n\t// \tvar I = M + (n0);\r\n\t// \tvar II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n\t// \tvar III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n\t// \tvar IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n\t// \tvar north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\t//\r\n\t// \t\t//return {x: Math.round(east), y: Math.round(north)};\r\n\t// \treturn new GridCoordsCI(Math.round(east), Math.round(north));\r\n\t// };\r\n\r\n\t/**\r\n\t *\r\n\t * @param {LatLngWGS84} latLngWGS84\r\n\t * @returns {LatLngCI}\r\n\t */\r\n\tstatic from_wgs84(latLngWGS84) {\r\n\t\tconst phip = latLngWGS84.lat * deg2rad;\r\n\t\tconst lambdap = latLngWGS84.lng * deg2rad;\r\n\r\n\t\tconst CI_AXIS = 6378388.000;\r\n\t\tconst CI_ECCENTRIC = 0.0067226700223333;\r\n\r\n\t\tconst WGS84_AXIS = 6378137;\r\n\t\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\r\n\r\n\t\t/*\r\n\t\t * CI\r\n\t\t a = 6378388.000;       // INT24 ED50 semi-major\r\n\t\t b = 6356911.946;       // INT24 ED50 semi-minor\r\n\t\t e0 = 500000;           // CI easting of false origin\r\n\t\t n0 = 0;                // CI northing of false origin\r\n\t\t f0 = 0.9996;           // INT24 ED50 scale factor on central meridian\r\n\t\t e2 = 0.0067226700223333;  // INT24 ED50 eccentricity squared\r\n\t\t lam0 = -0.0523598775598;  // CI false east\r\n\t\t phi0 = 0 * deg2rad;       // CI false north\r\n\t\t */\r\n\r\n\t\tconst height = 0;\r\n\t\tconst latlng = LatLng._transform(phip, lambdap, WGS84_AXIS, WGS84_ECCENTRIC, height, CI_AXIS, CI_ECCENTRIC,\r\n\t\t\t83.901, 98.127, 118.635, 0, 0, 0, 0);\r\n\r\n\t\treturn new LatLngCI(latlng.lat * rad2deg, latlng.lng * rad2deg);\r\n\t};\r\n}\n\n/**\r\n * abstract representation of a grid-ref co-ordinate pair\r\n * ( *not a grid-ref string* )\r\n *\r\n */\r\nclass GridCoords {\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\tx;\r\n\r\n\t/**\r\n\t * @type {number}\r\n\t */\r\n\ty;\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t * @abstract\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @abstract\r\n\t * @returns {string}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @abstract\r\n\t * @returns {?string}\r\n\t */\r\n\tto_hectad() {\r\n\t}\r\n\r\n\t/**\r\n\t * tetrad letters ordered by easting then northing (steps of 2000m)\r\n\t * i.e. (x*4) + y\r\n\t *\r\n\t * where x and y are integer of (10km remainder / 2)\r\n\t * @type {string}\r\n\t */\r\n\tstatic tetradLetters = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\r\n\r\n\t/**\r\n\t * tetrad letters ordered by northing then easting (steps of 2000m)\r\n\t * i.e. (y*5) + x\r\n\t *\r\n\t * where x and y are integer of (10km remainder / 2)\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tstatic tetradLettersRowFirst = 'AFKQVBGLRWCHMSXDINTYEJPUZ';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} lat WGS84 degrees\r\n\t * @param {number} lng WGS84 degrees\r\n\t * @returns {GridCoords}\r\n\t */\r\n\tstatic from_latlng(lat, lng) {\r\n\t\t// test if GB\r\n\t\tif (lng >= -8.74 && lat > 49.88) {\r\n\t\t\t// lng extreme must accommodate St Kilda\r\n\r\n\t\t\t//let os = LatLngGB.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\t\t\tconst os = GridCoords._from_gb_latlng(LatLngGB.from_wgs84(new LatLngWGS84(lat, lng)));\r\n\t\t\tif (os.x >= 0 && os.is_gb_hectad()) {\r\n\t\t\t\treturn os;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// test if Irish\r\n\t\tif (lng < -5.3 && lat > 51.34 && lng > -11 && lat < 55.73) {\r\n\t\t\t//let osI = LatLngIE.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\t\t\tconst osI = GridCoords._from_ie_latlng(LatLngIE.from_wgs84(new LatLngWGS84(lat, lng)));\r\n\r\n\t\t\tif (osI.x < 0 || osI.y < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\treturn osI;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//let osCi = LatLngCI.from_wgs84(new LatLngWGS84(lat, lng)).to_os_coords();\r\n\t\t\tconst osCi = GridCoords._from_ci_latlng(LatLngCI.from_wgs84(new LatLngWGS84(lat, lng)));\r\n\r\n\t\t\tif (osCi.x >= 500000 && osCi.x < 600000 && osCi.y >= 5400000 && osCi.y < 5600000) {\r\n\t\t\t\treturn osCi;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null; //not a valid location\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {LatLngGB} latLng GB projected latitude / longitude (degrees)\r\n\t */\r\n\tstatic _from_gb_latlng(latLng) {\r\n\t\tconst phi = latLng.lat * deg2rad; // convert latitude to radians\r\n\t\tconst lam = latLng.lng * deg2rad; // convert longitude to radians\r\n\t\tconst a = 6377563.396; // OSGB semi-major axis\r\n\t\tconst b = 6356256.91; // OSGB semi-minor axis\r\n\t\tconst e0 = 400000; // easting of false origin\r\n\t\tconst n0 = -100000; // northing of false origin\r\n\t\tconst f0 = 0.9996012717; // OSGB scale factor on central meridian\r\n\t\tconst e2 = 0.0066705397616; // OSGB eccentricity squared\r\n\t\tconst lam0 = -0.034906585039886591; // OSGB false east\r\n\t\tconst phi0 = 0.85521133347722145; // OSGB false north\r\n\t\tconst af0 = a * f0;\r\n\t\tconst bf0 = b * f0;\r\n\r\n\t\t// easting\r\n\t\tconst slat2 = Math.sin(phi) * Math.sin(phi);\r\n\t\tconst nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n\t\tconst rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n\t\tconst eta2 = (nu / rho) - 1;\r\n\t\tconst p = lam - lam0;\r\n\t\tconst IV = nu * Math.cos(phi);\r\n\t\tconst clat3 = Math.pow(Math.cos(phi), 3);\r\n\t\tconst tlat2 = Math.tan(phi) * Math.tan(phi);\r\n\t\tconst V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n\t\tconst clat5 = Math.pow(Math.cos(phi), 5);\r\n\t\tconst tlat4 = Math.pow(Math.tan(phi), 4);\r\n\t\tconst VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n\t\tconst east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n\t\t// northing\r\n\t\tconst n = (af0 - bf0) / (af0 + bf0);\r\n\t\tconst M = LatLng._Marc(bf0, n, phi0, phi);\r\n\t\tconst I = M + (n0);\r\n\t\tconst II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n\t\tconst III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n\t\tconst IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n\t\tconst north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n\t\treturn new GridCoordsGB(Math.round(east), Math.round(north));\r\n\t}\r\n\r\n\t/**\r\n\t * converts lat and lon (modified Airy) to OSI northings and eastings\r\n\t *\r\n\t * @param {LatLngIE} latLng Irish projected latitude / longitude (degrees)\r\n\t * @returns {GridCoordsIE}\r\n\t */\r\n\tstatic _from_ie_latlng(latLng) {\r\n\t\tconst phi = latLng.lat * deg2rad; // convert latitude to radians\r\n\t\tconst lam = latLng.lng * deg2rad; // convert longitude to radians\r\n\t\tconst a = 6377340.189;      // OSI semi-major\r\n\t\tconst b = 6356034.447;      // OSI semi-minor\r\n\t\tconst e0 = 200000;          // OSI easting of false origin\r\n\t\tconst n0 = 250000;          // OSI northing of false origin\r\n\t\tconst f0 = 1.000035;        // OSI scale factor on central meridian\r\n\t\tconst e2 = 0.00667054015;   // OSI eccentricity squared\r\n\t\tconst lam0 = -0.13962634015954636615389526147909;   // OSI false east\r\n\t\tconst phi0 = 0.93375114981696632365417456114141;    // OSI false north\r\n\t\tconst af0 = a * f0;\r\n\t\tconst bf0 = b * f0;\r\n\r\n\t\t// easting\r\n\t\tconst slat2 = Math.sin(phi) * Math.sin(phi);\r\n\t\tconst nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n\t\tconst rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n\t\tconst eta2 = (nu / rho) - 1;\r\n\t\tconst p = lam - lam0;\r\n\t\tconst IV = nu * Math.cos(phi);\r\n\t\tconst clat3 = Math.pow(Math.cos(phi), 3);\r\n\t\tconst tlat2 = Math.tan(phi) * Math.tan(phi);\r\n\t\tconst V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n\t\tconst clat5 = Math.pow(Math.cos(phi), 5);\r\n\t\tconst tlat4 = Math.pow(Math.tan(phi), 4);\r\n\t\tconst VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n\t\tconst east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n\t\t// northing\r\n\t\tconst n = (af0 - bf0) / (af0 + bf0);\r\n\t\tconst M = LatLng._Marc(bf0, n, phi0, phi);\r\n\t\tconst I = M + (n0);\r\n\t\tconst II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n\t\tconst III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n\t\tconst IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n\t\tconst north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n\t\treturn new GridCoordsIE(Math.round(east), Math.round(north));\r\n\t}\r\n\r\n\t/**\r\n\t * converts lat and lon to CI northings and eastings\r\n\t * @param {LatLngCI} latLng Channel Islands projected latitude / longitude (degrees)\r\n\t *\r\n\t * @returns GridCoordsCI\r\n\t */\r\n\tstatic _from_ci_latlng(latLng) {\r\n\t\tconst phi = latLng.lat * deg2rad; // convert latitude to radians\r\n\t\tconst lam = latLng.lng * deg2rad; // convert longitude to radians\r\n\t\tconst a = 6378388.000;      // OSI semi-major\r\n\t\tconst b = 6356911.946;      // OSI semi-minor\r\n\t\tconst e0 = 500000;          // OSI easting of false origin\r\n\t\tconst n0 = 0;          // OSI northing of false origin\r\n\t\tconst f0 = 0.9996;        // OSI scale factor on central meridian\r\n\t\tconst e2 = 0.0067226700223333;   // OSI eccentricity squared\r\n\t\tconst lam0 = -0.0523598775598;   // OSI false east\r\n\t\tconst phi0 = 0;    // OSI false north\r\n\t\tconst af0 = a * f0;\r\n\t\tconst bf0 = b * f0;\r\n\r\n\t\t// easting\r\n\t\tconst slat2 = Math.sin(phi) * Math.sin(phi);\r\n\t\tconst nu = af0 / (Math.sqrt(1 - (e2 * (slat2))));\r\n\t\tconst rho = (nu * (1 - e2)) / (1 - (e2 * slat2));\r\n\t\tconst eta2 = (nu / rho) - 1;\r\n\t\tconst p = lam - lam0;\r\n\t\tconst IV = nu * Math.cos(phi);\r\n\t\tconst clat3 = Math.pow(Math.cos(phi), 3);\r\n\t\tconst tlat2 = Math.tan(phi) * Math.tan(phi);\r\n\t\tconst V = (nu / 6) * clat3 * ((nu / rho) - tlat2);\r\n\t\tconst clat5 = Math.pow(Math.cos(phi), 5);\r\n\t\tconst tlat4 = Math.pow(Math.tan(phi), 4);\r\n\t\tconst VI = (nu / 120) * clat5 * ((5 - (18 * tlat2)) + tlat4 + (14 * eta2) - (58 * tlat2 * eta2));\r\n\t\tconst east = e0 + (p * IV) + (Math.pow(p, 3) * V) + (Math.pow(p, 5) * VI);\r\n\r\n\t\t// northing\r\n\t\tconst n = (af0 - bf0) / (af0 + bf0);\r\n\t\tconst M = LatLng._Marc(bf0, n, phi0, phi);\r\n\t\tconst I = M + (n0);\r\n\t\tconst II = (nu / 2) * Math.sin(phi) * Math.cos(phi);\r\n\t\tconst III = ((nu / 24) * Math.sin(phi) * Math.pow(Math.cos(phi), 3)) * (5 - Math.pow(Math.tan(phi), 2) + (9 * eta2));\r\n\t\tconst IIIA = ((nu / 720) * Math.sin(phi) * clat5) * (61 - (58 * tlat2) + tlat4);\r\n\t\tconst north = I + ((p * p) * II) + (Math.pow(p, 4) * III) + (Math.pow(p, 6) * IIIA);\r\n\r\n\t\treturn new GridCoordsCI(Math.round(east), Math.round(north));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting\r\n\t * @param {number} northing\r\n\t * @return {string} tetrad letter\r\n\t */\r\n\tstatic calculate_tetrad(easting, northing) {\r\n\t\treturn (easting >= 0 && northing >= 0) ?\r\n\t\t\tGridCoords.tetradLetters.charAt((Math.floor(easting % 10000 / 2000) * 5) + Math.floor(northing % 10000 / 2000)) :\r\n\t\t\t'';\r\n\t};\r\n\r\n\ttetradLetter() {\r\n\t\treturn (this.x >= 0 && this.y >= 0) ?\r\n\t\t\tGridCoords.tetradLetters.charAt((Math.floor(this.x % 10000 / 2000) * 5) + Math.floor(this.y % 10000 / 2000)) :\r\n\t\t\t'';\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn this.x + ',' + this.y;\r\n\t};\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} letters\r\n * @param {number} e metres\r\n * @param {number} n metres\r\n * @param {number} precision metres\r\n * @returns {String}\r\n */\r\nconst _e_n_to_gr = function (letters, e, n, precision) {\r\n\tlet eString = ('00000' + Math.floor(e));\r\n\tlet nString = ('00000' + Math.floor(n));\r\n\r\n\tif (precision === 2000) {\r\n\t\treturn letters +\r\n\t\t\teString.charAt(eString.length - 5) + nString.charAt(nString.length - 5) +\r\n\t\t\tGridCoords.calculate_tetrad(e, n);\r\n\t} else if (precision === 100000) {\r\n\t\treturn letters;\r\n\t} else {\r\n\t\tif (precision === 5000) {\r\n\t\t\t// ignore quadrant and treat as hectad\r\n\t\t\tprecision = 10000;\r\n\t\t}\r\n\r\n\t\tlet logPrecision = Math.round(Math.log10(precision));\r\n\t\treturn letters +\r\n\t\t\t(logPrecision ?\r\n\t\t\t\t\t(eString.slice(-5, -logPrecision) + nString.slice(-5, -logPrecision))\r\n\t\t\t\t\t:\r\n\t\t\t\t\t(eString.slice(-5) + nString.slice(-5))\r\n\t\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n *\r\n */\r\nclass GridCoordsGB extends GridCoords {\r\n\t/**\r\n\t * @type {GridCoordsGB}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting\r\n\t * @param {number} northing\r\n\t */\r\n\tconstructor(easting, northing) {\r\n\t\tsuper();\r\n\t\tthis.x = easting | 0;\r\n\t\tthis.y = northing | 0;\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'GB';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tstatic gbHectads = '';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @returns {string}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t\tconst hundredkmE = this.x / 100000 | 0; // Math.floor(this.x / 100000);\r\n\t\tconst hundredkmN = this.y / 100000 | 0; // Math.floor(this.y / 100000);\r\n\t\tlet firstLetter;\r\n\t\tif (hundredkmN < 5) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'S' : 'T';\r\n\t\t} else if (hundredkmN < 10) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'N' : 'O';\r\n\t\t} else {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'H' : 'J';\r\n\t\t}\r\n\r\n\r\n\t\tlet index = 65 + ((4 - (hundredkmN % 5)) * 5) + (hundredkmE % 5);\r\n\r\n\t\tif (index >= 73) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\tconst secondLetter = String.fromCharCode(index);\r\n\r\n\t\treturn _e_n_to_gr(\r\n\t\t\tfirstLetter + secondLetter,\r\n\t\t\t(this.x - (100000 * hundredkmE)),\r\n\t\t\t(this.y - (100000 * hundredkmN)),\r\n\t\t\tprecision ? precision : 1\r\n\t\t);\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @return {string} hectad\r\n\t */\r\n\tto_hectad() {\r\n\t\tconst hundredkmE = this.x / 100000 | 0; // Math.floor(easting / 100000);\r\n\t\tconst hundredkmN = this.y / 100000 | 0; // Math.floor(northing / 100000);\r\n\t\tlet firstLetter;\r\n\t\tif (hundredkmN < 5) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'S' : 'T';\r\n\t\t} else if (hundredkmN < 10) {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'N' : 'O';\r\n\t\t} else {\r\n\t\t\tfirstLetter = (hundredkmE < 5) ? 'H' : 'J';\r\n\t\t}\r\n\r\n\t\tlet index = 65 + ((4 - (hundredkmN % 5)) * 5) + (hundredkmE % 5);\r\n\r\n\t\tif (index >= 73) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn firstLetter +\r\n\t\t\tString.fromCharCode(index) + // secondLetter\r\n\t\t\t(((this.x - (100000 * hundredkmE)) / 10000) | 0) +\r\n\t\t\t(((this.y - (100000 * hundredkmN)) / 10000) | 0);\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tis_gb_hectad() {\r\n\t\treturn GridCoordsGB.gbHectads.indexOf(this.to_hectad()) !== -1;\r\n\t};\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t\t//airy1830 = RefEll::airy1830(); //new RefEll(6377563.396, 6356256.909);\r\n\t\t//var OSGB_F0  = 0.9996012717;\r\n\t\t//var N0       = -100000.0;\r\n\t\tconst E0 = 400000.0;\r\n\t\tconst phi0 = 0.85521133347722; //deg2rad(49.0);\r\n\t\tconst lambda0 = -0.034906585039887; //deg2rad(-2.0);\r\n\t\tconst a = 6377563.396; // airy1830->maj;\r\n\t\t//var b        = 6356256.909; // airy1830->min;\r\n\t\tconst eSquared = 0.00667054007; // ((maj * maj) - (min * min)) / (maj * maj); // airy1830->ecc;\r\n\t\t//var phi      = 0.0;\r\n\t\t//var lambda   = 0.0;\r\n\t\tconst E = this.x;\r\n\t\tconst N = this.y;\r\n\t\tconst n = 0.0016732203289875; //(a - b) / (a + b);\r\n\t\tlet M;\r\n\t\tlet phiPrime = ((N + 100000) / (a * 0.9996012717)) + phi0;\r\n\r\n\t\t// 15 / 8 === 1.875\r\n\t\t// 5 / 4 === 1.25\r\n\t\t// 21 / 8 === 2.625\r\n\r\n\t\tdo {\r\n\t\t\tM = N + 100000 - (\r\n\t\t\t\t6353722.489 // (b * OSGB_F0)\r\n\t\t\t\t* ((1.0016767257674 // * (((1 + n + (1.25 * n * n) + (1.25 * n * n * n))\r\n\t\t\t\t\t\t* (phiPrime - phi0))\r\n\t\t\t\t\t- (0.00502807228247412 // - (((3 * n) + (3 * n * n) + (2.625 * n * n * n))\r\n\t\t\t\t\t\t* Math.sin(phiPrime - phi0)\r\n\t\t\t\t\t\t* Math.cos(phiPrime + phi0))\r\n\t\t\t\t\t+ (((1.875 * n * n) + (1.875 * n * n * n))\r\n\t\t\t\t\t\t* Math.sin(2.0 * (phiPrime - phi0))\r\n\t\t\t\t\t\t* Math.cos(2.0 * (phiPrime + phi0)))\r\n\t\t\t\t\t- (((35.0 / 24.0) * n * n * n)\r\n\t\t\t\t\t\t* Math.sin(3.0 * (phiPrime - phi0))\r\n\t\t\t\t\t\t* Math.cos(3.0 * (phiPrime + phi0)))));\r\n\r\n\t\t\tphiPrime += M / 6375020.48098897; // (N - N0 - M) / (a * OSGB_F0);\r\n\t\t} while (M >= 0.001);\r\n\r\n\t\tconst sinphiPrime2 = Math.sin(phiPrime) * Math.sin(phiPrime);\r\n\t\tconst tanphiPrime2 = Math.tan(phiPrime) * Math.tan(phiPrime);\r\n\t\tconst secphiPrime = 1.0 / Math.cos(phiPrime);\r\n\r\n\t\tconst v = a * 0.9996012717 * Math.pow(1.0 - eSquared * sinphiPrime2, -0.5);\r\n\r\n\t\tconst rho =\r\n\t\t\ta\r\n\t\t\t* 0.9996012717\r\n\t\t\t* (1.0 - eSquared)\r\n\t\t\t* Math.pow(1.0 - eSquared * sinphiPrime2, -1.5);\r\n\t\tconst etaSquared = (v / rho) - 1.0;\r\n\t\tconst VII = Math.tan(phiPrime) / (2 * rho * v);\r\n\t\tconst VIII =\r\n\t\t\t(Math.tan(phiPrime) / (24.0 * rho * Math.pow(v, 3.0)))\r\n\t\t\t* (5.0\r\n\t\t\t\t+ (3.0 * tanphiPrime2)\r\n\t\t\t\t+ etaSquared\r\n\t\t\t\t- (9.0 * tanphiPrime2 * etaSquared));\r\n\t\tconst IX =\r\n\t\t\t(Math.tan(phiPrime) / (720.0 * rho * Math.pow(v, 5.0)))\r\n\t\t\t* (61.0\r\n\t\t\t\t+ (90.0 * tanphiPrime2)\r\n\t\t\t\t+ (45.0 * tanphiPrime2 * tanphiPrime2));\r\n\t\tconst X = secphiPrime / v;\r\n\t\tconst XI =\r\n\t\t\t(secphiPrime / (6.0 * v * v * v))\r\n\t\t\t* ((v / rho) + (2 * tanphiPrime2));\r\n\t\tconst XII =\r\n\t\t\t(secphiPrime / (120.0 * Math.pow(v, 5.0)))\r\n\t\t\t* (5.0\r\n\t\t\t\t+ (28.0 * tanphiPrime2)\r\n\t\t\t\t+ (24.0 * tanphiPrime2 * tanphiPrime2));\r\n\t\tconst XIIA =\r\n\t\t\t(secphiPrime / (5040.0 * Math.pow(v, 7.0)))\r\n\t\t\t* (61.0\r\n\t\t\t\t+ (662.0 * tanphiPrime2)\r\n\t\t\t\t+ (1320.0 * tanphiPrime2 * tanphiPrime2)\r\n\t\t\t\t+ (720.0\r\n\t\t\t\t\t* tanphiPrime2\r\n\t\t\t\t\t* tanphiPrime2\r\n\t\t\t\t\t* tanphiPrime2));\r\n\t\tconst phi =\r\n\t\t\tphiPrime\r\n\t\t\t- (VII * Math.pow(E - E0, 2.0))\r\n\t\t\t+ (VIII * Math.pow(E - E0, 4.0))\r\n\t\t\t- (IX * Math.pow(E - E0, 6.0));\r\n\t\tconst lambda =\r\n\t\t\tlambda0\r\n\t\t\t+ (X * (E - E0))\r\n\t\t\t- (XI * Math.pow(E - E0, 3.0))\r\n\t\t\t+ (XII * Math.pow(E - E0, 5.0))\r\n\t\t\t- (XIIA * Math.pow(E - E0, 7.0));\r\n\r\n\t\treturn (new LatLngGB(rad2deg * phi, rad2deg * lambda)).to_WGS84();\r\n\t}\r\n}\r\n\r\nclass GridCoordsIE extends GridCoords {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'IE';\r\n\r\n\t/**\r\n\t * @type {GridCoordsIE}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting metres\r\n\t * @param {number} northing metres\r\n\t * @constructor\r\n\t * @returns {GridCoordsIE}\r\n\t */\r\n\tconstructor(easting, northing) {\r\n\t\tsuper();\r\n\t\tthis.x = easting;\r\n\t\tthis.y = northing;\r\n\t}\r\n\r\n\r\n\tstatic irishGrid = {\r\n\t\t0: ['V', 'Q', 'L', 'F', 'A'],\r\n\t\t1: ['W', 'R', 'M', 'G', 'B'],\r\n\t\t2: ['X', 'S', 'N', 'H', 'C'],\r\n\t\t3: ['Y', 'T', 'O', 'J', 'D']\r\n\t};\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t\t//converts OSI coords to lat/long.\r\n\r\n\t\t// modified from OSGBtoLL, Equations from USGS Bulletin 1532\r\n\t\t//East Longitudes are positive, West longitudes are negative.\r\n\t\t//North latitudes are positive, South latitudes are negative\r\n\t\t//Lat and Long are in decimal degrees.\r\n\t\t//Written by Chuck Gantz- chuck.gantz@globalstar.com\r\n\r\n\t\t// php transliteration by TH\r\n\r\n\t\t//OSIENorthing = this.y;\r\n\t\t//OSIEEasting = this.x;\r\n\r\n\t\t//constants\r\n\t\t//PI = 3.14159265;\r\n\t\t//FOURTHPI = M_PI / 4.0;\r\n\t\t//DEG2RAD = M_PI / 180.0;\r\n\t\t//RAD2DEG = 180.0 / M_PI;\r\n\t\t// ////////////////\r\n\r\n\t\tconst k0 = 1.000035; // scale factor\r\n\t\t//double a;\r\n\t\t//double eccPrimeSquared;\r\n\t\t//double N1, T1, C1, R1, D, M;\r\n\t\tconst LongOrigin = -8.0;\r\n\t\t//LatOrigin = 53.5;\r\n\t\t//LatOriginRad = LatOrigin * DEG2RAD;\r\n\r\n\t\t//UK\r\n\t\t//majoraxis=6377563.396; //Airy\r\n\t\t//a=6377563.396;\r\n\t\t//minoraxis = 6356256.91; //Airy\r\n\r\n\t\t//IE\r\n\t\t//majoraxis = 6377340.189; //Airy\r\n\t\tconst a = 6377340.189;\r\n\t\t//minoraxis = 6356034.447; //Airy\r\n\r\n\t\t//eccSquared = (majoraxis * majoraxis - minoraxis * minoraxis) / (majoraxis * majoraxis);\r\n\t\tconst eccSquared = 0.0066705402933363;\r\n\r\n\t\t//e1 = (1-Math.sqrt(1-eccSquared))/(1+Math.sqrt(1-eccSquared));\r\n\t\tconst e1 = 0.0016732203841521;\r\n\t\t//error_log(\"eccSquared={eccSquared} e1={e1}\");\r\n\r\n\t\t//only calculate M0 once since it is based on the origin of the OSGB projection, which is fixed\r\n\t\t//M0 = a*((1\t- eccSquared/4\t\t- 3*eccSquared*eccSquared/64\t- 5*eccSquared*eccSquared*eccSquared/256)*LatOriginRad\r\n\t\t//\t- (3*eccSquared/8\t+ 3*eccSquared*eccSquared/32\t+ 45*eccSquared*eccSquared*eccSquared/1024)*Math.sin(2*LatOriginRad)\r\n\t\t//\t+ (15*eccSquared*eccSquared/256 + 45*eccSquared*eccSquared*eccSquared/1024)*Math.sin(4*LatOriginRad)\r\n\t\t//\t- (35*eccSquared*eccSquared*eccSquared/3072)*Math.sin(6*LatOriginRad));\r\n\t\t//error_log(\"M0 = {M0}\");\r\n\t\tconst M0 = 5929615.3530033;\r\n\r\n\t\t//OSGBSquareToRefCoords(OSGBZone, RefEasting, RefNorthing); // Assume supplied MapInfo northing and easting take this into account\r\n\t\tconst x = this.x - 200000.0; //remove 400,000 meter false easting for longitude\r\n\t\tconst y = this.y - 250000.0; //remove 100,000 meter false easting for longitude\r\n\r\n\t\t//eccPrimeSquared = (eccSquared)/(1.0-eccSquared);\r\n\t\tconst eccPrimeSquared = 0.0067153352074207;\r\n\t\t//error_log(\"eccPrimeSquared={eccPrimeSquared}\");\r\n\r\n\t\tconst M = M0 + y / k0;\r\n\t\tconst mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\r\n\r\n\t\tconst phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu)\r\n\t\t\t+ (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu)\r\n\t\t\t+ (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\r\n\t\t//phi1 = phi1Rad*RAD2DEG;\r\n\r\n\t\tconst N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\r\n\t\tconst T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\r\n\t\tconst C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\r\n\t\tconst R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\r\n\t\tconst D = x / (N1 * k0);\r\n\r\n\t\tlet Lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24\r\n\t\t\t+ (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\r\n\t\tLat = Lat * rad2deg;\r\n\r\n\t\tlet Long = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1)\r\n\t\t\t* D * D * D * D * D / 120) / Math.cos(phi1Rad);\r\n\r\n\t\tLong = LongOrigin + Long * rad2deg;\r\n\r\n\t\t//return new LatLng(Lat, Long);\r\n\r\n\t\t//var ll = new LatLngIE(Lat, Long); // Irish projection (modified Airy)\r\n\t\t//ll.IE_to_WGS84(); // google earth uses WGS84\r\n\r\n\t\t//return ll;\r\n\r\n\t\treturn (new LatLngIE(Lat, Long)).to_WGS84();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @returns {String}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t\tconst hundredkmE = (this.x / 100000) | 0,\r\n\t\t\thundredkmN = (this.y / 100000) | 0;\r\n\t\tif (GridCoordsIE.irishGrid[hundredkmE] && GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) {\r\n\r\n\t\t\treturn _e_n_to_gr(GridCoordsIE.irishGrid[hundredkmE][hundredkmN],\r\n\t\t\t\t(this.x - (100000 * hundredkmE)),\r\n\t\t\t\t(this.y - (100000 * hundredkmN)),\r\n\t\t\t\tprecision ? precision : 1\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @return {?string} hectad\r\n\t */\r\n\tto_hectad() {\r\n\t\tconst hundredkmE = (this.x / 100000) | 0,\r\n\t\t\thundredkmN = (this.y / 100000) | 0;\r\n\r\n\t\tif (GridCoordsIE.irishGrid[hundredkmE] && GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) {\r\n\t\t\treturn (GridCoordsIE.irishGrid[hundredkmE][hundredkmN]) + Math.floor((this.x % 100000) / 10000) + Math.floor((this.y % 100000) / 10000);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass GridCoordsCI extends GridCoords {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'CI';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} easting metres\r\n\t * @param {number} northing metres\r\n\t * @constructor\r\n\t * @returns {GridCoordsCI}\r\n\t */\r\n\tconstructor(easting, northing) {\r\n\t\tsuper();\r\n\r\n\t\tthis.x = easting;\r\n\t\tthis.y = northing;\r\n\t}\r\n\r\n\t/**\r\n\t * convert easting,northing to a WGS84 lat lng\r\n\t *\r\n\t * @returns {LatLngWGS84}\r\n\t */\r\n\tto_latLng() {\r\n\t\t//nX = north;\r\n\t\t//ex = east;\r\n\r\n\t\tconst a = 6378388.000;       // INT24 ED50 semi-major\r\n\t\tconst b = 6356911.946;       // INT24 ED50 semi-minor\r\n\t\tconst e0 = 500000;           // easting of false origin\r\n\t\tconst n0 = 0;                // northing of false origin\r\n\t\tconst f0 = 0.9996;           // INT24 ED50 scale factor on central meridian\r\n\t\tconst e2 = 0.0067226700223333;  // INT24 ED50 eccentricity squared\r\n\t\tconst lam0 = -0.0523598775598;  // INT24 ED50 false east\r\n\t\tconst phi0 = 0; //0 * deg2rad;    // INT24 ED50 false north\r\n\r\n\t\tconst af0 = a * f0;\r\n\t\tconst bf0 = b * f0;\r\n\t\tconst n = (af0 - bf0) / (af0 + bf0);\r\n\t\tconst Et = this.x - e0;\r\n\t\tconst phid = _initial_lat(this.y, n0, af0, phi0, n, bf0);\r\n\t\tconst nu = af0 / (Math.sqrt(1 - (e2 * (Math.sin(phid) * Math.sin(phid)))));\r\n\t\tconst rho = (nu * (1 - e2)) / (1 - (e2 * (Math.sin(phid)) * (Math.sin(phid))));\r\n\t\tconst eta2 = (nu / rho) - 1;\r\n\t\tconst tlat2 = Math.tan(phid) * Math.tan(phid);\r\n\t\tconst tlat4 = Math.pow(Math.tan(phid), 4);\r\n\t\tconst tlat6 = Math.pow(Math.tan(phid), 6);\r\n\t\tconst clatm1 = Math.pow(Math.cos(phid), -1);\r\n\t\tconst VII = Math.tan(phid) / (2 * rho * nu);\r\n\t\tconst VIII = (Math.tan(phid) / (24 * rho * (nu * nu * nu))) * (5 + (3 * tlat2) + eta2 - (9 * eta2 * tlat2));\r\n\t\tconst IX = ((Math.tan(phid)) / (720 * rho * Math.pow(nu, 5))) * (61 + (90 * tlat2) + (45 * tlat4));\r\n\t\tconst phip = (phid - ((Et * Et) * VII) + (Math.pow(Et, 4) * VIII) - (Math.pow(Et, 6) * IX));\r\n\t\tconst X = Math.pow(Math.cos(phid), -1) / nu;\r\n\t\tconst XI = (clatm1 / (6 * (nu * nu * nu))) * ((nu / rho) + (2 * (tlat2)));\r\n\t\tconst XII = (clatm1 / (120 * Math.pow(nu, 5))) * (5 + (28 * tlat2) + (24 * tlat4));\r\n\t\tconst XIIA = clatm1 / (5040 * Math.pow(nu, 7)) * (61 + (662 * tlat2) + (1320 * tlat4) + (720 * tlat6));\r\n\t\tconst lambdap = (lam0 + (Et * X) - ((Et * Et * Et) * XI) + (Math.pow(Et, 5) * XII) - (Math.pow(Et, 7) * XIIA));\r\n\r\n\t\t// var WGS84_AXIS = 6378137;\r\n\t\t// var WGS84_ECCENTRIC = 0.00669438037928458;\r\n\t\t//\r\n\t\t// var INT24_AXIS = 6378388.000;\r\n\t\t// var INT24_ECCENTRIC = 0.0067226700223333;\r\n\t\t// var height = 10;  // dummy height\r\n\t\t// //var latLngRadians = LatLng._transform(phip, lambdap, INT24_AXIS, INT24_ECCENTRIC, height, WGS84_AXIS, WGS84_ECCENTRIC, -83.901, -98.127, -118.635, 0, 0, 0, 0);\r\n\r\n\t\tconst latLngRadians = convert_to_wgs(phip, lambdap);\r\n\t\treturn new LatLngWGS84(latLngRadians.lat * rad2deg, latLngRadians.lng * rad2deg);\r\n\r\n\t\t//return (new LatLngCI(rad2deg * phip, rad2deg * lambdap)).to_WGS84()\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} precision metres\r\n\t * @returns {?string}\r\n\t */\r\n\tto_gridref(precision) {\r\n\t\tif (this.y >= 5500000) {\r\n\t\t\treturn _e_n_to_gr('WA', this.x - 500000, this.y - 5500000, precision ? precision : 1);\r\n\t\t} else if (this.y < 5500000) {\r\n\t\t\treturn _e_n_to_gr('WV', this.x - 500000, this.y - 5400000, precision ? precision : 1);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {?string}\r\n\t */\r\n\tto_hectad() {\r\n\t\tif (this.y > 5500000) {\r\n\t\t\treturn 'WA' + this.x.toString().substring(1, 2) + this.y.toString().substring(2, 3);\r\n\t\t} else if (this.y < 5500000) {\r\n\t\t\treturn 'WV' + this.x.toString().substring(1, 2) + this.y.toString().substring(2, 3);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst convert_to_wgs = function (phip, lambdap) {\r\n\tconst WGS84_AXIS = 6378137;\r\n\tconst WGS84_ECCENTRIC = 0.00669438037928458;\r\n\t//OSGB_AXIS = 6377563.396;\r\n\t//OSGB_ECCENTRIC = 0.0066705397616;\r\n\t//IRISH_AXIS = 6377340.189;\r\n\t//IRISH_ECCENTRIC = 0.00667054015;\r\n\tconst INT24_AXIS = 6378388.000;\r\n\tconst INT24_ECCENTRIC = 0.0067226700223333;\r\n\tconst height = 10;  // dummy height\r\n\treturn LatLng._transform(phip, lambdap, INT24_AXIS, INT24_ECCENTRIC, height, WGS84_AXIS, WGS84_ECCENTRIC, -83.901, -98.127, -118.635, 0, 0, 0, 0);\r\n};\r\n\r\nconst _initial_lat = function (north, n0, af0, phi0, n, bf0) {\r\n\tlet phi1 = ((north - n0) / af0) + phi0;\r\n\tlet M = LatLng._Marc(bf0, n, phi0, phi1);\r\n\tlet phi2 = ((north - n0 - M) / af0) + phi1;\r\n\tlet ind = 0;\r\n\twhile ((Math.abs(north - n0 - M) > 0.00001) && (ind < 20))  // max 20 iterations in case of error\r\n\t{\r\n\t\tind += 1;\r\n\t\tphi2 = ((north - n0 - M) / af0) + phi1;\r\n\t\tM = LatLng._Marc(bf0, n, phi0, phi2);\r\n\t\tphi1 = phi2;\r\n\t}\r\n\treturn phi2;\r\n};\n\n/**\r\n * tetrad letters ordered by easting then northing (steps of 2000 m)\r\n * i.e. (x * 4) + y\r\n *\r\n * where x and y are integer of (10 km remainder / 2)\r\n *\r\n * @var string\r\n */\r\nconst TETRAD_LETTERS = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\r\n\r\nclass GridRef {\r\n\r\n\t/**\r\n\t * x,y offsets (in metres) for tetrad letter codes\r\n\t * @type {Object.<string,Array.<number>>}\r\n\t */\r\n\tstatic tetradOffsets = {\r\n\t\tE: [0, 8000], J: [2000, 8000], P: [4000, 8000], U: [6000, 8000], Z: [8000, 8000],\r\n\t\tD: [0, 6000], I: [2000, 6000], N: [4000, 6000], T: [6000, 6000], Y: [8000, 6000],\r\n\t\tC: [0, 4000], H: [2000, 4000], M: [4000, 4000], S: [6000, 4000], X: [8000, 4000],\r\n\t\tB: [0, 2000], G: [2000, 2000], L: [4000, 2000], R: [6000, 2000], W: [8000, 2000],\r\n\t\tA: [0, 0], F: [2000, 0], K: [4000, 0], Q: [6000, 0], V: [8000, 0]\r\n\t};\r\n\r\n\t/**\r\n\t * x,y offsets (in metres) for quadrant codes\r\n\t * @type {{SE: number[], SW: number[], NE: number[], NW: number[]}}\r\n\t */\r\n\tstatic quadrantOffsets = {\r\n\t\tNW: [0, 5000],\r\n\t\tNE: [5000, 5000],\r\n\t\tSW: [0, 0],\r\n\t\tSE: [5000, 0]\r\n\t};\r\n\r\n\t/**\r\n\t * numerical mapping of letters to numbers\r\n\t * 'I' is omitted\r\n\t *\r\n\t * @type {{A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number, J: number, K: number, L: number, M: number, N: number, O: number, P: number, Q: number, R: number, S: number, T: number, U: number, V: number, W: number, X: number, Y: number, Z: number}}\r\n\t */\r\n\tstatic letterMapping = {\r\n\t\tA: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6, H: 7, J: 8, K: 9,\r\n\t\tL: 10, M: 11, N: 12, O: 13, P: 14, Q: 15, R: 16, S: 17, T: 18,\r\n\t\tU: 19, V: 20, W: 21, X: 22, Y: 23, Z: 24\r\n\t};\r\n\r\n\t/**\r\n\t * tetrad letters ordered by easting then northing (steps of 2000m)\r\n\t * i.e. (x*4) + y\r\n\t *\r\n\t * where x and y are integer of (10km remainder / 2)\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tstatic tetradLetters = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpreciseGridRef = '';\r\n\r\n\t/**\r\n\t * length in m (0 marks an invalid value)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tlength = 0;\r\n\r\n\t/**\r\n\t * @type {string}\r\n\t */\r\n\thectad = '';\r\n\r\n\t/**\r\n\t * 10km ref with tetrad suffix or ''\r\n\t * e.g. SD59A\r\n\t * @type {string}\r\n\t */\r\n\ttetrad = '';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\ttetradLetter = '';\r\n\r\n\t/**\r\n\t * quadrant gridref(e.g. NZ34NW)\r\n\t * only set if gridref is defined at 5km or <=1km precision\r\n\t * undefined by default so need to use getter\r\n\t *\r\n\t * read using GridRef::get_quadrant\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tquadrant = '';\r\n\r\n\t/**\r\n\t * quadrant code suffix(e.g. NW, NE, SW, SE)\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tquadrantCode = '';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {GridCoords|null}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\terror = false;\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\terrorMessage = '';\r\n\r\n\tget centrePoint() {\r\n\t\tconst centre = new GridCoords();\r\n\t\tconst halfLength = Math.floor(this.length / 2);\r\n\r\n\t\tcentre.x = this.gridCoords.x + halfLength;\r\n\t\tcentre.y = this.gridCoords.y + halfLength;\r\n\t\treturn centre;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {GridCoords} gridCoords centre-point to test\r\n\t * @param {number} radius default 0 for absolute point\r\n\t */\r\n\tsquareIntersectsPoint(gridCoords, radius = 1) {\r\n\t\tgridCoords.x + this.length;\r\n\t\tgridCoords.y + this.length;\r\n\r\n\t\tif (radius === 1) {\r\n\t\t\treturn (this.gridCoords.x <= gridCoords.x && this.gridCoords.x + this.length > gridCoords.x\r\n\t\t\t\t&& this.gridCoords.y <= gridCoords.y && this.gridCoords.y + this.length > gridCoords.y);\r\n\t\t} else {\r\n\t\t\treturn GridRef._checkOverlap(\r\n\t\t\t\tradius,\r\n\t\t\t\tgridCoords.x, gridCoords.y,\r\n\t\t\t\tthis.gridCoords.x, this.gridCoords.y,\r\n\t\t\t\tthis.gridCoords.x + this.length, this.gridCoords.y + this.length\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * check if any point overlaps the given circle and rectangle\r\n\t * see https://www.geeksforgeeks.org/check-if-any-point-overlaps-the-given-circle-and-rectangle/\r\n\t *\r\n\t * @param {number} R\r\n\t * @param {number} Xc\r\n\t * @param {number} Yc\r\n\t * @param {number} X1\r\n\t * @param {number} Y1\r\n\t * @param {number} X2\r\n\t * @param {number} Y2\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic _checkOverlap(R, Xc, Yc, X1, Y1, X2, Y2) {\r\n\r\n\t\t// Find the nearest point on the\r\n\t\t// rectangle to the center of\r\n\t\t// the circle\r\n\t\tlet Xn = Math.max(X1, Math.min(Xc, X2));\r\n\t\tlet Yn = Math.max(Y1, Math.min(Yc, Y2));\r\n\r\n\t\t// Find the distance between the\r\n\t\t// nearest point and the center\r\n\t\t// of the circle\r\n\t\t// Distance between 2 points,\r\n\t\t// (x1, y1) & (x2, y2) in\r\n\t\t// 2D Euclidean space is\r\n\t\t// ((x1-x2)**2 + (y1-y2)**2)**0.5\r\n\t\tlet Dx = Xn - Xc;\r\n\t\tlet Dy = Yn - Yc;\r\n\t\treturn (Dx * Dx + Dy * Dy) <= R * R;\r\n\t}\r\n\r\n\t/**\r\n\t * Update tetrad using Easting/Northing values (metres)\r\n\t * Hectad should have been set prior to calling.\r\n\t */\r\n\tset_tetrad() {\r\n\t\tthis.tetradLetter = GridRef.tetradLetters.charAt(\r\n\t\t\t((Math.floor((this.gridCoords.x % 10000) / 1000) >> 1) * 5) + (Math.floor((this.gridCoords.y % 10000) / 1000) >> 1));\r\n\r\n\t\tif (!this.tetradLetter) {\r\n\t\t\tthrow new Error(\"Failed to get tetrad letter when processing '\" + this.preciseGridRef + \"', easting=\" + this.gridCoords.x + \" northing=\" + this.gridCoords.y);\r\n\t\t}\r\n\t\tthis.tetrad = this.hectad + this.tetradLetter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} rawPrecision\r\n\t * @param {number} [minPrecision]\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getNormalizedPrecision(rawPrecision, minPrecision) {\r\n\t\treturn rawPrecision > 2000 ? 10000 :\r\n\t\t\t(rawPrecision > 1000 ? 2000 :\r\n\t\t\t\t\t(rawPrecision > 100 ? 1000 :\r\n\t\t\t\t\t\t\t(rawPrecision > 10 ? 100 :\r\n\t\t\t\t\t\t\t\t\t(rawPrecision > 1 ? 10 :\r\n\t\t\t\t\t\t\t\t\t\t\tminPrecision ? minPrecision : 1\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * used for GB grid-refs and invoked as parent for the Channel Islands\r\n\t *\r\n\t * @param {?number} significantPrecision default null (precision in metres of centroid diameter)\r\n\t *\r\n\t * @return {string}\r\n\t */\r\n\ttoHtml(significantPrecision = null) {\r\n\t\tlet formattedGr;\r\n\r\n\t\tif (!significantPrecision || significantPrecision === this.length) {\r\n\t\t\tif (this.length <= 1000) {\r\n\t\t\t\tlet halfNumLen = ((this.preciseGridRef.length - 2) / 2) | 0;\r\n\t\t\t\tformattedGr = this.preciseGridRef.substring(0, 2) +\r\n\t\t\t\t\t\"<span class='sig'>\" + this.preciseGridRef.substring(2, 2 + halfNumLen) +\r\n\t\t\t\t\t\"</span><span class='sig'>\" + this.preciseGridRef.substring(2 + halfNumLen) + \"</span>\";\r\n\t\t\t} else {\r\n\t\t\t\tformattedGr = this.preciseGridRef;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.length === 2000) {\r\n\t\t\t\t// reduced precision means greying the tetrad code\r\n\r\n\t\t\t\tformattedGr = `${this.hectad}<span class='nonsig'>${this.tetradLetter}</span>`;\r\n\t\t\t} else if (this.length === 5000) {\r\n\t\t\t\t// reduced precision means greying the quadrant code\r\n\r\n\t\t\t\tformattedGr = `${this.hectad}<span class='nonsig'>${this.quadrantCode}</span>`;\r\n\t\t\t} else {\r\n\t\t\t\tif (significantPrecision > 5000) {\r\n\t\t\t\t\t// large and probably spurious precision value - so grey-out the entire grid-reference\r\n\t\t\t\t\tformattedGr = `<span class='nonsig'>${this.preciseGridRef}</span>`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet columns = (5 + Math.log10(1 / significantPrecision)) | 0; // number of sig figures\r\n\t\t\t\t\tlet halfNumLen = ((this.preciseGridRef.length - 2) / 2) | 0;\r\n\r\n\t\t\t\t\tformattedGr = this.preciseGridRef.substring(0, 2) + \"<span class='sig'>\" + this.preciseGridRef.substring(2, 2 + columns) + \"</span>\" +\r\n\t\t\t\t\t\t\"<span class='nonsig'>\" + this.preciseGridRef.substring(columns + 2, 2 + halfNumLen) + \"</span>\" +\r\n\t\t\t\t\t\t\"<span class='sig'>\" + this.preciseGridRef.substring(2 + halfNumLen, 2 + halfNumLen + columns) + \"</span>\" +\r\n\t\t\t\t\t\t\"<span class='nonsig'>\" + this.preciseGridRef.substring(2 + halfNumLen + columns) + \"</span>\"\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn formattedGr;\r\n\t}\r\n\r\n\t/**\r\n\t * Interleaves xy co-ordinate pairs at each resolution\r\n\t * also includes hectad level precision as a separate 5 x 5 tier\r\n\t * DOES NOT SUPPORT QUADRANTS, which are stripped out.\r\n\t *\r\n\t * @param {string} gridRefString\r\n\t * @return {string}\r\n\t * @throws Error\r\n\t */\r\n\tstatic interleave(gridRefString) {\r\n\t\tif (!gridRefString) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tlet tetrad;\r\n\r\n\t\tif (gridRefString.length > 3) {\r\n\r\n\t\t\tif (gridRefString.includes('NENWSESW', gridRefString.length - 2)) {\r\n\t\t\t//if (str_contains('NENWSESW', substr(gridRefString, -2))) {\r\n\r\n\t\t\t\tgridRefString = gridRefString.substring(0, gridRefString.length - 2);\r\n\t\t\t\ttetrad = '';\r\n\r\n\t\t\t} else if (gridRefString.substring(gridRefString.length - 1).match(/a-z/i)) {\r\n\t\t\t//} else if (ctype_alpha(substr(gridRefString, -1))) {\r\n\r\n\t\t\t\tlet o = TETRAD_LETTERS.indexOf(gridRefString.substring(gridRefString.length - 1));\r\n\t\t\t\t//let o = strpos(TETRAD_LETTERS, substr(gridRefString, -1));\r\n\r\n\t\t\t\tgridRefString = gridRefString.substring(0, gridRefString.length - 1);\r\n\t\t\t\ttetrad = `${(o / 5)|0}${o % 5}`;\r\n\t\t\t} else {\r\n\t\t\t\ttetrad = '';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttetrad = '';\r\n\t\t}\r\n\r\n\t\tswitch (gridRefString.length) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn '';\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\treturn `_${gridRefString}`;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\treturn gridRefString;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\treturn `_${gridRefString}${tetrad}`;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\treturn `${gridRefString}${tetrad}`;\r\n\r\n\t\t\tcase 5:\r\n\t\t\t\treturn `_${gridRefString.substring(0, 2)}${gridRefString[3]}${gridRefString[2] >> 1}${gridRefString[4] >> 1}${gridRefString[2]}${gridRefString[4]}`;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\treturn `${gridRefString.substring(0, 3)}${gridRefString[4]}${gridRefString[3] >> 1}${gridRefString[5] >> 1}${gridRefString[3]}${gridRefString[5]}`;\r\n\r\n\t\t\tcase 7:\r\n\t\t\t\treturn `_${gridRefString.substring(0, 2)}${gridRefString[4]}${gridRefString[2] >> 1}${gridRefString[5] >> 1}${gridRefString[2]}${gridRefString[5]}${gridRefString[3]}${gridRefString[6]}`;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\treturn `${gridRefString.substring(0, 3)}${gridRefString[5]}${gridRefString[3] >> 1}${gridRefString[6] >> 1}${gridRefString[3]}${gridRefString[6]}${gridRefString[4]}${gridRefString[7]}`;\r\n\r\n\t\t\tcase 9:\r\n\t\t\t\treturn `_${gridRefString.substring(0, 2)}${gridRefString[5]}${gridRefString[2] >> 1}${gridRefString[6] >> 1}${gridRefString[2]}${gridRefString[6]}${gridRefString[3]}${gridRefString[7]}${gridRefString[4]}${gridRefString[8]}`;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\treturn `${gridRefString.substring(0, 3)}${gridRefString[6]}${gridRefString[3] >> 1}${gridRefString[7] >> 1}${gridRefString[3]}${gridRefString[7]}${gridRefString[4]}${gridRefString[8]}${gridRefString[5]}${gridRefString[9]}`;\r\n\r\n\t\t\tcase 11:\r\n\t\t\t\treturn `_${gridRefString.substring(0, 2)}${gridRefString[6]}${gridRefString[2] >> 1}${gridRefString[7] >> 1}${gridRefString[2]}${gridRefString[7]}${gridRefString[3]}${gridRefString[8]}${gridRefString[4]}${gridRefString[9]}${gridRefString[5]}${gridRefString[10]}`;\r\n\r\n\t\t\tcase 12:\r\n\t\t\t\treturn `${gridRefString.substring(0, 3)}${gridRefString[7]}${gridRefString[3] >> 1}${gridRefString[8] >> 1}${gridRefString[3]}${gridRefString[8]}${gridRefString[4]}${gridRefString[9]}${gridRefString[5]}${gridRefString[10]}${gridRefString[6]}${gridRefString[11]}`;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Bad grid-ref length '${gridRefString.length}' for interleaving.`);\r\n\t\t}\r\n\r\n\t\t// return match (strlen(gridRefString)) {\r\n\t\t// \t    0 => '',\r\n\t\t// \t\t1 => \"_{gridRefString}\",\r\n\t\t// \t\t2 => gridRefString,\r\n\t\t// \t\t3 => \"_{gridRefString}{tetrad}\",\r\n\t\t// \t\t4 => \"{gridRefString}{tetrad}\",\r\n\t\t// \t\t5 => \"_\" . substr(gridRefString, 0, 2) . gridRefString[3] . (gridRefString[2] >> 1) . (gridRefString[4] >> 1) . gridRefString[2] . gridRefString[4],\r\n\t\t// \t\t6 => substr(gridRefString, 0, 3) . gridRefString[4] . (gridRefString[3] >> 1) . (gridRefString[5] >> 1) . gridRefString[3] . gridRefString[5],\r\n\t\t// \t\t7 => '_' . substr(gridRefString, 0, 2) . gridRefString[4] . (gridRefString[2] >> 1) . (gridRefString[5] >> 1) . gridRefString[2] . gridRefString[5] . gridRefString[3] . gridRefString[6],\r\n\t\t// \t\t8 => substr(gridRefString, 0, 3) . gridRefString[5] . (gridRefString[3] >> 1) . (gridRefString[6] >> 1) . gridRefString[3] . gridRefString[6] . gridRefString[4] . gridRefString[7],\r\n\t\t// \t\t9 => '_' . substr(gridRefString, 0, 2) . gridRefString[5] . (gridRefString[2] >> 1) . (gridRefString[6] >> 1) . gridRefString[2] . gridRefString[6] . gridRefString[3] . gridRefString[7] . gridRefString[4] . gridRefString[8],\r\n\t\t// \t\t10 => substr(gridRefString, 0, 3) . gridRefString[6] . (gridRefString[3] >> 1) . (gridRefString[7] >> 1) . gridRefString[3] . gridRefString[7] . gridRefString[4] . gridRefString[8] . gridRefString[5] . gridRefString[9],\r\n\t\t// \t\t11 => '_' . substr(gridRefString, 0, 2) . gridRefString[6] . (gridRefString[2] >> 1) . (gridRefString[7] >> 1) . gridRefString[2] . gridRefString[7] . gridRefString[3] . gridRefString[8] . gridRefString[4] . gridRefString[9] . gridRefString[5] . gridRefString[10],\r\n\t\t// \t\t12 => substr(gridRefString, 0, 3) . gridRefString[7] . (gridRefString[3] >> 1) . (gridRefString[8] >> 1) . gridRefString[3] . gridRefString[8] . gridRefString[4] . gridRefString[9] . gridRefString[5] . gridRefString[10] . gridRefString[6] . gridRefString[11],\r\n\t\t// \tdefault => throw new Exception(\"Bad gridref length '\" . strlen(gridRefString) . \"' for interleaving.\"),\r\n\t\t// };\r\n\t}\r\n}\n\nclass GridRefCI extends GridRef {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'CI';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {typeof GridCoordsCI}\r\n\t */\r\n\tGridCoords = GridCoordsCI;\r\n\r\n\t/**\r\n\t * @type {GridCoordsCI}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.parse_well_formed = this.fromString;\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tfromString(rawGridRef) {\r\n\t\tlet trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t.\\/-]+/gu, '').toUpperCase();\r\n\t\tlet tetradCode = '';\r\n\t\tlet enl;\r\n\r\n\t\tif (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRef.quadrantOffsets.hasOwnProperty(trimmedLocality.substring(trimmedLocality.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = trimmedLocality.substring(trimmedLocality.length - 2);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substring(0, trimmedLocality.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\ttetradCode = trimmedLocality.charAt(trimmedLocality.length - 1);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substring(0, trimmedLocality.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (/^(W[AV](?:\\d\\d){1,5})$/.test(trimmedLocality)) {\r\n\t\t\tif ((enl = GridRefCI.gridref_string_to_e_n_l(trimmedLocality))) {\r\n\t\t\t\tthis.length = enl.length;\r\n\r\n\t\t\t\tthis.gridCoords = new GridCoordsCI(enl.e, enl.n);\r\n\t\t\t\tthis.hectad = this.gridCoords.to_gridref(10000);\r\n\r\n\t\t\t\tif (this.length === 10000 && (tetradCode || this.quadrantCode)) {\r\n\t\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + tetradCode;\r\n\t\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// quadrant\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + this.quadrantCode;\r\n\t\t\t\t\t\tthis.tetradLetter = '';\r\n\t\t\t\t\t\tthis.tetrad = '';\r\n\t\t\t\t\t\tthis.quadrant = this.preciseGridRef;\r\n\t\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\r\n\t\t\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.error = true;\r\n\t\t\t\tthis.errorMessage = 'Grid reference format not understood (odd length).';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// no match\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Channel Island grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param {string} gridRef plain string without tetrad or quadrant suffix\r\n\t * @return {(boolean|{e : number, n : number, length : number})}\r\n\t * returns false on error or object {'e' : easting, 'n' : northing, 'length' : length}\r\n\t */\r\n\tstatic gridref_string_to_e_n_l(gridRef) {\r\n\t\tlet northOffset, x, y, length;\r\n\r\n\t\t// assume modern alphabetical sheet ref\r\n\t\tlet chars = gridRef.substring(0, 2);\r\n\r\n\t\tif (chars === 'WA') {\r\n\t\t\tnorthOffset = 5500000;\r\n\t\t} else if (chars === 'WV') {\r\n\t\t\tnorthOffset = 5400000;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Bad Channel Island grid letters: '\" + chars + \"'\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet ref = gridRef.substring(2);\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tx = ref.charAt(0) * 10000;\r\n\t\t\t\ty = ref.charAt(1) * 10000;\r\n\t\t\t\tlength = 10000; //10 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tx = ref.substring(0, 2) * 1000;\r\n\t\t\t\ty = ref.substring(2) * 1000;\r\n\t\t\t\tlength = 1000; //1 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tx = ref.substring(0, 3) * 100;\r\n\t\t\t\ty = ref.substring(3) * 100;\r\n\t\t\t\tlength = 100; //100m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tx = ref.substring(0, 4) * 10;\r\n\t\t\t\ty = ref.substring(4) * 10;\r\n\t\t\t\tlength = 10; //10m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tx = parseInt(ref.substring(0, 5), 10);\r\n\t\t\t\ty = parseInt(ref.substring(5), 10);\r\n\t\t\t\tlength = 1; //1m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Bad length for Channel Island grid ref '\" + gridRef + \"'\");\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\te: (x + 500000),\r\n\t\t\tn: (y + northOffset),\r\n\t\t\tlength: length\r\n\t\t};\r\n\t}\r\n}\n\nclass GridRefGB extends GridRef {\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'GB';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {typeof GridCoordsGB}\r\n\t */\r\n\tGridCoords = GridCoordsGB;\r\n\r\n\t/**\r\n\t * @type {GridCoordsGB}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * gridref known to have correct syntax\r\n\t * may have tetrad or quadrant suffix\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tparse_well_formed(rawGridRef) {\r\n\r\n\t\tif (rawGridRef.length >= 5 && /^[A-Z]/.test(rawGridRef.charAt(4))) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRef.quadrantOffsets.hasOwnProperty(rawGridRef.substring(rawGridRef.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = rawGridRef.substring(rawGridRef.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\tthis.tetradLetter = rawGridRef.charAt(4);\r\n\t\t\t}\r\n\r\n\t\t\trawGridRef = rawGridRef.substring(0, 4);\r\n\t\t}\r\n\r\n\t\t//this sets easting/northing, length and hectad\r\n\t\tthis.parse_wellformed_gb_gr_string_no_tetrads(rawGridRef);\r\n\r\n\t\tif (this.tetradLetter || this.quadrantCode) {\r\n\t\t\t// tetrad or quadrant suffix\r\n\r\n\t\t\tif (this.tetradLetter) {\r\n\t\t\t\tthis.preciseGridRef = this.tetrad = this.hectad + this.tetradLetter;\r\n\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[this.tetradLetter][0];\r\n\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[this.tetradLetter][1];\r\n\t\t\t} else {\r\n\t\t\t\t// quadrant\r\n\t\t\t\tthis.preciseGridRef = this.quadrant = rawGridRef + this.quadrantCode;\r\n\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.preciseGridRef = rawGridRef;\r\n\r\n\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\tthis.set_tetrad();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tfromString(rawGridRef) {\r\n\t\t// grid ref may not be in canonical format\r\n\t\tlet trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t.-]+/gu, '').toUpperCase();\r\n\t\tlet tetradCode = '';\r\n\t\tlet ref;\r\n\r\n\t\tif (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRef.quadrantOffsets.hasOwnProperty(trimmedLocality.substring(trimmedLocality.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = trimmedLocality.substring(trimmedLocality.length - 2);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substring(0, trimmedLocality.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\ttetradCode = trimmedLocality.charAt(trimmedLocality.length - 1);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substring(0, trimmedLocality.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if all numeric gridref, e.g. 38517462 then\r\n\t\t// split with '/', i.e. 38/517462\r\n\t\tif (trimmedLocality === parseInt(trimmedLocality, 10).toString()) {\r\n\t\t\ttrimmedLocality = trimmedLocality.substring(0, 2) + '/' + trimmedLocality.substring(2);\r\n\t\t} else if (trimmedLocality.length > 3 && trimmedLocality.charAt(2) === '/' && /^[A-Z]{2}$/.test(trimmedLocality.substring(0, 2))) {\r\n\t\t\t// preprocess refs of form SD/59 to SD59\r\n\t\t\t// but at this stage want to retain old-style nn/nnnn gridrefs\r\n\t\t\ttrimmedLocality = trimmedLocality.replace('/', '');\r\n\t\t}\r\n\r\n\t\tif (trimmedLocality.substring(0, 2) === 'VC') {\r\n\t\t\t// special case error, VC number entered into the wrong field\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Misplaced vice-county code in grid-reference field. ('\" + trimmedLocality + \"')\";\r\n\t\t\tthis.gridCoords = null;\r\n\t\t\tthis.length = 0;\r\n\t\t} else if ((ref = trimmedLocality.match(/^([HJNOST][ABCDEFGHJKLMNOPQRSTUVWXYZ](?:\\d\\d){1,5})$/)) !== null) {\r\n\t\t\ttrimmedLocality = ref[0]; //grid reference\r\n\r\n\t\t\tthis.parse_wellformed_gb_gr_string_no_tetrads(trimmedLocality);\r\n\r\n\t\t\tif (this.length > 0) {\r\n\t\t\t\tif (this.length === 10000 && (tetradCode || this.quadrantCode)) {\r\n\t\t\t\t\t// tetrad or quadrant suffix\r\n\r\n\t\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + tetradCode;\r\n\t\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// quadrant\r\n\t\t\t\t\t\tthis.preciseGridRef = trimmedLocality + this.quadrantCode;\r\n\t\t\t\t\t\tthis.tetradLetter = '';\r\n\t\t\t\t\t\tthis.tetrad = '';\r\n\t\t\t\t\t\tthis.quadrant = this.preciseGridRef;\r\n\t\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\r\n\t\t\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.error = true;\r\n\t\t\t\tthis.errorMessage = 'GB grid reference format not understood (strange length).';\r\n\t\t\t}\r\n\t\t} else if (/^([\\d]{2})\\/((?:\\d\\d){1,5})$/.test(trimmedLocality)) {\r\n\t\t\t// matching old-style nn/nnnn gridrefs\r\n\t\t\t// where second-part must have even-number of digits\r\n\r\n\t\t\tthis.parse_gr_string_without_tetrads(trimmedLocality);\r\n\r\n\t\t\tswitch (this.length) {\r\n\t\t\t\tcase 10000:\r\n\t\t\t\t\ttrimmedLocality = this.gridCoords.to_gridref(10000);\r\n\t\t\t\t\tthis.hectad = trimmedLocality;\r\n\r\n\t\t\t\t\tif (tetradCode) {\r\n\t\t\t\t\t\ttrimmedLocality += tetradCode;\r\n\t\t\t\t\t\tthis.tetradLetter = tetradCode;\r\n\t\t\t\t\t\tthis.tetrad = this.hectad + tetradCode;\r\n\t\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.tetradOffsets[tetradCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.tetradOffsets[tetradCode][1];\r\n\t\t\t\t\t} else if (this.quadrantCode) {\r\n\t\t\t\t\t\ttrimmedLocality += this.quadrantCode;\r\n\t\t\t\t\t\tthis.quadrant = trimmedLocality;\r\n\t\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\t\tthis.gridCoords.x += GridRef.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\t\tthis.gridCoords.y += GridRef.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1000:\r\n\t\t\t\tcase 100:\r\n\t\t\t\tcase 10:\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\ttrimmedLocality = this.gridCoords.to_gridref(this.length);\r\n\t\t\t\t\tthis.hectad = this.gridCoords.to_gridref(10000);\r\n\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.error = true;\r\n\t\t\t\t\tthis.errorMessage = 'Bad grid square dimension (' + this.length + ' m).';\r\n\t\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\t\tthis.length = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\t\t} else {\r\n\t\t\t// no match\r\n\t\t\tthis.gridCoords = null;\r\n\t\t\tthis.length = 0;\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * sets easting, northing and length (in km)\r\n\t * source grid-reference need not be well-formed\r\n\t *\r\n\t * @param {string} gridRef either nn/nn... or aann...\r\n\t */\r\n\tparse_gr_string_without_tetrads(gridRef) {\r\n\t\tlet matches, x, y, ref;\r\n\r\n\t\tif ((matches = gridRef.match(/^(\\d{2})\\/((?:\\d\\d){1,5})$/)) !== null) {\r\n\r\n\t\t\t// old style numerical sheet ref XY/nnnnnn\r\n\t\t\t// nnnn part must have even length\r\n\r\n\t\t\t// northern scottish islands have eccentric numbering\r\n\t\t\tswitch (matches[1]) {\r\n\t\t\t\tcase '57':\r\n\t\t\t\t\tx = 300000;\r\n\t\t\t\t\ty = 1000000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '67':\r\n\t\t\t\t\tx = 400000;\r\n\t\t\t\t\ty = 1000000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '58':\r\n\t\t\t\t\tx = 300000;\r\n\t\t\t\t\ty = 1100000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '68':\r\n\t\t\t\t\tx = 400000;\r\n\t\t\t\t\ty = 1100000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '69':\r\n\t\t\t\t\tx = 400000;\r\n\t\t\t\t\ty = 1200000;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tx = gridRef.charAt(0) * 100000;\r\n\t\t\t\t\ty = gridRef.charAt(1) * 100000;\r\n\t\t\t}\r\n\r\n\t\t\tref = matches[2];\r\n\t\t} else {\r\n\t\t\t// modern alphabetical sheet ref\r\n\t\t\tif (!GridRef.letterMapping.hasOwnProperty(gridRef.charAt(0)) || !GridRef.letterMapping.hasOwnProperty(gridRef.charAt(1))) {\r\n\t\t\t\t// invalid\r\n\t\t\t\tthis.length = 0;\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet char1 = GridRef.letterMapping[gridRef.charAt(0)];\r\n\t\t\tlet char2 = GridRef.letterMapping[gridRef.charAt(1)];\r\n\t\t\tref = gridRef.substring(2);\r\n\r\n\t\t\tx = ((char1 % 5) * 500000) + ((char2 % 5) * 100000) - 1000000;\r\n\t\t\ty = (-Math.floor(char1 / 5) * 500000) - (Math.floor(char2 / 5) * 100000) + 1900000;\r\n\t\t}\r\n\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + ref.charAt(0) * 10000, // use first digit of ref\r\n\t\t\t\t\ty + ref.charAt(1) * 10000 // use second digit of ref\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10000; //10 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 100) * 1000,\r\n\t\t\t\t\ty + (ref % 100) * 1000\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1000; //1 km square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 1000) * 100,\r\n\t\t\t\t\ty + (ref % 1000) * 100\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 100; //100m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 10000) * 10,\r\n\t\t\t\t\ty + (ref % 10000) * 10\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10; //10m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 100000),\r\n\t\t\t\t\ty + (ref % 100000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1; //1m square\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('Bad grid ref length, ref=' + gridRef);\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\tthis.length = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * gridRef must be a correctly formed OS GB grid-reference\r\n\t *\r\n\t * sets self::gridCoords\r\n\t * sets self::length\r\n\t * sets self::hectad\r\n\t *\r\n\t * @param {string} gridRef modern alphanumeric format with no suffixes\r\n\t * @throws Error\r\n\t */\r\n\tparse_wellformed_gb_gr_string_no_tetrads(gridRef) {\r\n\t\tlet char1, char2, ref, x, y;\r\n\r\n\t\t// modern alphabetical sheet refs only\r\n\t\tchar1 = GridRef.letterMapping[gridRef.charAt(0)];\r\n\t\tchar2 = GridRef.letterMapping[gridRef.charAt(1)];\r\n\t\tref = gridRef.substring(2);\r\n\r\n\t\tx = ((char1 % 5) * 500000) + ((char2 % 5) * 100000) - 1000000;\r\n\t\ty = (-Math.floor(char1 / 5) * 500000) - (Math.floor(char2 / 5) * 100000) + 1900000;\r\n\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + ref.charAt(0) * 10000, // use first digit of ref\r\n\t\t\t\t\ty + ref.charAt(1) * 10000 // use second digit of ref\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10000; //10 km square\r\n\t\t\t\tthis.hectad = gridRef;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + (Math.floor(ref / 100) * 1000),\r\n\t\t\t\t\ty + ((ref % 100) * 1000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1000; //1 km square\r\n\t\t\t\tthis.hectad = gridRef.substring(0, 3) + gridRef.charAt(4);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + (Math.floor(ref / 1000)) * 100,\r\n\t\t\t\t\ty + (ref % 1000) * 100\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 100; //100m square\r\n\t\t\t\tthis.hectad = gridRef.substring(0, 3) + gridRef.charAt(5);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + (Math.floor(ref / 10000)) * 10,\r\n\t\t\t\t\ty + (ref % 10000) * 10\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10; //10m square\r\n\t\t\t\tthis.hectad = gridRef.substring(0, 3) + gridRef.charAt(6);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tthis.gridCoords = new GridCoordsGB(\r\n\t\t\t\t\tx + Math.floor(ref / 100000),\r\n\t\t\t\t\ty + (ref % 100000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1; //1m square\r\n\t\t\t\tthis.hectad = gridRef.substring(0, 3) + gridRef.charAt(7);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\tthrow new Error(\"Bad grid ref length when parsing supposedly well-formed ref, ref='\" + gridRef + \"'\");\r\n\t\t}\r\n\t}\r\n}\n\nclass GridRefIE extends GridRef {\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.parse_well_formed = this.fromString;\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcountry = 'IE';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {typeof GridCoordsIE}\r\n\t */\r\n\tGridCoords = GridCoordsIE;\r\n\r\n\t/**\r\n\t * @type {GridCoordsIE}\r\n\t */\r\n\tgridCoords = null;\r\n\r\n\tstatic gridLetter = {\r\n\t\tA: [0, 4],\r\n\t\tB: [1, 4],\r\n\t\tC: [2, 4],\r\n\t\tD: [3, 4],\r\n\t\tF: [0, 3],\r\n\t\tG: [1, 3],\r\n\t\tH: [2, 3],\r\n\t\tJ: [3, 3],\r\n\t\tL: [0, 2],\r\n\t\tM: [1, 2],\r\n\t\tN: [2, 2],\r\n\t\tO: [3, 2],\r\n\t\tQ: [0, 1],\r\n\t\tR: [1, 1],\r\n\t\tS: [2, 1],\r\n\t\tT: [3, 1],\r\n\t\tV: [0, 0],\r\n\t\tW: [1, 0],\r\n\t\tX: [2, 0],\r\n\t\tY: [3, 0]\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} rawGridRef\r\n\t * @throws Error\r\n\t */\r\n\tfromString(rawGridRef) {\r\n\t\tlet trimmedLocality = rawGridRef.replace(/[\\[\\]\\s\\t.-]+/gu, '').toUpperCase();\r\n\r\n\t\tif (/[ABCDEFGHIJKLMNPQRSTUVWXYZ]$/.test(trimmedLocality)) {\r\n\t\t\t// tetrad or quadrant\r\n\r\n\t\t\tif (GridRefIE.quadrantOffsets.hasOwnProperty(trimmedLocality.substring(trimmedLocality.length - 2))) {\r\n\t\t\t\tthis.quadrantCode = trimmedLocality.substring(trimmedLocality.length - 2);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substring(0, trimmedLocality.length - 2);\r\n\t\t\t} else {\r\n\t\t\t\tthis.tetradLetter = trimmedLocality.substring(trimmedLocality.length - 1);\r\n\t\t\t\ttrimmedLocality = trimmedLocality.substring(0, trimmedLocality.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.parse_gr_string_without_tetrads(trimmedLocality);\r\n\r\n\t\tif (this.length > 0) {\r\n\t\t\tif (this.tetradLetter || this.quadrantCode) {\r\n\t\t\t\t// tetrad or quadrant suffix\r\n\r\n\t\t\t\tif (this.tetradLetter) {\r\n\t\t\t\t\tthis.preciseGridRef = this.hectad + this.tetradLetter;\r\n\t\t\t\t\tthis.tetrad = this.preciseGridRef;\r\n\t\t\t\t\tthis.length = 2000; // 2km square\r\n\t\t\t\t\tthis.gridCoords.x += GridRefIE.tetradOffsets[this.tetradLetter][0];\r\n\t\t\t\t\tthis.gridCoords.y += GridRefIE.tetradOffsets[this.tetradLetter][1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// quadrant\r\n\t\t\t\t\tthis.preciseGridRef = this.hectad + this.quadrantCode;\r\n\t\t\t\t\tthis.quadrant = this.preciseGridRef;\r\n\t\t\t\t\tthis.length = 5000; // 5km square\r\n\t\t\t\t\tthis.gridCoords.x += GridRefIE.quadrantOffsets[this.quadrantCode][0];\r\n\t\t\t\t\tthis.gridCoords.y += GridRefIE.quadrantOffsets[this.quadrantCode][1];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.preciseGridRef = trimmedLocality;\r\n\r\n\t\t\t\tif (this.length <= 1000) {\r\n\t\t\t\t\t// calculate tetrad for precise gridref\r\n\t\t\t\t\tthis.set_tetrad();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.error = true;\r\n\t\t\tthis.errorMessage = \"Irish grid reference format not understood. ('\" + rawGridRef + \"')\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tstatic _IE_GRID_LETTERS = 'VQLFAWRMGBXSNHCYTOJD';\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} gridRef nn/nnnn or [A-Z]nnnn or [A-Z]/nnnn (no other punctuation by this point), all upper-case\r\n\t * @return boolean\r\n\t */\r\n\tparse_gr_string_without_tetrads(gridRef) {\r\n\t\tlet x, y, ref, char;\r\n\r\n\t\tif (/^\\d{2}\\/(?:\\d\\d){1,5}$/.test(gridRef)) {\r\n\t\t\t// nn/nnnn etc.\r\n\t\t\t// regex used to avoid matching oddly malformed refs, such as \"32/SO763520\"\r\n\r\n\t\t\tx = parseInt(gridRef.charAt(0), 10);\r\n\t\t\ty = parseInt(gridRef.charAt(1), 10);\r\n\r\n\t\t\tif (x > 3 || y > 4) {\r\n\t\t\t\tconsole.log(\"bad grid square, ref='\" + gridRef + \"' (Ireland)\");\r\n\t\t\t\tthis.length = 0;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tref = gridRef.substring(3);\r\n\t\t\tchar = GridRefIE._IE_GRID_LETTERS.charAt((x * 5) + y);\r\n\r\n\t\t\tx *= 100000;\r\n\t\t\ty *= 100000;\r\n\t\t} else {\r\n\t\t\t// [A-Z]nnnn or [A-Z]/nnnn etc.\r\n\t\t\tgridRef = gridRef.replace('/', '');\r\n\r\n\t\t\tif (!/^[ABCDFGHJLMNOQRSTVWXY](?:\\d\\d){1,5}$/.test(gridRef)) {\r\n\t\t\t\tthis.length = 0;// mark error state\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (gridRef) {\r\n\t\t\t\tchar = gridRef.charAt(0);\r\n\t\t\t\tlet p = GridRefIE._IE_GRID_LETTERS.indexOf(char);\r\n\r\n\t\t\t\tif (p !== -1) {\r\n\t\t\t\t\tx = Math.floor(p / 5) * 100000;\r\n\t\t\t\t\ty = (p % 5) * 100000;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"Bad grid ref grid-letter, ref='\" + gridRef + \"' (Ireland)\");\r\n\t\t\t\t\tthis.length = 0; // mark error\r\n\t\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Bad (empty) Irish grid ref');\r\n\t\t\t\tthis.length = 0; // mark error\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tref = gridRef.substring(1);\r\n\t\t}\r\n\r\n\t\tswitch (ref.length) {\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gridCoords = new GridCoordsIE(\r\n\t\t\t\t\tx + (ref.charAt(0) * 10000),\r\n\t\t\t\t\ty + (ref.charAt(1) * 10000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10000; //10 km square\r\n\t\t\t\tthis.hectad = char + ref;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.gridCoords = new GridCoordsIE(\r\n\t\t\t\t\tx + Math.floor(ref / 100) * 1000,\r\n\t\t\t\t\ty + (ref % 100) * 1000\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1000; //1 km square\r\n\t\t\t\tthis.hectad = char + ref.charAt(0) + ref.charAt(2);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 6:\r\n\t\t\t\tthis.gridCoords = new GridCoordsIE(\r\n\t\t\t\t\tx + Math.floor(ref / 1000) * 100,\r\n\t\t\t\t\ty + (ref % 1000) * 100\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 100; // 100m square\r\n\t\t\t\tthis.hectad = char + ref.charAt(0) + ref.charAt(3);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 8:\r\n\t\t\t\tthis.gridCoords = new GridCoordsIE(\r\n\t\t\t\t\tx + Math.floor(ref / 10000) * 10,\r\n\t\t\t\t\ty + (ref % 10000) * 10\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 10; //10m square\r\n\t\t\t\tthis.hectad = char + ref.charAt(0) + ref.charAt(4);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 10:\r\n\t\t\t\tthis.gridCoords = new GridCoordsIE(\r\n\t\t\t\t\tx + Math.floor(ref / 100000),\r\n\t\t\t\t\ty + (ref % 100000)\r\n\t\t\t\t);\r\n\t\t\t\tthis.length = 1; //1m square\r\n\t\t\t\tthis.hectad = char + ref.charAt(0) + ref.charAt(5);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Bad grid ref length, ref='\" + gridRef + \"' (Ireland)\");\r\n\t\t\t\tthis.length = 0;\r\n\t\t\t\tthis.gridCoords = null;\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * used for IE grid-refs\r\n\t *\r\n\t * @param {?number} significantPrecision default null (precision in metres of centroid diameter)\r\n\t * @return {string}\r\n\t */\r\n\ttoHtml(significantPrecision = null) {\r\n\t\tlet formattedGr;\r\n\r\n\t\tif (!significantPrecision || significantPrecision === this.length) {\r\n\t\t\tif (this.length <= 1000) {\r\n\t\t\t\tlet halfNumLen = ((this.preciseGridRef.length - 1) / 2) | 0;\r\n\t\t\t\tformattedGr = this.preciseGridRef[0] +\r\n\t\t\t\t\t\"<span class='sig'>\" + this.preciseGridRef.substring(1, 1 + halfNumLen) +\r\n\t\t\t\t\t\"</span><span class='sig'>\" + this.preciseGridRef.substring(1 + halfNumLen) + \"</span>\";\r\n\t\t\t} else {\r\n\t\t\t\tformattedGr = this.preciseGridRef;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.length === 2000) {\r\n\t\t\t\t// reduced precision means greying the tetrad code\r\n\r\n\t\t\t\tformattedGr = `${this.hectad}<span class='nonsig'>${this.tetradLetter}</span>`;\r\n\t\t\t} else if (this.length === 5000) {\r\n\t\t\t\t// reduced precision means greying the quadrant code\r\n\r\n\t\t\t\tformattedGr = `${this.hectad}<span class='nonsig'>${this.quadrantCode}</span>`;\r\n\t\t\t} else {\r\n\t\t\t\tif (significantPrecision > 5000) {\r\n\t\t\t\t\t// large and probably spurious precision value - so grey-out the entire grid-reference\r\n\t\t\t\t\tformattedGr = `<span class='nonsig'>${this.preciseGridRef}</span>`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet columns = (5 + Math.log10(1 / significantPrecision)) | 0; // number of sig figures\r\n\t\t\t\t\tlet halfNumLen = ((this.preciseGridRef.length - 1) / 2) | 0;\r\n\r\n\t\t\t\t\tformattedGr = this.preciseGridRef[0] + \"<span class='sig'>\" + this.preciseGridRef.substring(1, 1 + columns) + \"</span>\" +\r\n\t\t\t\t\t\t\"<span class='nonsig'>\" + this.preciseGridRef.substring(columns + 1, 1 + halfNumLen) + \"</span>\" +\r\n\t\t\t\t\t\t\"<span class='sig'>\" + this.preciseGridRef.substring(1 + halfNumLen, 1 + halfNumLen + columns) + \"</span>\" +\r\n\t\t\t\t\t\t\"<span class='nonsig'>\" + this.preciseGridRef.substring(1 + halfNumLen + columns) + \"</span>\"\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn formattedGr;\r\n\t}\r\n}\n\n/**\r\n * returns a GridRef (GB, IE or CI-specific parser) or false\r\n * crudely tries to determine the country by trying each country in turn\r\n *\r\n * @param {string} rawGridRef\r\n * @returns {(GridRefCI|GridRefGB|GridRefIE|false)}\r\n */\r\nGridRef.fromString = function (rawGridRef) {\r\n\tlet parser;\r\n\tlet cleanRef = rawGridRef.replace(/\\s+/gu, '').toUpperCase();\r\n\r\n\tif (!cleanRef) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// if canonical ref form then be more efficient\r\n\tif (/^(?:[BCDFGHJLMNOQRSTVWXY]|[HJNOST][ABCDEFGHJKLMNOPQRSTUVWXYZ]|W[VA])\\d{2}(?:[A-Z]|[NS][EW]|(?:\\d{2}){0,4})?$/.test(cleanRef)) {\r\n\t\t// have simple well-formed grid ref\r\n\r\n\t\tif (/^.\\d/.test(cleanRef)) {\r\n\t\t\tparser = new GridRefIE();\r\n\t\t} else {\r\n\t\t\tif (cleanRef.charAt(0) === 'W') {\r\n\t\t\t\tparser = new GridRefCI();\r\n\t\t\t} else {\r\n\t\t\t\tparser = new GridRefGB();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tparser.parse_well_formed(cleanRef);\r\n\r\n\t\treturn (parser.length && !parser.error) ? parser : false;\r\n\t} else {\r\n\t\tparser = new GridRefGB();\r\n\t\tparser.fromString(cleanRef);\r\n\r\n\t\tif (parser.length && !parser.error) {\r\n\t\t\treturn parser;\r\n\t\t}\r\n\r\n\t\tif (cleanRef.charAt(0) === 'W') {\r\n\t\t\tparser = new GridRefCI();\r\n\t\t\tparser.fromString(cleanRef);\r\n\r\n\t\t\tif (parser.length && !parser.error) {\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tparser = new GridRefIE();\r\n\t\t\tparser.fromString(cleanRef);\r\n\r\n\t\t\tif (parser.length && !parser.error) {\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\n\nexport { GridCoords, GridCoordsCI, GridCoordsGB, GridCoordsIE, GridRef, GridRefCI, GridRefGB, GridRefIE, LatLngCI, LatLngGB, LatLngIE, LatLngWGS84 };\n//# sourceMappingURL=gridrefutils.mjs.map\n","import { GridRef } from 'british-isles-gridrefs';\n\n// AppController\r\n// Abstract super-class for page controllers\r\n\r\nclass AppController {\r\n\r\n    /**\r\n     *\r\n     * @type {(null|string)}\r\n     */\r\n    route = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Page}\r\n     */\r\n    view;\r\n\r\n    title = 'untitled';\r\n\r\n    /**\r\n     *\r\n     * @type {number}\r\n     */\r\n    handle;\r\n\r\n    /**\r\n     *\r\n     * @type {App}\r\n     */\r\n    app;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    beforeRouteHandler = null;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    afterRouteHandler = null;\r\n\r\n    // /**\r\n    //  *\r\n    //  * @type {function|null}\r\n    //  */\r\n    // leaveRouteHandler = null;\r\n\r\n    /**\r\n     *\r\n     * @type {function|null}\r\n     */\r\n    alreadyRouteHandler = null;\r\n\r\n    static _handleIndex = 0;\r\n\r\n    static get nextHandle() {\r\n        return AppController._handleIndex++;\r\n    }\r\n\r\n    /**\r\n     * called from App.initialise() to trigger late-stage initialisation\r\n     */\r\n    initialise() {\r\n        this.view.initialise();\r\n    }\r\n\r\n    /**\r\n     * registers the default route from this.route\r\n     * or alternatively is overridden in a child class\r\n     *\r\n     * @param {PatchedNavigo} router\r\n     */\r\n    registerRoute(router) {\r\n        if (null === this.route) {\r\n            throw new Error(`No route set for '${this.title}' controller.`);\r\n        }\r\n\r\n        console.log({route : this.route});\r\n\r\n        router.on(\r\n            this.route,\r\n            this.routeHandler.bind(this),\r\n            {\r\n                before : this.beforeRouteHandler ? this.beforeRouteHandler.bind(this) : null,\r\n                after : this.afterRouteHandler ? this.afterRouteHandler.bind(this) : null,\r\n                leave : this.leaveRouteHandler ? this.leaveRouteHandler.bind(this) : null,\r\n                already : this.alreadyRouteHandler ? this.alreadyRouteHandler.bind(this) : null\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} params\r\n     * @param {string} query\r\n     */\r\n    routeHandler(params, query) {\r\n\r\n    }\r\n\r\n    leaveRouteHandler(params) {\r\n        console.log('leave route handler');\r\n        document.body.classList.remove('hide-controls');\r\n\r\n        for(let element of document.querySelectorAll('.needs-bsbi-controls')) {\r\n            if (!element.classList.contains('bsbi-controls')) {\r\n                element.classList.add('bsbi-controls');\r\n            }\r\n        }\r\n\r\n        for(let element of document.querySelectorAll('.dropdown-focused')) {\r\n            element.classList.remove('dropdown-focused');\r\n        }\r\n    }\r\n}\n\n// StaticContentController\r\n\r\n\r\nclass StaticContentController extends AppController {\r\n    /**\r\n     * @type {string}\r\n     */\r\n    route;\r\n\r\n    /**\r\n     *\r\n     * @param {Page} view\r\n     * @param {string} route\r\n     */\r\n    constructor (view, route) {\r\n        super();\r\n\r\n        this.view = view;\r\n        this.route = route;\r\n\r\n        this.handle = AppController.nextHandle;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} params\r\n     * @param {string} query\r\n     */\r\n    routeHandler(params, query) {\r\n        // console.log(\"reached route handler for StaticContentController.js\");\r\n\r\n        this.app.currentControllerHandle = this.handle;\r\n        this.view.display();\r\n    }\r\n}\n\nclass NotFoundError extends Error {\r\n    constructor (message) {\r\n        super(message);\r\n    }\r\n}\n\n/**\r\n * @typedef {number} EventHarness~Handle\r\n */\r\n\r\nclass EventHarness {\r\n    /**\r\n     *\r\n     * @type {*[]}\r\n     */\r\n    _eventListeners = [];\r\n\r\n    static STOP_PROPAGATION = 'STOP_PROPAGATION';\r\n\r\n    addWeakListener (eventName, handlerObject, handlerMethodName, constructionParam = {}) {\r\n        this._eventListeners = this._eventListeners || [];\r\n\r\n        const weakWrapped = new WeakRef(handlerObject);\r\n        handlerObject = null;\r\n\r\n        const handlerFunction = (context, eventName, invocationParam = {}) => {\r\n            let weakObject = weakWrapped.deref();\r\n\r\n            if (weakObject) {\r\n                weakObject[handlerMethodName]({context, eventName, ...invocationParam, ...constructionParam});\r\n            } else {\r\n                console.warn(`A ${eventName} handler (${handlerMethodName}) has been garbage collected`);\r\n            }\r\n        };\r\n\r\n        if (this._eventListeners[eventName]) {\r\n            return (this._eventListeners[eventName].push(handlerFunction)) - 1;\r\n        } else {\r\n            this._eventListeners[eventName] = [handlerFunction];\r\n            return 0; // first element in array\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {Function} handler\r\n     * @param {*=} constructionParam\r\n     * @return {EventHarness~Handle} handle\r\n     */\r\n    addListener (eventName, handler, constructionParam = {}) {\r\n        this._eventListeners = this._eventListeners || [];\r\n\r\n        const handlerFunction = (context, eventName, invocationParam = {}) =>\r\n            handler({context, eventName, ...invocationParam, ...constructionParam});\r\n\r\n        if (this._eventListeners[eventName]) {\r\n            return (this._eventListeners[eventName].push(handlerFunction)) - 1;\r\n        } else {\r\n            this._eventListeners[eventName] = [handlerFunction];\r\n            return 0; // first element in array\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {number} handle\r\n     * @returns undefined\r\n     */\r\n    removeListener(eventName, handle) {\r\n        if (this._eventListeners[eventName]?.[handle]) {\r\n            delete this._eventListeners[eventName][handle];\r\n        } else {\r\n            console.log('trying to remove non-existent event handler, event = ' + eventName + ' handle = ' + handle);\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    /**\r\n     *\r\n     */\r\n    destructor() {\r\n        this._eventListeners = null;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string} eventName\r\n     * @param {Object=} param optional parameter to pass on to listener\r\n     * @return void\r\n     */\r\n    fireEvent (eventName, param) {\r\n        if (this._eventListeners) {\r\n            for (let f in this._eventListeners[eventName]) {\r\n                if (this._eventListeners[eventName].hasOwnProperty(f)) {\r\n                    if (this._eventListeners[eventName][f](this, eventName, arguments[1]) === EventHarness.STOP_PROPAGATION) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction commonjsRequire(path) {\n\tthrow new Error('Could not dynamically require \"' + path + '\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');\n}\n\nvar localforage$1 = {exports: {}};\n\n/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n\n(function (module, exports) {\n\t(function(f){{module.exports=f();}})(function(){return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof commonjsRequire==\"function\"&&commonjsRequire;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r);}return n[o].exports}var i=typeof commonjsRequire==\"function\"&&commonjsRequire;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\t(function (global){\n\tvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\n\tvar scheduleDrain;\n\n\t{\n\t  if (Mutation) {\n\t    var called = 0;\n\t    var observer = new Mutation(nextTick);\n\t    var element = global.document.createTextNode('');\n\t    observer.observe(element, {\n\t      characterData: true\n\t    });\n\t    scheduleDrain = function () {\n\t      element.data = (called = ++called % 2);\n\t    };\n\t  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n\t    var channel = new global.MessageChannel();\n\t    channel.port1.onmessage = nextTick;\n\t    scheduleDrain = function () {\n\t      channel.port2.postMessage(0);\n\t    };\n\t  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n\t    scheduleDrain = function () {\n\n\t      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t      var scriptEl = global.document.createElement('script');\n\t      scriptEl.onreadystatechange = function () {\n\t        nextTick();\n\n\t        scriptEl.onreadystatechange = null;\n\t        scriptEl.parentNode.removeChild(scriptEl);\n\t        scriptEl = null;\n\t      };\n\t      global.document.documentElement.appendChild(scriptEl);\n\t    };\n\t  } else {\n\t    scheduleDrain = function () {\n\t      setTimeout(nextTick, 0);\n\t    };\n\t  }\n\t}\n\n\tvar draining;\n\tvar queue = [];\n\t//named nextTick for less confusing stack traces\n\tfunction nextTick() {\n\t  draining = true;\n\t  var i, oldQueue;\n\t  var len = queue.length;\n\t  while (len) {\n\t    oldQueue = queue;\n\t    queue = [];\n\t    i = -1;\n\t    while (++i < len) {\n\t      oldQueue[i]();\n\t    }\n\t    len = queue.length;\n\t  }\n\t  draining = false;\n\t}\n\n\tmodule.exports = immediate;\n\tfunction immediate(task) {\n\t  if (queue.push(task) === 1 && !draining) {\n\t    scheduleDrain();\n\t  }\n\t}\n\n\t}).call(this,typeof commonjsGlobal !== \"undefined\" ? commonjsGlobal : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n\t},{}],2:[function(_dereq_,module,exports){\n\tvar immediate = _dereq_(1);\n\n\t/* istanbul ignore next */\n\tfunction INTERNAL() {}\n\n\tvar handlers = {};\n\n\tvar REJECTED = ['REJECTED'];\n\tvar FULFILLED = ['FULFILLED'];\n\tvar PENDING = ['PENDING'];\n\n\tmodule.exports = Promise;\n\n\tfunction Promise(resolver) {\n\t  if (typeof resolver !== 'function') {\n\t    throw new TypeError('resolver must be a function');\n\t  }\n\t  this.state = PENDING;\n\t  this.queue = [];\n\t  this.outcome = void 0;\n\t  if (resolver !== INTERNAL) {\n\t    safelyResolveThenable(this, resolver);\n\t  }\n\t}\n\n\tPromise.prototype[\"catch\"] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n\t    typeof onRejected !== 'function' && this.state === REJECTED) {\n\t    return this;\n\t  }\n\t  var promise = new this.constructor(INTERNAL);\n\t  if (this.state !== PENDING) {\n\t    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n\t    unwrap(promise, resolver, this.outcome);\n\t  } else {\n\t    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n\t  }\n\n\t  return promise;\n\t};\n\tfunction QueueItem(promise, onFulfilled, onRejected) {\n\t  this.promise = promise;\n\t  if (typeof onFulfilled === 'function') {\n\t    this.onFulfilled = onFulfilled;\n\t    this.callFulfilled = this.otherCallFulfilled;\n\t  }\n\t  if (typeof onRejected === 'function') {\n\t    this.onRejected = onRejected;\n\t    this.callRejected = this.otherCallRejected;\n\t  }\n\t}\n\tQueueItem.prototype.callFulfilled = function (value) {\n\t  handlers.resolve(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallFulfilled = function (value) {\n\t  unwrap(this.promise, this.onFulfilled, value);\n\t};\n\tQueueItem.prototype.callRejected = function (value) {\n\t  handlers.reject(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallRejected = function (value) {\n\t  unwrap(this.promise, this.onRejected, value);\n\t};\n\n\tfunction unwrap(promise, func, value) {\n\t  immediate(function () {\n\t    var returnValue;\n\t    try {\n\t      returnValue = func(value);\n\t    } catch (e) {\n\t      return handlers.reject(promise, e);\n\t    }\n\t    if (returnValue === promise) {\n\t      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n\t    } else {\n\t      handlers.resolve(promise, returnValue);\n\t    }\n\t  });\n\t}\n\n\thandlers.resolve = function (self, value) {\n\t  var result = tryCatch(getThen, value);\n\t  if (result.status === 'error') {\n\t    return handlers.reject(self, result.value);\n\t  }\n\t  var thenable = result.value;\n\n\t  if (thenable) {\n\t    safelyResolveThenable(self, thenable);\n\t  } else {\n\t    self.state = FULFILLED;\n\t    self.outcome = value;\n\t    var i = -1;\n\t    var len = self.queue.length;\n\t    while (++i < len) {\n\t      self.queue[i].callFulfilled(value);\n\t    }\n\t  }\n\t  return self;\n\t};\n\thandlers.reject = function (self, error) {\n\t  self.state = REJECTED;\n\t  self.outcome = error;\n\t  var i = -1;\n\t  var len = self.queue.length;\n\t  while (++i < len) {\n\t    self.queue[i].callRejected(error);\n\t  }\n\t  return self;\n\t};\n\n\tfunction getThen(obj) {\n\t  // Make sure we only access the accessor once as required by the spec\n\t  var then = obj && obj.then;\n\t  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n\t    return function appyThen() {\n\t      then.apply(obj, arguments);\n\t    };\n\t  }\n\t}\n\n\tfunction safelyResolveThenable(self, thenable) {\n\t  // Either fulfill, reject or reject with error\n\t  var called = false;\n\t  function onError(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.reject(self, value);\n\t  }\n\n\t  function onSuccess(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.resolve(self, value);\n\t  }\n\n\t  function tryToUnwrap() {\n\t    thenable(onSuccess, onError);\n\t  }\n\n\t  var result = tryCatch(tryToUnwrap);\n\t  if (result.status === 'error') {\n\t    onError(result.value);\n\t  }\n\t}\n\n\tfunction tryCatch(func, value) {\n\t  var out = {};\n\t  try {\n\t    out.value = func(value);\n\t    out.status = 'success';\n\t  } catch (e) {\n\t    out.status = 'error';\n\t    out.value = e;\n\t  }\n\t  return out;\n\t}\n\n\tPromise.resolve = resolve;\n\tfunction resolve(value) {\n\t  if (value instanceof this) {\n\t    return value;\n\t  }\n\t  return handlers.resolve(new this(INTERNAL), value);\n\t}\n\n\tPromise.reject = reject;\n\tfunction reject(reason) {\n\t  var promise = new this(INTERNAL);\n\t  return handlers.reject(promise, reason);\n\t}\n\n\tPromise.all = all;\n\tfunction all(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\n\t  var values = new Array(len);\n\t  var resolved = 0;\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\n\t  while (++i < len) {\n\t    allResolver(iterable[i], i);\n\t  }\n\t  return promise;\n\t  function allResolver(value, i) {\n\t    self.resolve(value).then(resolveFromAll, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t    function resolveFromAll(outValue) {\n\t      values[i] = outValue;\n\t      if (++resolved === len && !called) {\n\t        called = true;\n\t        handlers.resolve(promise, values);\n\t      }\n\t    }\n\t  }\n\t}\n\n\tPromise.race = race;\n\tfunction race(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\n\t  while (++i < len) {\n\t    resolver(iterable[i]);\n\t  }\n\t  return promise;\n\t  function resolver(value) {\n\t    self.resolve(value).then(function (response) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.resolve(promise, response);\n\t      }\n\t    }, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t  }\n\t}\n\n\t},{\"1\":1}],3:[function(_dereq_,module,exports){\n\t(function (global){\n\tif (typeof global.Promise !== 'function') {\n\t  global.Promise = _dereq_(2);\n\t}\n\n\t}).call(this,typeof commonjsGlobal !== \"undefined\" ? commonjsGlobal : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n\t},{\"2\":2}],4:[function(_dereq_,module,exports){\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction getIDB() {\n\t    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n\t    try {\n\t        if (typeof indexedDB !== 'undefined') {\n\t            return indexedDB;\n\t        }\n\t        if (typeof webkitIndexedDB !== 'undefined') {\n\t            return webkitIndexedDB;\n\t        }\n\t        if (typeof mozIndexedDB !== 'undefined') {\n\t            return mozIndexedDB;\n\t        }\n\t        if (typeof OIndexedDB !== 'undefined') {\n\t            return OIndexedDB;\n\t        }\n\t        if (typeof msIndexedDB !== 'undefined') {\n\t            return msIndexedDB;\n\t        }\n\t    } catch (e) {\n\t        return;\n\t    }\n\t}\n\n\tvar idb = getIDB();\n\n\tfunction isIndexedDBValid() {\n\t    try {\n\t        // Initialize IndexedDB; fall back to vendor-prefixed versions\n\t        // if needed.\n\t        if (!idb || !idb.open) {\n\t            return false;\n\t        }\n\t        // We mimic PouchDB here;\n\t        //\n\t        // We test for openDatabase because IE Mobile identifies itself\n\t        // as Safari. Oh the lulz...\n\t        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n\t        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n\t        // Safari <10.1 does not meet our requirements for IDB support\n\t        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n\t        // Safari 10.1 shipped with fetch, we can use that to detect it.\n\t        // Note: this creates issues with `window.fetch` polyfills and\n\t        // overrides; see:\n\t        // https://github.com/localForage/localForage/issues/856\n\t        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n\t        // some outdated implementations of IDB that appear on Samsung\n\t        // and HTC Android devices <4.4 are missing IDBKeyRange\n\t        // See: https://github.com/mozilla/localForage/issues/128\n\t        // See: https://github.com/mozilla/localForage/issues/272\n\t        typeof IDBKeyRange !== 'undefined';\n\t    } catch (e) {\n\t        return false;\n\t    }\n\t}\n\n\t// Abstracts constructing a Blob object, so it also works in older\n\t// browsers that don't support the native Blob constructor. (i.e.\n\t// old QtWebKit versions, at least).\n\t// Abstracts constructing a Blob object, so it also works in older\n\t// browsers that don't support the native Blob constructor. (i.e.\n\t// old QtWebKit versions, at least).\n\tfunction createBlob(parts, properties) {\n\t    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n\t    parts = parts || [];\n\t    properties = properties || {};\n\t    try {\n\t        return new Blob(parts, properties);\n\t    } catch (e) {\n\t        if (e.name !== 'TypeError') {\n\t            throw e;\n\t        }\n\t        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n\t        var builder = new Builder();\n\t        for (var i = 0; i < parts.length; i += 1) {\n\t            builder.append(parts[i]);\n\t        }\n\t        return builder.getBlob(properties.type);\n\t    }\n\t}\n\n\t// This is CommonJS because lie is an external dependency, so Rollup\n\t// can just ignore it.\n\tif (typeof Promise === 'undefined') {\n\t    // In the \"nopromises\" build this will just throw if you don't have\n\t    // a global promise object, but it would throw anyway later.\n\t    _dereq_(3);\n\t}\n\tvar Promise$1 = Promise;\n\n\tfunction executeCallback(promise, callback) {\n\t    if (callback) {\n\t        promise.then(function (result) {\n\t            callback(null, result);\n\t        }, function (error) {\n\t            callback(error);\n\t        });\n\t    }\n\t}\n\n\tfunction executeTwoCallbacks(promise, callback, errorCallback) {\n\t    if (typeof callback === 'function') {\n\t        promise.then(callback);\n\t    }\n\n\t    if (typeof errorCallback === 'function') {\n\t        promise[\"catch\"](errorCallback);\n\t    }\n\t}\n\n\tfunction normalizeKey(key) {\n\t    // Cast the key to a string, as that's all we can set as a key.\n\t    if (typeof key !== 'string') {\n\t        console.warn(key + ' used as a key, but it is not a string.');\n\t        key = String(key);\n\t    }\n\n\t    return key;\n\t}\n\n\tfunction getCallback() {\n\t    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n\t        return arguments[arguments.length - 1];\n\t    }\n\t}\n\n\t// Some code originally from async_storage.js in\n\t// [Gaia](https://github.com/mozilla-b2g/gaia).\n\n\tvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n\tvar supportsBlobs = void 0;\n\tvar dbContexts = {};\n\tvar toString = Object.prototype.toString;\n\n\t// Transaction Modes\n\tvar READ_ONLY = 'readonly';\n\tvar READ_WRITE = 'readwrite';\n\n\t// Transform a binary string to an array buffer, because otherwise\n\t// weird stuff happens when you try to work with the binary string directly.\n\t// It is known.\n\t// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n\t// encode-decode-image-with-base64-breaks-image (2013-04-21)\n\tfunction _binStringToArrayBuffer(bin) {\n\t    var length = bin.length;\n\t    var buf = new ArrayBuffer(length);\n\t    var arr = new Uint8Array(buf);\n\t    for (var i = 0; i < length; i++) {\n\t        arr[i] = bin.charCodeAt(i);\n\t    }\n\t    return buf;\n\t}\n\n\t//\n\t// Blobs are not supported in all versions of IndexedDB, notably\n\t// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n\t//\n\t// Various other blob bugs exist in Chrome v37-42 (inclusive).\n\t// Detecting them is expensive and confusing to users, and Chrome 37-42\n\t// is at very low usage worldwide, so we do a hacky userAgent check instead.\n\t//\n\t// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n\t// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n\t// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n\t//\n\t// Code borrowed from PouchDB. See:\n\t// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n\t//\n\tfunction _checkBlobSupportWithoutCaching(idb) {\n\t    return new Promise$1(function (resolve) {\n\t        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n\t        var blob = createBlob(['']);\n\t        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n\t        txn.onabort = function (e) {\n\t            // If the transaction aborts now its due to not being able to\n\t            // write to the database, likely due to the disk being full\n\t            e.preventDefault();\n\t            e.stopPropagation();\n\t            resolve(false);\n\t        };\n\n\t        txn.oncomplete = function () {\n\t            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n\t            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n\t            // MS Edge pretends to be Chrome 42:\n\t            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\t            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n\t        };\n\t    })[\"catch\"](function () {\n\t        return false; // error, so assume unsupported\n\t    });\n\t}\n\n\tfunction _checkBlobSupport(idb) {\n\t    if (typeof supportsBlobs === 'boolean') {\n\t        return Promise$1.resolve(supportsBlobs);\n\t    }\n\t    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n\t        supportsBlobs = value;\n\t        return supportsBlobs;\n\t    });\n\t}\n\n\tfunction _deferReadiness(dbInfo) {\n\t    var dbContext = dbContexts[dbInfo.name];\n\n\t    // Create a deferred object representing the current database operation.\n\t    var deferredOperation = {};\n\n\t    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n\t        deferredOperation.resolve = resolve;\n\t        deferredOperation.reject = reject;\n\t    });\n\n\t    // Enqueue the deferred operation.\n\t    dbContext.deferredOperations.push(deferredOperation);\n\n\t    // Chain its promise to the database readiness.\n\t    if (!dbContext.dbReady) {\n\t        dbContext.dbReady = deferredOperation.promise;\n\t    } else {\n\t        dbContext.dbReady = dbContext.dbReady.then(function () {\n\t            return deferredOperation.promise;\n\t        });\n\t    }\n\t}\n\n\tfunction _advanceReadiness(dbInfo) {\n\t    var dbContext = dbContexts[dbInfo.name];\n\n\t    // Dequeue a deferred operation.\n\t    var deferredOperation = dbContext.deferredOperations.pop();\n\n\t    // Resolve its promise (which is part of the database readiness\n\t    // chain of promises).\n\t    if (deferredOperation) {\n\t        deferredOperation.resolve();\n\t        return deferredOperation.promise;\n\t    }\n\t}\n\n\tfunction _rejectReadiness(dbInfo, err) {\n\t    var dbContext = dbContexts[dbInfo.name];\n\n\t    // Dequeue a deferred operation.\n\t    var deferredOperation = dbContext.deferredOperations.pop();\n\n\t    // Reject its promise (which is part of the database readiness\n\t    // chain of promises).\n\t    if (deferredOperation) {\n\t        deferredOperation.reject(err);\n\t        return deferredOperation.promise;\n\t    }\n\t}\n\n\tfunction _getConnection(dbInfo, upgradeNeeded) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n\t        if (dbInfo.db) {\n\t            if (upgradeNeeded) {\n\t                _deferReadiness(dbInfo);\n\t                dbInfo.db.close();\n\t            } else {\n\t                return resolve(dbInfo.db);\n\t            }\n\t        }\n\n\t        var dbArgs = [dbInfo.name];\n\n\t        if (upgradeNeeded) {\n\t            dbArgs.push(dbInfo.version);\n\t        }\n\n\t        var openreq = idb.open.apply(idb, dbArgs);\n\n\t        if (upgradeNeeded) {\n\t            openreq.onupgradeneeded = function (e) {\n\t                var db = openreq.result;\n\t                try {\n\t                    db.createObjectStore(dbInfo.storeName);\n\t                    if (e.oldVersion <= 1) {\n\t                        // Added when support for blob shims was added\n\t                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\t                    }\n\t                } catch (ex) {\n\t                    if (ex.name === 'ConstraintError') {\n\t                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n\t                    } else {\n\t                        throw ex;\n\t                    }\n\t                }\n\t            };\n\t        }\n\n\t        openreq.onerror = function (e) {\n\t            e.preventDefault();\n\t            reject(openreq.error);\n\t        };\n\n\t        openreq.onsuccess = function () {\n\t            var db = openreq.result;\n\t            db.onversionchange = function (e) {\n\t                // Triggered when the database is modified (e.g. adding an objectStore) or\n\t                // deleted (even when initiated by other sessions in different tabs).\n\t                // Closing the connection here prevents those operations from being blocked.\n\t                // If the database is accessed again later by this instance, the connection\n\t                // will be reopened or the database recreated as needed.\n\t                e.target.close();\n\t            };\n\t            resolve(db);\n\t            _advanceReadiness(dbInfo);\n\t        };\n\t    });\n\t}\n\n\tfunction _getOriginalConnection(dbInfo) {\n\t    return _getConnection(dbInfo, false);\n\t}\n\n\tfunction _getUpgradedConnection(dbInfo) {\n\t    return _getConnection(dbInfo, true);\n\t}\n\n\tfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n\t    if (!dbInfo.db) {\n\t        return true;\n\t    }\n\n\t    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n\t    var isDowngrade = dbInfo.version < dbInfo.db.version;\n\t    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n\t    if (isDowngrade) {\n\t        // If the version is not the default one\n\t        // then warn for impossible downgrade.\n\t        if (dbInfo.version !== defaultVersion) {\n\t            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n\t        }\n\t        // Align the versions to prevent errors.\n\t        dbInfo.version = dbInfo.db.version;\n\t    }\n\n\t    if (isUpgrade || isNewStore) {\n\t        // If the store is new then increment the version (if needed).\n\t        // This will trigger an \"upgradeneeded\" event which is required\n\t        // for creating a store.\n\t        if (isNewStore) {\n\t            var incVersion = dbInfo.db.version + 1;\n\t            if (incVersion > dbInfo.version) {\n\t                dbInfo.version = incVersion;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    return false;\n\t}\n\n\t// encode a blob for indexeddb engines that don't support blobs\n\tfunction _encodeBlob(blob) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        var reader = new FileReader();\n\t        reader.onerror = reject;\n\t        reader.onloadend = function (e) {\n\t            var base64 = btoa(e.target.result || '');\n\t            resolve({\n\t                __local_forage_encoded_blob: true,\n\t                data: base64,\n\t                type: blob.type\n\t            });\n\t        };\n\t        reader.readAsBinaryString(blob);\n\t    });\n\t}\n\n\t// decode an encoded blob\n\tfunction _decodeBlob(encodedBlob) {\n\t    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n\t    return createBlob([arrayBuff], { type: encodedBlob.type });\n\t}\n\n\t// is this one of our fancy encoded blobs?\n\tfunction _isEncodedBlob(value) {\n\t    return value && value.__local_forage_encoded_blob;\n\t}\n\n\t// Specialize the default `ready()` function by making it dependent\n\t// on the current database operations. Thus, the driver will be actually\n\t// ready when it's been initialized (default) *and* there are no pending\n\t// operations on the database (initiated by some other instances).\n\tfunction _fullyReady(callback) {\n\t    var self = this;\n\n\t    var promise = self._initReady().then(function () {\n\t        var dbContext = dbContexts[self._dbInfo.name];\n\n\t        if (dbContext && dbContext.dbReady) {\n\t            return dbContext.dbReady;\n\t        }\n\t    });\n\n\t    executeTwoCallbacks(promise, callback, callback);\n\t    return promise;\n\t}\n\n\t// Try to establish a new db connection to replace the\n\t// current one which is broken (i.e. experiencing\n\t// InvalidStateError while creating a transaction).\n\tfunction _tryReconnect(dbInfo) {\n\t    _deferReadiness(dbInfo);\n\n\t    var dbContext = dbContexts[dbInfo.name];\n\t    var forages = dbContext.forages;\n\n\t    for (var i = 0; i < forages.length; i++) {\n\t        var forage = forages[i];\n\t        if (forage._dbInfo.db) {\n\t            forage._dbInfo.db.close();\n\t            forage._dbInfo.db = null;\n\t        }\n\t    }\n\t    dbInfo.db = null;\n\n\t    return _getOriginalConnection(dbInfo).then(function (db) {\n\t        dbInfo.db = db;\n\t        if (_isUpgradeNeeded(dbInfo)) {\n\t            // Reopen the database for upgrading.\n\t            return _getUpgradedConnection(dbInfo);\n\t        }\n\t        return db;\n\t    }).then(function (db) {\n\t        // store the latest db reference\n\t        // in case the db was upgraded\n\t        dbInfo.db = dbContext.db = db;\n\t        for (var i = 0; i < forages.length; i++) {\n\t            forages[i]._dbInfo.db = db;\n\t        }\n\t    })[\"catch\"](function (err) {\n\t        _rejectReadiness(dbInfo, err);\n\t        throw err;\n\t    });\n\t}\n\n\t// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n\t// so we have to do it with callbacks\n\tfunction createTransaction(dbInfo, mode, callback, retries) {\n\t    if (retries === undefined) {\n\t        retries = 1;\n\t    }\n\n\t    try {\n\t        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n\t        callback(null, tx);\n\t    } catch (err) {\n\t        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n\t            return Promise$1.resolve().then(function () {\n\t                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n\t                    // increase the db version, to create the new ObjectStore\n\t                    if (dbInfo.db) {\n\t                        dbInfo.version = dbInfo.db.version + 1;\n\t                    }\n\t                    // Reopen the database for upgrading.\n\t                    return _getUpgradedConnection(dbInfo);\n\t                }\n\t            }).then(function () {\n\t                return _tryReconnect(dbInfo).then(function () {\n\t                    createTransaction(dbInfo, mode, callback, retries - 1);\n\t                });\n\t            })[\"catch\"](callback);\n\t        }\n\n\t        callback(err);\n\t    }\n\t}\n\n\tfunction createDbContext() {\n\t    return {\n\t        // Running localForages sharing a database.\n\t        forages: [],\n\t        // Shared database.\n\t        db: null,\n\t        // Database readiness (promise).\n\t        dbReady: null,\n\t        // Deferred operations on the database.\n\t        deferredOperations: []\n\t    };\n\t}\n\n\t// Open the IndexedDB database (automatically creates one if one didn't\n\t// previously exist), using any options set in the config.\n\tfunction _initStorage(options) {\n\t    var self = this;\n\t    var dbInfo = {\n\t        db: null\n\t    };\n\n\t    if (options) {\n\t        for (var i in options) {\n\t            dbInfo[i] = options[i];\n\t        }\n\t    }\n\n\t    // Get the current context of the database;\n\t    var dbContext = dbContexts[dbInfo.name];\n\n\t    // ...or create a new context.\n\t    if (!dbContext) {\n\t        dbContext = createDbContext();\n\t        // Register the new context in the global container.\n\t        dbContexts[dbInfo.name] = dbContext;\n\t    }\n\n\t    // Register itself as a running localForage in the current context.\n\t    dbContext.forages.push(self);\n\n\t    // Replace the default `ready()` function with the specialized one.\n\t    if (!self._initReady) {\n\t        self._initReady = self.ready;\n\t        self.ready = _fullyReady;\n\t    }\n\n\t    // Create an array of initialization states of the related localForages.\n\t    var initPromises = [];\n\n\t    function ignoreErrors() {\n\t        // Don't handle errors here,\n\t        // just makes sure related localForages aren't pending.\n\t        return Promise$1.resolve();\n\t    }\n\n\t    for (var j = 0; j < dbContext.forages.length; j++) {\n\t        var forage = dbContext.forages[j];\n\t        if (forage !== self) {\n\t            // Don't wait for itself...\n\t            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n\t        }\n\t    }\n\n\t    // Take a snapshot of the related localForages.\n\t    var forages = dbContext.forages.slice(0);\n\n\t    // Initialize the connection process only when\n\t    // all the related localForages aren't pending.\n\t    return Promise$1.all(initPromises).then(function () {\n\t        dbInfo.db = dbContext.db;\n\t        // Get the connection or open a new one without upgrade.\n\t        return _getOriginalConnection(dbInfo);\n\t    }).then(function (db) {\n\t        dbInfo.db = db;\n\t        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n\t            // Reopen the database for upgrading.\n\t            return _getUpgradedConnection(dbInfo);\n\t        }\n\t        return db;\n\t    }).then(function (db) {\n\t        dbInfo.db = dbContext.db = db;\n\t        self._dbInfo = dbInfo;\n\t        // Share the final connection amongst related localForages.\n\t        for (var k = 0; k < forages.length; k++) {\n\t            var forage = forages[k];\n\t            if (forage !== self) {\n\t                // Self is already up-to-date.\n\t                forage._dbInfo.db = dbInfo.db;\n\t                forage._dbInfo.version = dbInfo.version;\n\t            }\n\t        }\n\t    });\n\t}\n\n\tfunction getItem(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.get(key);\n\n\t                    req.onsuccess = function () {\n\t                        var value = req.result;\n\t                        if (value === undefined) {\n\t                            value = null;\n\t                        }\n\t                        if (_isEncodedBlob(value)) {\n\t                            value = _decodeBlob(value);\n\t                        }\n\t                        resolve(value);\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Iterate over all items stored in database.\n\tfunction iterate(iterator, callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.openCursor();\n\t                    var iterationNumber = 1;\n\n\t                    req.onsuccess = function () {\n\t                        var cursor = req.result;\n\n\t                        if (cursor) {\n\t                            var value = cursor.value;\n\t                            if (_isEncodedBlob(value)) {\n\t                                value = _decodeBlob(value);\n\t                            }\n\t                            var result = iterator(value, cursor.key, iterationNumber++);\n\n\t                            // when the iterator callback returns any\n\t                            // (non-`undefined`) value, then we stop\n\t                            // the iteration immediately\n\t                            if (result !== void 0) {\n\t                                resolve(result);\n\t                            } else {\n\t                                cursor[\"continue\"]();\n\t                            }\n\t                        } else {\n\t                            resolve();\n\t                        }\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\n\t    return promise;\n\t}\n\n\tfunction setItem(key, value, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        var dbInfo;\n\t        self.ready().then(function () {\n\t            dbInfo = self._dbInfo;\n\t            if (toString.call(value) === '[object Blob]') {\n\t                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n\t                    if (blobSupport) {\n\t                        return value;\n\t                    }\n\t                    return _encodeBlob(value);\n\t                });\n\t            }\n\t            return value;\n\t        }).then(function (value) {\n\t            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n\t                    // The reason we don't _save_ null is because IE 10 does\n\t                    // not support saving the `null` type in IndexedDB. How\n\t                    // ironic, given the bug below!\n\t                    // See: https://github.com/mozilla/localForage/issues/161\n\t                    if (value === null) {\n\t                        value = undefined;\n\t                    }\n\n\t                    var req = store.put(value, key);\n\n\t                    transaction.oncomplete = function () {\n\t                        // Cast to undefined so the value passed to\n\t                        // callback/promise is the same as what one would get out\n\t                        // of `getItem()` later. This leads to some weirdness\n\t                        // (setItem('foo', undefined) will return `null`), but\n\t                        // it's not my fault localStorage is our baseline and that\n\t                        // it's weird.\n\t                        if (value === undefined) {\n\t                            value = null;\n\t                        }\n\n\t                        resolve(value);\n\t                    };\n\t                    transaction.onabort = transaction.onerror = function () {\n\t                        var err = req.error ? req.error : req.transaction.error;\n\t                        reject(err);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction removeItem(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    // We use a Grunt task to make this safe for IE and some\n\t                    // versions of Android (including those used by Cordova).\n\t                    // Normally IE won't like `.delete()` and will insist on\n\t                    // using `['delete']()`, but we have a build step that\n\t                    // fixes this for us now.\n\t                    var req = store[\"delete\"](key);\n\t                    transaction.oncomplete = function () {\n\t                        resolve();\n\t                    };\n\n\t                    transaction.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\n\t                    // The request will be also be aborted if we've exceeded our storage\n\t                    // space.\n\t                    transaction.onabort = function () {\n\t                        var err = req.error ? req.error : req.transaction.error;\n\t                        reject(err);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction clear(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.clear();\n\n\t                    transaction.oncomplete = function () {\n\t                        resolve();\n\t                    };\n\n\t                    transaction.onabort = transaction.onerror = function () {\n\t                        var err = req.error ? req.error : req.transaction.error;\n\t                        reject(err);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction length(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.count();\n\n\t                    req.onsuccess = function () {\n\t                        resolve(req.result);\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction key(n, callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        if (n < 0) {\n\t            resolve(null);\n\n\t            return;\n\t        }\n\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var advanced = false;\n\t                    var req = store.openKeyCursor();\n\n\t                    req.onsuccess = function () {\n\t                        var cursor = req.result;\n\t                        if (!cursor) {\n\t                            // this means there weren't enough keys\n\t                            resolve(null);\n\n\t                            return;\n\t                        }\n\n\t                        if (n === 0) {\n\t                            // We have the first key, return it if that's what they\n\t                            // wanted.\n\t                            resolve(cursor.key);\n\t                        } else {\n\t                            if (!advanced) {\n\t                                // Otherwise, ask the cursor to skip ahead n\n\t                                // records.\n\t                                advanced = true;\n\t                                cursor.advance(n);\n\t                            } else {\n\t                                // When we get here, we've got the nth key.\n\t                                resolve(cursor.key);\n\t                            }\n\t                        }\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction keys(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n\t                if (err) {\n\t                    return reject(err);\n\t                }\n\n\t                try {\n\t                    var store = transaction.objectStore(self._dbInfo.storeName);\n\t                    var req = store.openKeyCursor();\n\t                    var keys = [];\n\n\t                    req.onsuccess = function () {\n\t                        var cursor = req.result;\n\n\t                        if (!cursor) {\n\t                            resolve(keys);\n\t                            return;\n\t                        }\n\n\t                        keys.push(cursor.key);\n\t                        cursor[\"continue\"]();\n\t                    };\n\n\t                    req.onerror = function () {\n\t                        reject(req.error);\n\t                    };\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction dropInstance(options, callback) {\n\t    callback = getCallback.apply(this, arguments);\n\n\t    var currentConfig = this.config();\n\t    options = typeof options !== 'function' && options || {};\n\t    if (!options.name) {\n\t        options.name = options.name || currentConfig.name;\n\t        options.storeName = options.storeName || currentConfig.storeName;\n\t    }\n\n\t    var self = this;\n\t    var promise;\n\t    if (!options.name) {\n\t        promise = Promise$1.reject('Invalid arguments');\n\t    } else {\n\t        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n\t        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n\t            var dbContext = dbContexts[options.name];\n\t            var forages = dbContext.forages;\n\t            dbContext.db = db;\n\t            for (var i = 0; i < forages.length; i++) {\n\t                forages[i]._dbInfo.db = db;\n\t            }\n\t            return db;\n\t        });\n\n\t        if (!options.storeName) {\n\t            promise = dbPromise.then(function (db) {\n\t                _deferReadiness(options);\n\n\t                var dbContext = dbContexts[options.name];\n\t                var forages = dbContext.forages;\n\n\t                db.close();\n\t                for (var i = 0; i < forages.length; i++) {\n\t                    var forage = forages[i];\n\t                    forage._dbInfo.db = null;\n\t                }\n\n\t                var dropDBPromise = new Promise$1(function (resolve, reject) {\n\t                    var req = idb.deleteDatabase(options.name);\n\n\t                    req.onerror = function () {\n\t                        var db = req.result;\n\t                        if (db) {\n\t                            db.close();\n\t                        }\n\t                        reject(req.error);\n\t                    };\n\n\t                    req.onblocked = function () {\n\t                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n\t                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n\t                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n\t                    };\n\n\t                    req.onsuccess = function () {\n\t                        var db = req.result;\n\t                        if (db) {\n\t                            db.close();\n\t                        }\n\t                        resolve(db);\n\t                    };\n\t                });\n\n\t                return dropDBPromise.then(function (db) {\n\t                    dbContext.db = db;\n\t                    for (var i = 0; i < forages.length; i++) {\n\t                        var _forage = forages[i];\n\t                        _advanceReadiness(_forage._dbInfo);\n\t                    }\n\t                })[\"catch\"](function (err) {\n\t                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n\t                    throw err;\n\t                });\n\t            });\n\t        } else {\n\t            promise = dbPromise.then(function (db) {\n\t                if (!db.objectStoreNames.contains(options.storeName)) {\n\t                    return;\n\t                }\n\n\t                var newVersion = db.version + 1;\n\n\t                _deferReadiness(options);\n\n\t                var dbContext = dbContexts[options.name];\n\t                var forages = dbContext.forages;\n\n\t                db.close();\n\t                for (var i = 0; i < forages.length; i++) {\n\t                    var forage = forages[i];\n\t                    forage._dbInfo.db = null;\n\t                    forage._dbInfo.version = newVersion;\n\t                }\n\n\t                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n\t                    var req = idb.open(options.name, newVersion);\n\n\t                    req.onerror = function (err) {\n\t                        var db = req.result;\n\t                        db.close();\n\t                        reject(err);\n\t                    };\n\n\t                    req.onupgradeneeded = function () {\n\t                        var db = req.result;\n\t                        db.deleteObjectStore(options.storeName);\n\t                    };\n\n\t                    req.onsuccess = function () {\n\t                        var db = req.result;\n\t                        db.close();\n\t                        resolve(db);\n\t                    };\n\t                });\n\n\t                return dropObjectPromise.then(function (db) {\n\t                    dbContext.db = db;\n\t                    for (var j = 0; j < forages.length; j++) {\n\t                        var _forage2 = forages[j];\n\t                        _forage2._dbInfo.db = db;\n\t                        _advanceReadiness(_forage2._dbInfo);\n\t                    }\n\t                })[\"catch\"](function (err) {\n\t                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n\t                    throw err;\n\t                });\n\t            });\n\t        }\n\t    }\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tvar asyncStorage = {\n\t    _driver: 'asyncStorage',\n\t    _initStorage: _initStorage,\n\t    _support: isIndexedDBValid(),\n\t    iterate: iterate,\n\t    getItem: getItem,\n\t    setItem: setItem,\n\t    removeItem: removeItem,\n\t    clear: clear,\n\t    length: length,\n\t    key: key,\n\t    keys: keys,\n\t    dropInstance: dropInstance\n\t};\n\n\tfunction isWebSQLValid() {\n\t    return typeof openDatabase === 'function';\n\t}\n\n\t// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n\t// it to Base64, so this is how we store it to prevent very strange errors with less\n\t// verbose ways of binary <-> string data storage.\n\tvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\tvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\n\tvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\n\tvar SERIALIZED_MARKER = '__lfsc__:';\n\tvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n\t// OMG the serializations!\n\tvar TYPE_ARRAYBUFFER = 'arbf';\n\tvar TYPE_BLOB = 'blob';\n\tvar TYPE_INT8ARRAY = 'si08';\n\tvar TYPE_UINT8ARRAY = 'ui08';\n\tvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\n\tvar TYPE_INT16ARRAY = 'si16';\n\tvar TYPE_INT32ARRAY = 'si32';\n\tvar TYPE_UINT16ARRAY = 'ur16';\n\tvar TYPE_UINT32ARRAY = 'ui32';\n\tvar TYPE_FLOAT32ARRAY = 'fl32';\n\tvar TYPE_FLOAT64ARRAY = 'fl64';\n\tvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\n\tvar toString$1 = Object.prototype.toString;\n\n\tfunction stringToBuffer(serializedString) {\n\t    // Fill the string into a ArrayBuffer.\n\t    var bufferLength = serializedString.length * 0.75;\n\t    var len = serializedString.length;\n\t    var i;\n\t    var p = 0;\n\t    var encoded1, encoded2, encoded3, encoded4;\n\n\t    if (serializedString[serializedString.length - 1] === '=') {\n\t        bufferLength--;\n\t        if (serializedString[serializedString.length - 2] === '=') {\n\t            bufferLength--;\n\t        }\n\t    }\n\n\t    var buffer = new ArrayBuffer(bufferLength);\n\t    var bytes = new Uint8Array(buffer);\n\n\t    for (i = 0; i < len; i += 4) {\n\t        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n\t        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n\t        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n\t        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n\t        /*jslint bitwise: true */\n\t        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n\t        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n\t        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n\t    }\n\t    return buffer;\n\t}\n\n\t// Converts a buffer to a string to store, serialized, in the backend\n\t// storage library.\n\tfunction bufferToString(buffer) {\n\t    // base64-arraybuffer\n\t    var bytes = new Uint8Array(buffer);\n\t    var base64String = '';\n\t    var i;\n\n\t    for (i = 0; i < bytes.length; i += 3) {\n\t        /*jslint bitwise: true */\n\t        base64String += BASE_CHARS[bytes[i] >> 2];\n\t        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n\t        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n\t        base64String += BASE_CHARS[bytes[i + 2] & 63];\n\t    }\n\n\t    if (bytes.length % 3 === 2) {\n\t        base64String = base64String.substring(0, base64String.length - 1) + '=';\n\t    } else if (bytes.length % 3 === 1) {\n\t        base64String = base64String.substring(0, base64String.length - 2) + '==';\n\t    }\n\n\t    return base64String;\n\t}\n\n\t// Serialize a value, afterwards executing a callback (which usually\n\t// instructs the `setItem()` callback/promise to be executed). This is how\n\t// we store binary data with localStorage.\n\tfunction serialize(value, callback) {\n\t    var valueType = '';\n\t    if (value) {\n\t        valueType = toString$1.call(value);\n\t    }\n\n\t    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n\t    // checks fail when running the tests using casper.js...\n\t    //\n\t    // TODO: See why those tests fail and use a better solution.\n\t    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n\t        // Convert binary arrays to a string and prefix the string with\n\t        // a special marker.\n\t        var buffer;\n\t        var marker = SERIALIZED_MARKER;\n\n\t        if (value instanceof ArrayBuffer) {\n\t            buffer = value;\n\t            marker += TYPE_ARRAYBUFFER;\n\t        } else {\n\t            buffer = value.buffer;\n\n\t            if (valueType === '[object Int8Array]') {\n\t                marker += TYPE_INT8ARRAY;\n\t            } else if (valueType === '[object Uint8Array]') {\n\t                marker += TYPE_UINT8ARRAY;\n\t            } else if (valueType === '[object Uint8ClampedArray]') {\n\t                marker += TYPE_UINT8CLAMPEDARRAY;\n\t            } else if (valueType === '[object Int16Array]') {\n\t                marker += TYPE_INT16ARRAY;\n\t            } else if (valueType === '[object Uint16Array]') {\n\t                marker += TYPE_UINT16ARRAY;\n\t            } else if (valueType === '[object Int32Array]') {\n\t                marker += TYPE_INT32ARRAY;\n\t            } else if (valueType === '[object Uint32Array]') {\n\t                marker += TYPE_UINT32ARRAY;\n\t            } else if (valueType === '[object Float32Array]') {\n\t                marker += TYPE_FLOAT32ARRAY;\n\t            } else if (valueType === '[object Float64Array]') {\n\t                marker += TYPE_FLOAT64ARRAY;\n\t            } else {\n\t                callback(new Error('Failed to get type for BinaryArray'));\n\t            }\n\t        }\n\n\t        callback(marker + bufferToString(buffer));\n\t    } else if (valueType === '[object Blob]') {\n\t        // Conver the blob to a binaryArray and then to a string.\n\t        var fileReader = new FileReader();\n\n\t        fileReader.onload = function () {\n\t            // Backwards-compatible prefix for the blob type.\n\t            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n\t            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n\t        };\n\n\t        fileReader.readAsArrayBuffer(value);\n\t    } else {\n\t        try {\n\t            callback(JSON.stringify(value));\n\t        } catch (e) {\n\t            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n\t            callback(null, e);\n\t        }\n\t    }\n\t}\n\n\t// Deserialize data we've inserted into a value column/field. We place\n\t// special markers into our strings to mark them as encoded; this isn't\n\t// as nice as a meta field, but it's the only sane thing we can do whilst\n\t// keeping localStorage support intact.\n\t//\n\t// Oftentimes this will just deserialize JSON content, but if we have a\n\t// special marker (SERIALIZED_MARKER, defined above), we will extract\n\t// some kind of arraybuffer/binary data/typed array out of the string.\n\tfunction deserialize(value) {\n\t    // If we haven't marked this string as being specially serialized (i.e.\n\t    // something other than serialized JSON), we can just return it and be\n\t    // done with it.\n\t    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n\t        return JSON.parse(value);\n\t    }\n\n\t    // The following code deals with deserializing some kind of Blob or\n\t    // TypedArray. First we separate out the type of data we're dealing\n\t    // with from the data itself.\n\t    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n\t    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n\t    var blobType;\n\t    // Backwards-compatible blob type serialization strategy.\n\t    // DBs created with older versions of localForage will simply not have the blob type.\n\t    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n\t        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n\t        blobType = matcher[1];\n\t        serializedString = serializedString.substring(matcher[0].length);\n\t    }\n\t    var buffer = stringToBuffer(serializedString);\n\n\t    // Return the right type based on the code/type set during\n\t    // serialization.\n\t    switch (type) {\n\t        case TYPE_ARRAYBUFFER:\n\t            return buffer;\n\t        case TYPE_BLOB:\n\t            return createBlob([buffer], { type: blobType });\n\t        case TYPE_INT8ARRAY:\n\t            return new Int8Array(buffer);\n\t        case TYPE_UINT8ARRAY:\n\t            return new Uint8Array(buffer);\n\t        case TYPE_UINT8CLAMPEDARRAY:\n\t            return new Uint8ClampedArray(buffer);\n\t        case TYPE_INT16ARRAY:\n\t            return new Int16Array(buffer);\n\t        case TYPE_UINT16ARRAY:\n\t            return new Uint16Array(buffer);\n\t        case TYPE_INT32ARRAY:\n\t            return new Int32Array(buffer);\n\t        case TYPE_UINT32ARRAY:\n\t            return new Uint32Array(buffer);\n\t        case TYPE_FLOAT32ARRAY:\n\t            return new Float32Array(buffer);\n\t        case TYPE_FLOAT64ARRAY:\n\t            return new Float64Array(buffer);\n\t        default:\n\t            throw new Error('Unkown type: ' + type);\n\t    }\n\t}\n\n\tvar localforageSerializer = {\n\t    serialize: serialize,\n\t    deserialize: deserialize,\n\t    stringToBuffer: stringToBuffer,\n\t    bufferToString: bufferToString\n\t};\n\n\t/*\n\t * Includes code from:\n\t *\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\n\tfunction createDbTable(t, dbInfo, callback, errorCallback) {\n\t    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n\t}\n\n\t// Open the WebSQL database (automatically creates one if one didn't\n\t// previously exist), using any options set in the config.\n\tfunction _initStorage$1(options) {\n\t    var self = this;\n\t    var dbInfo = {\n\t        db: null\n\t    };\n\n\t    if (options) {\n\t        for (var i in options) {\n\t            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n\t        }\n\t    }\n\n\t    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n\t        // Open the database; the openDatabase API will automatically\n\t        // create it for us if it doesn't exist.\n\t        try {\n\t            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n\t        } catch (e) {\n\t            return reject(e);\n\t        }\n\n\t        // Create our key/value table if it doesn't exist.\n\t        dbInfo.db.transaction(function (t) {\n\t            createDbTable(t, dbInfo, function () {\n\t                self._dbInfo = dbInfo;\n\t                resolve();\n\t            }, function (t, error) {\n\t                reject(error);\n\t            });\n\t        }, reject);\n\t    });\n\n\t    dbInfo.serializer = localforageSerializer;\n\t    return dbInfoPromise;\n\t}\n\n\tfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n\t    t.executeSql(sqlStatement, args, callback, function (t, error) {\n\t        if (error.code === error.SYNTAX_ERR) {\n\t            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n\t                if (!results.rows.length) {\n\t                    // if the table is missing (was deleted)\n\t                    // re-create it table and retry\n\t                    createDbTable(t, dbInfo, function () {\n\t                        t.executeSql(sqlStatement, args, callback, errorCallback);\n\t                    }, errorCallback);\n\t                } else {\n\t                    errorCallback(t, error);\n\t                }\n\t            }, errorCallback);\n\t        } else {\n\t            errorCallback(t, error);\n\t        }\n\t    }, errorCallback);\n\t}\n\n\tfunction getItem$1(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n\t                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n\t                    // Check to see if this is serialized content we need to\n\t                    // unpack.\n\t                    if (result) {\n\t                        result = dbInfo.serializer.deserialize(result);\n\t                    }\n\n\t                    resolve(result);\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction iterate$1(iterator, callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n\t                    var rows = results.rows;\n\t                    var length = rows.length;\n\n\t                    for (var i = 0; i < length; i++) {\n\t                        var item = rows.item(i);\n\t                        var result = item.value;\n\n\t                        // Check to see if this is serialized content\n\t                        // we need to unpack.\n\t                        if (result) {\n\t                            result = dbInfo.serializer.deserialize(result);\n\t                        }\n\n\t                        result = iterator(result, item.key, i + 1);\n\n\t                        // void(0) prevents problems with redefinition\n\t                        // of `undefined`.\n\t                        if (result !== void 0) {\n\t                            resolve(result);\n\t                            return;\n\t                        }\n\t                    }\n\n\t                    resolve();\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction _setItem(key, value, callback, retriesLeft) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            // The localStorage API doesn't return undefined values in an\n\t            // \"expected\" way, so undefined is always cast to null in all\n\t            // drivers. See: https://github.com/mozilla/localForage/pull/42\n\t            if (value === undefined) {\n\t                value = null;\n\t            }\n\n\t            // Save the original value to pass to the callback.\n\t            var originalValue = value;\n\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.serializer.serialize(value, function (value, error) {\n\t                if (error) {\n\t                    reject(error);\n\t                } else {\n\t                    dbInfo.db.transaction(function (t) {\n\t                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n\t                            resolve(originalValue);\n\t                        }, function (t, error) {\n\t                            reject(error);\n\t                        });\n\t                    }, function (sqlError) {\n\t                        // The transaction failed; check\n\t                        // to see if it's a quota error.\n\t                        if (sqlError.code === sqlError.QUOTA_ERR) {\n\t                            // We reject the callback outright for now, but\n\t                            // it's worth trying to re-run the transaction.\n\t                            // Even if the user accepts the prompt to use\n\t                            // more storage on Safari, this error will\n\t                            // be called.\n\t                            //\n\t                            // Try to re-run the transaction.\n\t                            if (retriesLeft > 0) {\n\t                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n\t                                return;\n\t                            }\n\t                            reject(sqlError);\n\t                        }\n\t                    });\n\t                }\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction setItem$1(key, value, callback) {\n\t    return _setItem.apply(this, [key, value, callback, 1]);\n\t}\n\n\tfunction removeItem$1(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n\t                    resolve();\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Deletes every item in the table.\n\t// TODO: Find out if this resets the AUTO_INCREMENT number.\n\tfunction clear$1(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n\t                    resolve();\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Does a simple `COUNT(key)` to get the number of items stored in\n\t// localForage.\n\tfunction length$1(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                // Ahhh, SQL makes this one soooooo easy.\n\t                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n\t                    var result = results.rows.item(0).c;\n\t                    resolve(result);\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Return the key located at key index X; essentially gets the key from a\n\t// `WHERE id = ?`. This is the most efficient way I can think to implement\n\t// this rarely-used (in my experience) part of the API, but it can seem\n\t// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n\t// the ID of each key will change every time it's updated. Perhaps a stored\n\t// procedure for the `setItem()` SQL would solve this problem?\n\t// TODO: Don't change ID on `setItem()`.\n\tfunction key$1(n, callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n\t                    var result = results.rows.length ? results.rows.item(0).key : null;\n\t                    resolve(result);\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction keys$1(callback) {\n\t    var self = this;\n\n\t    var promise = new Promise$1(function (resolve, reject) {\n\t        self.ready().then(function () {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.db.transaction(function (t) {\n\t                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n\t                    var keys = [];\n\n\t                    for (var i = 0; i < results.rows.length; i++) {\n\t                        keys.push(results.rows.item(i).key);\n\t                    }\n\n\t                    resolve(keys);\n\t                }, function (t, error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        })[\"catch\"](reject);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// https://www.w3.org/TR/webdatabase/#databases\n\t// > There is no way to enumerate or delete the databases available for an origin from this API.\n\tfunction getAllStoreNames(db) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        db.transaction(function (t) {\n\t            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n\t                var storeNames = [];\n\n\t                for (var i = 0; i < results.rows.length; i++) {\n\t                    storeNames.push(results.rows.item(i).name);\n\t                }\n\n\t                resolve({\n\t                    db: db,\n\t                    storeNames: storeNames\n\t                });\n\t            }, function (t, error) {\n\t                reject(error);\n\t            });\n\t        }, function (sqlError) {\n\t            reject(sqlError);\n\t        });\n\t    });\n\t}\n\n\tfunction dropInstance$1(options, callback) {\n\t    callback = getCallback.apply(this, arguments);\n\n\t    var currentConfig = this.config();\n\t    options = typeof options !== 'function' && options || {};\n\t    if (!options.name) {\n\t        options.name = options.name || currentConfig.name;\n\t        options.storeName = options.storeName || currentConfig.storeName;\n\t    }\n\n\t    var self = this;\n\t    var promise;\n\t    if (!options.name) {\n\t        promise = Promise$1.reject('Invalid arguments');\n\t    } else {\n\t        promise = new Promise$1(function (resolve) {\n\t            var db;\n\t            if (options.name === currentConfig.name) {\n\t                // use the db reference of the current instance\n\t                db = self._dbInfo.db;\n\t            } else {\n\t                db = openDatabase(options.name, '', '', 0);\n\t            }\n\n\t            if (!options.storeName) {\n\t                // drop all database tables\n\t                resolve(getAllStoreNames(db));\n\t            } else {\n\t                resolve({\n\t                    db: db,\n\t                    storeNames: [options.storeName]\n\t                });\n\t            }\n\t        }).then(function (operationInfo) {\n\t            return new Promise$1(function (resolve, reject) {\n\t                operationInfo.db.transaction(function (t) {\n\t                    function dropTable(storeName) {\n\t                        return new Promise$1(function (resolve, reject) {\n\t                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n\t                                resolve();\n\t                            }, function (t, error) {\n\t                                reject(error);\n\t                            });\n\t                        });\n\t                    }\n\n\t                    var operations = [];\n\t                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n\t                        operations.push(dropTable(operationInfo.storeNames[i]));\n\t                    }\n\n\t                    Promise$1.all(operations).then(function () {\n\t                        resolve();\n\t                    })[\"catch\"](function (e) {\n\t                        reject(e);\n\t                    });\n\t                }, function (sqlError) {\n\t                    reject(sqlError);\n\t                });\n\t            });\n\t        });\n\t    }\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tvar webSQLStorage = {\n\t    _driver: 'webSQLStorage',\n\t    _initStorage: _initStorage$1,\n\t    _support: isWebSQLValid(),\n\t    iterate: iterate$1,\n\t    getItem: getItem$1,\n\t    setItem: setItem$1,\n\t    removeItem: removeItem$1,\n\t    clear: clear$1,\n\t    length: length$1,\n\t    key: key$1,\n\t    keys: keys$1,\n\t    dropInstance: dropInstance$1\n\t};\n\n\tfunction isLocalStorageValid() {\n\t    try {\n\t        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n\t        // in IE8 typeof localStorage.setItem === 'object'\n\t        !!localStorage.setItem;\n\t    } catch (e) {\n\t        return false;\n\t    }\n\t}\n\n\tfunction _getKeyPrefix(options, defaultConfig) {\n\t    var keyPrefix = options.name + '/';\n\n\t    if (options.storeName !== defaultConfig.storeName) {\n\t        keyPrefix += options.storeName + '/';\n\t    }\n\t    return keyPrefix;\n\t}\n\n\t// Check if localStorage throws when saving an item\n\tfunction checkIfLocalStorageThrows() {\n\t    var localStorageTestKey = '_localforage_support_test';\n\n\t    try {\n\t        localStorage.setItem(localStorageTestKey, true);\n\t        localStorage.removeItem(localStorageTestKey);\n\n\t        return false;\n\t    } catch (e) {\n\t        return true;\n\t    }\n\t}\n\n\t// Check if localStorage is usable and allows to save an item\n\t// This method checks if localStorage is usable in Safari Private Browsing\n\t// mode, or in any other case where the available quota for localStorage\n\t// is 0 and there wasn't any saved items yet.\n\tfunction _isLocalStorageUsable() {\n\t    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n\t}\n\n\t// Config the localStorage backend, using options set in the config.\n\tfunction _initStorage$2(options) {\n\t    var self = this;\n\t    var dbInfo = {};\n\t    if (options) {\n\t        for (var i in options) {\n\t            dbInfo[i] = options[i];\n\t        }\n\t    }\n\n\t    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n\t    if (!_isLocalStorageUsable()) {\n\t        return Promise$1.reject();\n\t    }\n\n\t    self._dbInfo = dbInfo;\n\t    dbInfo.serializer = localforageSerializer;\n\n\t    return Promise$1.resolve();\n\t}\n\n\t// Remove all keys from the datastore, effectively destroying all data in\n\t// the app's key/value store!\n\tfunction clear$2(callback) {\n\t    var self = this;\n\t    var promise = self.ready().then(function () {\n\t        var keyPrefix = self._dbInfo.keyPrefix;\n\n\t        for (var i = localStorage.length - 1; i >= 0; i--) {\n\t            var key = localStorage.key(i);\n\n\t            if (key.indexOf(keyPrefix) === 0) {\n\t                localStorage.removeItem(key);\n\t            }\n\t        }\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Retrieve an item from the store. Unlike the original async_storage\n\t// library in Gaia, we don't modify return values at all. If a key's value\n\t// is `undefined`, we pass that value to the callback function.\n\tfunction getItem$2(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n\t        // If a result was found, parse it from the serialized\n\t        // string into a JS object. If result isn't truthy, the key\n\t        // is likely undefined and we'll pass it straight to the\n\t        // callback.\n\t        if (result) {\n\t            result = dbInfo.serializer.deserialize(result);\n\t        }\n\n\t        return result;\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Iterate over all items in the store.\n\tfunction iterate$2(iterator, callback) {\n\t    var self = this;\n\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        var keyPrefix = dbInfo.keyPrefix;\n\t        var keyPrefixLength = keyPrefix.length;\n\t        var length = localStorage.length;\n\n\t        // We use a dedicated iterator instead of the `i` variable below\n\t        // so other keys we fetch in localStorage aren't counted in\n\t        // the `iterationNumber` argument passed to the `iterate()`\n\t        // callback.\n\t        //\n\t        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n\t        var iterationNumber = 1;\n\n\t        for (var i = 0; i < length; i++) {\n\t            var key = localStorage.key(i);\n\t            if (key.indexOf(keyPrefix) !== 0) {\n\t                continue;\n\t            }\n\t            var value = localStorage.getItem(key);\n\n\t            // If a result was found, parse it from the serialized\n\t            // string into a JS object. If result isn't truthy, the\n\t            // key is likely undefined and we'll pass it straight\n\t            // to the iterator.\n\t            if (value) {\n\t                value = dbInfo.serializer.deserialize(value);\n\t            }\n\n\t            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n\t            if (value !== void 0) {\n\t                return value;\n\t            }\n\t        }\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Same as localStorage's key() method, except takes a callback.\n\tfunction key$2(n, callback) {\n\t    var self = this;\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        var result;\n\t        try {\n\t            result = localStorage.key(n);\n\t        } catch (error) {\n\t            result = null;\n\t        }\n\n\t        // Remove the prefix from the key, if a key is found.\n\t        if (result) {\n\t            result = result.substring(dbInfo.keyPrefix.length);\n\t        }\n\n\t        return result;\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction keys$2(callback) {\n\t    var self = this;\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        var length = localStorage.length;\n\t        var keys = [];\n\n\t        for (var i = 0; i < length; i++) {\n\t            var itemKey = localStorage.key(i);\n\t            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n\t                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n\t            }\n\t        }\n\n\t        return keys;\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Supply the number of keys in the datastore to the callback function.\n\tfunction length$2(callback) {\n\t    var self = this;\n\t    var promise = self.keys().then(function (keys) {\n\t        return keys.length;\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Remove an item from the store, nice and simple.\n\tfunction removeItem$2(key, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = self.ready().then(function () {\n\t        var dbInfo = self._dbInfo;\n\t        localStorage.removeItem(dbInfo.keyPrefix + key);\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\t// Set a key's value and run an optional callback once the value is set.\n\t// Unlike Gaia's implementation, the callback function is passed the value,\n\t// in case you want to operate on that value only after you're sure it\n\t// saved, or something like that.\n\tfunction setItem$2(key, value, callback) {\n\t    var self = this;\n\n\t    key = normalizeKey(key);\n\n\t    var promise = self.ready().then(function () {\n\t        // Convert undefined values to null.\n\t        // https://github.com/mozilla/localForage/pull/42\n\t        if (value === undefined) {\n\t            value = null;\n\t        }\n\n\t        // Save the original value to pass to the callback.\n\t        var originalValue = value;\n\n\t        return new Promise$1(function (resolve, reject) {\n\t            var dbInfo = self._dbInfo;\n\t            dbInfo.serializer.serialize(value, function (value, error) {\n\t                if (error) {\n\t                    reject(error);\n\t                } else {\n\t                    try {\n\t                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n\t                        resolve(originalValue);\n\t                    } catch (e) {\n\t                        // localStorage capacity exceeded.\n\t                        // TODO: Make this a specific error/event.\n\t                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n\t                            reject(e);\n\t                        }\n\t                        reject(e);\n\t                    }\n\t                }\n\t            });\n\t        });\n\t    });\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tfunction dropInstance$2(options, callback) {\n\t    callback = getCallback.apply(this, arguments);\n\n\t    options = typeof options !== 'function' && options || {};\n\t    if (!options.name) {\n\t        var currentConfig = this.config();\n\t        options.name = options.name || currentConfig.name;\n\t        options.storeName = options.storeName || currentConfig.storeName;\n\t    }\n\n\t    var self = this;\n\t    var promise;\n\t    if (!options.name) {\n\t        promise = Promise$1.reject('Invalid arguments');\n\t    } else {\n\t        promise = new Promise$1(function (resolve) {\n\t            if (!options.storeName) {\n\t                resolve(options.name + '/');\n\t            } else {\n\t                resolve(_getKeyPrefix(options, self._defaultConfig));\n\t            }\n\t        }).then(function (keyPrefix) {\n\t            for (var i = localStorage.length - 1; i >= 0; i--) {\n\t                var key = localStorage.key(i);\n\n\t                if (key.indexOf(keyPrefix) === 0) {\n\t                    localStorage.removeItem(key);\n\t                }\n\t            }\n\t        });\n\t    }\n\n\t    executeCallback(promise, callback);\n\t    return promise;\n\t}\n\n\tvar localStorageWrapper = {\n\t    _driver: 'localStorageWrapper',\n\t    _initStorage: _initStorage$2,\n\t    _support: isLocalStorageValid(),\n\t    iterate: iterate$2,\n\t    getItem: getItem$2,\n\t    setItem: setItem$2,\n\t    removeItem: removeItem$2,\n\t    clear: clear$2,\n\t    length: length$2,\n\t    key: key$2,\n\t    keys: keys$2,\n\t    dropInstance: dropInstance$2\n\t};\n\n\tvar sameValue = function sameValue(x, y) {\n\t    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n\t};\n\n\tvar includes = function includes(array, searchElement) {\n\t    var len = array.length;\n\t    var i = 0;\n\t    while (i < len) {\n\t        if (sameValue(array[i], searchElement)) {\n\t            return true;\n\t        }\n\t        i++;\n\t    }\n\n\t    return false;\n\t};\n\n\tvar isArray = Array.isArray || function (arg) {\n\t    return Object.prototype.toString.call(arg) === '[object Array]';\n\t};\n\n\t// Drivers are stored here when `defineDriver()` is called.\n\t// They are shared across all instances of localForage.\n\tvar DefinedDrivers = {};\n\n\tvar DriverSupport = {};\n\n\tvar DefaultDrivers = {\n\t    INDEXEDDB: asyncStorage,\n\t    WEBSQL: webSQLStorage,\n\t    LOCALSTORAGE: localStorageWrapper\n\t};\n\n\tvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\n\tvar OptionalDriverMethods = ['dropInstance'];\n\n\tvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\n\tvar DefaultConfig = {\n\t    description: '',\n\t    driver: DefaultDriverOrder.slice(),\n\t    name: 'localforage',\n\t    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n\t    // we can use without a prompt.\n\t    size: 4980736,\n\t    storeName: 'keyvaluepairs',\n\t    version: 1.0\n\t};\n\n\tfunction callWhenReady(localForageInstance, libraryMethod) {\n\t    localForageInstance[libraryMethod] = function () {\n\t        var _args = arguments;\n\t        return localForageInstance.ready().then(function () {\n\t            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n\t        });\n\t    };\n\t}\n\n\tfunction extend() {\n\t    for (var i = 1; i < arguments.length; i++) {\n\t        var arg = arguments[i];\n\n\t        if (arg) {\n\t            for (var _key in arg) {\n\t                if (arg.hasOwnProperty(_key)) {\n\t                    if (isArray(arg[_key])) {\n\t                        arguments[0][_key] = arg[_key].slice();\n\t                    } else {\n\t                        arguments[0][_key] = arg[_key];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\n\t    return arguments[0];\n\t}\n\n\tvar LocalForage = function () {\n\t    function LocalForage(options) {\n\t        _classCallCheck(this, LocalForage);\n\n\t        for (var driverTypeKey in DefaultDrivers) {\n\t            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n\t                var driver = DefaultDrivers[driverTypeKey];\n\t                var driverName = driver._driver;\n\t                this[driverTypeKey] = driverName;\n\n\t                if (!DefinedDrivers[driverName]) {\n\t                    // we don't need to wait for the promise,\n\t                    // since the default drivers can be defined\n\t                    // in a blocking manner\n\t                    this.defineDriver(driver);\n\t                }\n\t            }\n\t        }\n\n\t        this._defaultConfig = extend({}, DefaultConfig);\n\t        this._config = extend({}, this._defaultConfig, options);\n\t        this._driverSet = null;\n\t        this._initDriver = null;\n\t        this._ready = false;\n\t        this._dbInfo = null;\n\n\t        this._wrapLibraryMethodsWithReady();\n\t        this.setDriver(this._config.driver)[\"catch\"](function () {});\n\t    }\n\n\t    // Set any config values for localForage; can be called anytime before\n\t    // the first API call (e.g. `getItem`, `setItem`).\n\t    // We loop through options so we don't overwrite existing config\n\t    // values.\n\n\n\t    LocalForage.prototype.config = function config(options) {\n\t        // If the options argument is an object, we use it to set values.\n\t        // Otherwise, we return either a specified config value or all\n\t        // config values.\n\t        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n\t            // If localforage is ready and fully initialized, we can't set\n\t            // any new configuration values. Instead, we return an error.\n\t            if (this._ready) {\n\t                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n\t            }\n\n\t            for (var i in options) {\n\t                if (i === 'storeName') {\n\t                    options[i] = options[i].replace(/\\W/g, '_');\n\t                }\n\n\t                if (i === 'version' && typeof options[i] !== 'number') {\n\t                    return new Error('Database version must be a number.');\n\t                }\n\n\t                this._config[i] = options[i];\n\t            }\n\n\t            // after all config options are set and\n\t            // the driver option is used, try setting it\n\t            if ('driver' in options && options.driver) {\n\t                return this.setDriver(this._config.driver);\n\t            }\n\n\t            return true;\n\t        } else if (typeof options === 'string') {\n\t            return this._config[options];\n\t        } else {\n\t            return this._config;\n\t        }\n\t    };\n\n\t    // Used to define a custom driver, shared across all instances of\n\t    // localForage.\n\n\n\t    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n\t        var promise = new Promise$1(function (resolve, reject) {\n\t            try {\n\t                var driverName = driverObject._driver;\n\t                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n\t                // A driver name should be defined and not overlap with the\n\t                // library-defined, default drivers.\n\t                if (!driverObject._driver) {\n\t                    reject(complianceError);\n\t                    return;\n\t                }\n\n\t                var driverMethods = LibraryMethods.concat('_initStorage');\n\t                for (var i = 0, len = driverMethods.length; i < len; i++) {\n\t                    var driverMethodName = driverMethods[i];\n\n\t                    // when the property is there,\n\t                    // it should be a method even when optional\n\t                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n\t                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n\t                        reject(complianceError);\n\t                        return;\n\t                    }\n\t                }\n\n\t                var configureMissingMethods = function configureMissingMethods() {\n\t                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n\t                        return function () {\n\t                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n\t                            var promise = Promise$1.reject(error);\n\t                            executeCallback(promise, arguments[arguments.length - 1]);\n\t                            return promise;\n\t                        };\n\t                    };\n\n\t                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n\t                        var optionalDriverMethod = OptionalDriverMethods[_i];\n\t                        if (!driverObject[optionalDriverMethod]) {\n\t                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n\t                        }\n\t                    }\n\t                };\n\n\t                configureMissingMethods();\n\n\t                var setDriverSupport = function setDriverSupport(support) {\n\t                    if (DefinedDrivers[driverName]) {\n\t                        console.info('Redefining LocalForage driver: ' + driverName);\n\t                    }\n\t                    DefinedDrivers[driverName] = driverObject;\n\t                    DriverSupport[driverName] = support;\n\t                    // don't use a then, so that we can define\n\t                    // drivers that have simple _support methods\n\t                    // in a blocking manner\n\t                    resolve();\n\t                };\n\n\t                if ('_support' in driverObject) {\n\t                    if (driverObject._support && typeof driverObject._support === 'function') {\n\t                        driverObject._support().then(setDriverSupport, reject);\n\t                    } else {\n\t                        setDriverSupport(!!driverObject._support);\n\t                    }\n\t                } else {\n\t                    setDriverSupport(true);\n\t                }\n\t            } catch (e) {\n\t                reject(e);\n\t            }\n\t        });\n\n\t        executeTwoCallbacks(promise, callback, errorCallback);\n\t        return promise;\n\t    };\n\n\t    LocalForage.prototype.driver = function driver() {\n\t        return this._driver || null;\n\t    };\n\n\t    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n\t        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n\t        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n\t        return getDriverPromise;\n\t    };\n\n\t    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n\t        var serializerPromise = Promise$1.resolve(localforageSerializer);\n\t        executeTwoCallbacks(serializerPromise, callback);\n\t        return serializerPromise;\n\t    };\n\n\t    LocalForage.prototype.ready = function ready(callback) {\n\t        var self = this;\n\n\t        var promise = self._driverSet.then(function () {\n\t            if (self._ready === null) {\n\t                self._ready = self._initDriver();\n\t            }\n\n\t            return self._ready;\n\t        });\n\n\t        executeTwoCallbacks(promise, callback, callback);\n\t        return promise;\n\t    };\n\n\t    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n\t        var self = this;\n\n\t        if (!isArray(drivers)) {\n\t            drivers = [drivers];\n\t        }\n\n\t        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n\t        function setDriverToConfig() {\n\t            self._config.driver = self.driver();\n\t        }\n\n\t        function extendSelfWithDriver(driver) {\n\t            self._extend(driver);\n\t            setDriverToConfig();\n\n\t            self._ready = self._initStorage(self._config);\n\t            return self._ready;\n\t        }\n\n\t        function initDriver(supportedDrivers) {\n\t            return function () {\n\t                var currentDriverIndex = 0;\n\n\t                function driverPromiseLoop() {\n\t                    while (currentDriverIndex < supportedDrivers.length) {\n\t                        var driverName = supportedDrivers[currentDriverIndex];\n\t                        currentDriverIndex++;\n\n\t                        self._dbInfo = null;\n\t                        self._ready = null;\n\n\t                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n\t                    }\n\n\t                    setDriverToConfig();\n\t                    var error = new Error('No available storage method found.');\n\t                    self._driverSet = Promise$1.reject(error);\n\t                    return self._driverSet;\n\t                }\n\n\t                return driverPromiseLoop();\n\t            };\n\t        }\n\n\t        // There might be a driver initialization in progress\n\t        // so wait for it to finish in order to avoid a possible\n\t        // race condition to set _dbInfo\n\t        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n\t            return Promise$1.resolve();\n\t        }) : Promise$1.resolve();\n\n\t        this._driverSet = oldDriverSetDone.then(function () {\n\t            var driverName = supportedDrivers[0];\n\t            self._dbInfo = null;\n\t            self._ready = null;\n\n\t            return self.getDriver(driverName).then(function (driver) {\n\t                self._driver = driver._driver;\n\t                setDriverToConfig();\n\t                self._wrapLibraryMethodsWithReady();\n\t                self._initDriver = initDriver(supportedDrivers);\n\t            });\n\t        })[\"catch\"](function () {\n\t            setDriverToConfig();\n\t            var error = new Error('No available storage method found.');\n\t            self._driverSet = Promise$1.reject(error);\n\t            return self._driverSet;\n\t        });\n\n\t        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n\t        return this._driverSet;\n\t    };\n\n\t    LocalForage.prototype.supports = function supports(driverName) {\n\t        return !!DriverSupport[driverName];\n\t    };\n\n\t    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n\t        extend(this, libraryMethodsAndProperties);\n\t    };\n\n\t    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n\t        var supportedDrivers = [];\n\t        for (var i = 0, len = drivers.length; i < len; i++) {\n\t            var driverName = drivers[i];\n\t            if (this.supports(driverName)) {\n\t                supportedDrivers.push(driverName);\n\t            }\n\t        }\n\t        return supportedDrivers;\n\t    };\n\n\t    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n\t        // Add a stub for each driver API method that delays the call to the\n\t        // corresponding driver method until localForage is ready. These stubs\n\t        // will be replaced by the driver methods as soon as the driver is\n\t        // loaded, so there is no performance impact.\n\t        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n\t            callWhenReady(this, LibraryMethods[i]);\n\t        }\n\t    };\n\n\t    LocalForage.prototype.createInstance = function createInstance(options) {\n\t        return new LocalForage(options);\n\t    };\n\n\t    return LocalForage;\n\t}();\n\n\t// The actual localForage object that we expose as a module or via a\n\t// global. It's extended by pulling in one of our other libraries.\n\n\n\tvar localforage_js = new LocalForage();\n\n\tmodule.exports = localforage_js;\n\n\t},{\"3\":3}]},{},[4])(4)\n\t}); \n} (localforage$1));\n\nvar localforageExports = localforage$1.exports;\nvar localforage = /*@__PURE__*/getDefaultExportFromCjs(localforageExports);\n\nfunction uuid(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,uuid)}\r\n\r\n/**\r\n * regex used to validate AppObject external ids\r\n * (UUID form is 8 digits followed by three groups of 4 digits followed by a group of 12)\r\n */\r\nconst UUID_REGEX = /^[a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}$/;\r\n\r\nconst SAVE_STATE_LOCAL = 'SAVED_LOCALLY';\r\nconst SAVE_STATE_SERVER = 'SAVED_TO_SERVER';\r\n\r\nclass Model extends EventHarness {\r\n    /**\r\n     * @type {string}\r\n     */\r\n    _id;\r\n\r\n    /**\r\n     * set if the object has been posted to the server\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    _savedRemotely = false;\r\n\r\n    static EVENT_SAVED_REMOTELY = 'savedremotely';\r\n\r\n    static bsbiAppVersion = '';\r\n\r\n    /**\r\n     *\r\n     * @param {boolean} savedFlag\r\n     */\r\n    set savedRemotely(savedFlag) {\r\n        if (this._savedRemotely !== savedFlag) {\r\n            this._savedRemotely = !!savedFlag;\r\n\r\n            if (this._savedRemotely) {\r\n                this.fireEvent(Model.EVENT_SAVED_REMOTELY, {id : this.id});\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set if the object has been added to a temporary store (e.g. indexedDb)\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    _savedLocally = false;\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    deleted = false;\r\n\r\n    /**\r\n     * unix timestamp (seconds since epoch)\r\n     * Provided that the created stamp is < the modified stamp then the externally assigned creation stamp will be used\r\n     *\r\n     * @type {number}\r\n     */\r\n    createdStamp;\r\n\r\n    /**\r\n     * unix timestamp (seconds since epoch)\r\n     * modified stamp is generally server assigned - rather than using a potentially discrepant client clock\r\n     * this may increase synchrony and trust between distributed clients\r\n     *\r\n     * @type {number}\r\n     */\r\n    modifiedStamp;\r\n\r\n    /**\r\n     * DDb AppProject id\r\n     *\r\n     * @type {number}\r\n     */\r\n    projectId;\r\n\r\n    /**\r\n     * paired with isNew this marks objects that have never been edited\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isPristine = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.createdStamp = Math.floor(Date.now() / 1000);\r\n    }\r\n\r\n    /**\r\n     * returns true if either remote or local copy is missing\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    unsaved() {\r\n        return !(this._savedLocally && this._savedRemotely);\r\n    }\r\n\r\n    /**\r\n     * string\r\n     */\r\n    get id() {\r\n        if (!this._id) {\r\n            this._id = uuid();\r\n        } else if (this._id === 'undefined') {\r\n            console.error(\"id is literal 'undefined', am forcing new id\");\r\n            this._id = uuid();\r\n        }\r\n\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} newId\r\n     */\r\n    set id(newId) {\r\n\r\n        if (!newId.match(UUID_REGEX)) {\r\n            throw new Error(`Cannot set malformed object id '${newId}'.`);\r\n        } else {\r\n            // only allow an id to be set if not present already\r\n\r\n            if (this._id && newId !== this._id) {\r\n                throw new Error(`Object id has already been set, when trying to set new id '${newId}'.`);\r\n            }\r\n            this._id = newId;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<function>}\r\n     * @private\r\n     */\r\n    static _tasks = [];\r\n\r\n    /**\r\n     * Add a post request to the queue\r\n     * Requests run in sequence.\r\n     * Returns a promise that resolves once the queued request completes\r\n     *\r\n     * The queue reduces the chance of requests being sent to the server out-of-order (which can lead to race conditions)\r\n     *\r\n     * @param formData\r\n     * @returns {Promise}\r\n     */\r\n    queuePost(formData) {\r\n        return new Promise((resolve, reject) => {\r\n            /**\r\n             * @returns {Promise}\r\n             */\r\n            const task = () => {\r\n                console.log({'posting form data': formData});\r\n                return this.post(formData).then(resolve, reject);\r\n            };\r\n\r\n            Model._tasks.push(task);\r\n\r\n            if (Model._tasks.length > 1) {\r\n                console.log(`Added post request to the queue.`);\r\n            } else {\r\n                console.log(`No pending tasks, starting post request immediately.`);\r\n                task().finally(Model._next);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    static _next() {\r\n        Model._tasks.shift(); // save is done\r\n\r\n        if (Model._tasks.length) {\r\n            // run the next task\r\n            console.log('Running the next task.');\r\n            return Model._tasks[0]().finally(Model._next);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /save<object>\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexeddb\r\n     * a successful save will result in a json response containing the uri from which the image may be retrieved\r\n     * and also the state of persistence (whether or not the image was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the image directly to indexeddb\r\n     *\r\n     * must test indexeddb for this eventuality after the save has returned\r\n     *\r\n     * @param {FormData} formData\r\n     * @returns {Promise}\r\n     */\r\n    post(formData) {\r\n        return fetch(this.SAVE_ENDPOINT, {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                // need to find out whether this was a local store in indexedDb by the service worker\r\n                // or a server-side save\r\n\r\n                // to do that need to decode the json response\r\n                // which can only be done once, so need to clone first\r\n                const clonedResponse = response.clone();\r\n                return clonedResponse.json().then((responseData) => {\r\n                    /** @param {{saveState : string, created : number, modified : number}} responseData */\r\n\r\n                    console.log({'returned to client after save' : responseData});\r\n\r\n                    switch (responseData.saveState) {\r\n                        case SAVE_STATE_SERVER:\r\n                            this._savedLocally = true;\r\n                            this.savedRemotely = true;\r\n                            break;\r\n\r\n                        case SAVE_STATE_LOCAL:\r\n                            this._savedLocally = true;\r\n                            this.savedRemotely = false;\r\n                            break;\r\n\r\n                        default:\r\n                            console.log(`Unrecognised save state '${responseData.saveState}'`);\r\n                    }\r\n\r\n                    this.createdStamp = parseInt(responseData.created, 10);\r\n                    this.modifiedStamp = parseInt(responseData.modified, 10);\r\n\r\n                    // return the json version of the original response as a promise\r\n                    return response.json(); // assign appropriate JSON type to the response\r\n                });\r\n            } else {\r\n                // try instead to write the data to local storage\r\n\r\n                console.log('Save failed, presumably service worker is missing and there is no network connection. Should write to IndexedDb here.');\r\n                this._savedLocally = false;\r\n                this.savedRemotely = false;\r\n\r\n                return Promise.reject('IndexedDb storage not yet implemented');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @param {(Survey|Occurrence|OccurrenceImage)} modelObject\r\n     * @returns {Promise}\r\n     */\r\n    static retrieveFromLocal(id, modelObject) {\r\n        return localforage.getItem(`${modelObject.TYPE}.${id}`)\r\n            .then((descriptor) => {\r\n                if (descriptor) {\r\n                    modelObject._id = id; // _id must be set directly rather than through the setter, as a spurious id already set for the empty may need to be overwritten\r\n                    modelObject._parseDescriptor(descriptor);\r\n\r\n                    return modelObject;\r\n                } else {\r\n                    return Promise.reject(`Failed to retrieve ${modelObject.TYPE}.${id} locally`);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{\r\n     *      id : string,\r\n     *      saveState: string,\r\n     *      [userId]: string,\r\n     *      attributes: Object.<string, *>,\r\n     *      deleted: boolean|string,\r\n     *      created: (number|string),\r\n     *      modified: (number|string),\r\n     *      projectId: (number|string)\r\n     *      }} descriptor\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        this._parseAttributes(descriptor.attributes);\r\n        this._parseSavedState(descriptor.saveState);\r\n        this.deleted = (descriptor.deleted === true) || (descriptor.deleted === 'true'); // cast stringified boolean to true boolean\r\n        this.createdStamp = parseInt(descriptor.created, 10);\r\n        this.modifiedStamp = descriptor.modified ? parseInt(descriptor.modified, 10) : 0; // avoids NaN\r\n        this.projectId = parseInt(descriptor.projectId, 10);\r\n\r\n        if (descriptor.userId) {\r\n            this.userId = descriptor.userId;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object.<string, {}>|string|Array} attributes\r\n     */\r\n    _parseAttributes(attributes) {\r\n        if (typeof attributes === 'string') {\r\n            attributes = JSON.parse(attributes);\r\n        }\r\n\r\n        if (Array.isArray(attributes)) {\r\n            // problematic bug, where empty attributes come back as an array rather than as an object\r\n\r\n            //console.log('Attributes were spuriously represented as an array rather than as an empty object');\r\n            this.attributes = {};\r\n        } else {\r\n            this.attributes = attributes;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} saveState\r\n     */\r\n    _parseSavedState(saveState) {\r\n        switch (saveState) {\r\n            case SAVE_STATE_LOCAL:\r\n                this.savedRemotely = false;\r\n                this._savedLocally = true;\r\n                break;\r\n\r\n            case SAVE_STATE_SERVER:\r\n                this.savedRemotely = true;\r\n                this._savedLocally = true;\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Unrecognised saved state '${saveState}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * update modified stamp to current time\r\n     */\r\n    touch() {\r\n        this.modifiedStamp = Math.floor(Date.now() / 1000);\r\n\r\n        if (this.isPristine) {\r\n            this.isPristine = false;\r\n            this.createdStamp = this.modifiedStamp;\r\n        }\r\n\r\n        this._savedLocally = false;\r\n        this.savedRemotely = false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object.<string,{field: typeof FormField, [validator]: function, attributes: {label: string, helpText: string, placeholder: string, autocomplete: string}}>} formSectionProperties\r\n     * @return {{requiredFieldsPresent: boolean, validity: Object.<string, boolean>}}\r\n     */\r\n    evaluateCompletionStatus(formSectionProperties) {\r\n        const validity = {};\r\n        let requiredFieldsPresent = true;\r\n\r\n        for (let key in formSectionProperties) {\r\n            if (formSectionProperties.hasOwnProperty(key)) {\r\n                let property = formSectionProperties[key];\r\n\r\n                validity[key] = property.validator ?\r\n                    property.validator(key, property, this.attributes)\r\n                    :\r\n                    property.field.isValid(key, property, this.attributes);\r\n\r\n                if (null !== validity[key]) {\r\n                    // validity can be 'null' in which case field was optional and not assessed\r\n                    requiredFieldsPresent = requiredFieldsPresent && validity[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            requiredFieldsPresent,\r\n            validity\r\n        };\r\n    }\r\n}\n\n/**\r\n *\r\n * @param text\r\n * @returns {string}\r\n */\r\nfunction escapeHTML(text) {\r\n    try {\r\n        // IE (even v 11) sometimes fails here with 'Unknown runtime error', see http://blog.rakeshpai.me/2007/02/ies-unknown-runtime-error-when-using.html\r\n        const textArea = document.createElement('textarea');\r\n        textArea.innerHTML = text;\r\n        return textArea.innerHTML.replace(/\"/g, '&quot;');\r\n    } catch (e) {\r\n        const pre = document.createElement('pre');\r\n        pre.appendChild(document.createTextNode(text));\r\n        return pre.innerHTML.replace(/\"/g, '&quot;');\r\n    }\r\n}\n\nclass DeviceType extends EventHarness {\r\n\tstatic DEVICE_TYPE_UNKNOWN = 'unknown';\r\n\tstatic DEVICE_TYPE_UNCHECKED = 'unchecked';\r\n\tstatic DEVICE_TYPE_MOBILE = 'mobile';\r\n\tstatic DEVICE_TYPE_IMMOBILE = 'immobile';\r\n\r\n\t/**\r\n\t * global flag affecting behaviour of some GPS functionality\r\n\t * e.g. on a non-mobile device, don't automatically seek GPS locality for new records\r\n\t * @private\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tstatic _deviceType = DeviceType.DEVICE_TYPE_UNCHECKED;\r\n\r\n\t/**\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getDeviceType() {\r\n\t\tif (DeviceType._deviceType === DeviceType.DEVICE_TYPE_UNCHECKED) {\r\n\t\t\tif (navigator.userAgentData && \"mobile\" in navigator.userAgentData) {\r\n\t\t\t\tDeviceType._deviceType = navigator.userAgentData.mobile ?\r\n\t\t\t\t\tDeviceType.DEVICE_TYPE_MOBILE : DeviceType.DEVICE_TYPE_IMMOBILE;\r\n\t\t\t\tconsole.log(`Evaluated device using mobile flag, result: ${DeviceType._deviceType}`);\r\n\t\t\t} else if (/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) {\r\n\t\t\t\t// see https://javascript.plainenglish.io/how-to-detect-a-mobile-device-with-javascript-1c26e0002b31\r\n\t\t\t\tconsole.log(`Detected mobile via use-agent string: ${navigator.userAgent}`);\r\n\t\t\t\tDeviceType._deviceType = DeviceType.DEVICE_TYPE_MOBILE;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Flagging device type as unknown.');\r\n\t\t\t\tDeviceType._deviceType = DeviceType.DEVICE_TYPE_UNKNOWN;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn DeviceType._deviceType;\r\n\t}\r\n}\n\n//import {Survey} from \"./Survey\";\r\n\r\n/**\r\n * Used for saving current survey track that is still open\r\n * @type {number}\r\n */\r\nconst TRACK_END_REASON_SURVEY_OPEN = 0;\r\n\r\nconst TRACK_END_REASON_WATCHING_ENDED = 1;\r\nconst TRACK_END_REASON_SURVEY_DATE = 2;\r\nconst TRACK_END_REASON_SURVEY_CHANGED = 3;\r\n\r\nclass Track extends Model {\r\n\r\n    /**\r\n     * @typedef PointTriplet\r\n     * @type {array}\r\n     * @property {number} 0 lng\r\n     * @property {number} 1 lat\r\n     * @property {number} 2 stamp (seconds since epoch)\r\n     */\r\n\r\n    /**\r\n     * @typedef PointSeries\r\n     * @type {Array<Array<PointTriplet>|number>}\r\n     * @property {Array<PointTriplet>} 0 points\r\n     * @property {number} 1 end reason code\r\n     */\r\n\r\n    /**\r\n     *\r\n     * @type {Object}\r\n     */\r\n    attributes = {};\r\n\r\n    /**\r\n     *\r\n     * @type {Array<PointSeries>}\r\n     */\r\n    points = []\r\n\r\n    /**\r\n     * next index to write to in points\r\n     * Following a successful save to the server, the earlier values will be cleared locally, but pointIndex will continue\r\n     *\r\n     * @type {number}\r\n     */\r\n    pointIndex = 0;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    userId = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    surveyId = '';\r\n\r\n    /**\r\n     * route tracking should be maintained separately on each device\r\n     * (e.g. if multiple people linked to a single live survey)\r\n     *\r\n     * @type {string}\r\n     */\r\n    deviceId = '';\r\n\r\n    // /**\r\n    //  * set if the image has been posted to the server\r\n    //  * (a local copy might still exist, which may have been reduced to thumbnail resolution)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedRemotely = false;\r\n\r\n    // /**\r\n    //  * set if the image has been added to a temporary store (e.g. indexedDb)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedLocally = false;\r\n\r\n    SAVE_ENDPOINT = '/savetrack.php';\r\n\r\n    TYPE = 'track';\r\n\r\n    /**\r\n     * @type {App}\r\n     */\r\n    static _app;\r\n\r\n    /**\r\n     * Tracking is active if GPS watching is turned on,\r\n     * the current survey is from the same day and the device id matches\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static trackingIsActive = false;\r\n\r\n    /**\r\n     *\r\n     * @type {null|string}\r\n     * @private\r\n     */\r\n    static _currentlyTrackedSurveyId = null;\r\n\r\n    /**\r\n     *\r\n     * @type {null|string}\r\n     * @private\r\n     */\r\n    static _currentlyTrackedDeviceId = null;\r\n\r\n    /**\r\n     * keyed by survey id and then by device id\r\n     *\r\n     * @type {Map<string, Map<string,Track>>}\r\n     * @private\r\n     */\r\n    static _tracks = new Map();\r\n\r\n    /**\r\n     * Unix timestamp of most recent co-ordinate ping, in ms\r\n     * @type {number}\r\n     */\r\n    static lastPingStamp = 0;\r\n\r\n    /**\r\n     * Minimum interval between position updates in milliseconds\r\n     * @type {number}\r\n     */\r\n    static msInterval = 30 * 1000;\r\n\r\n    /**\r\n     *\r\n     * @type {EventHarness~Handle|null}\r\n     */\r\n    _surveyChangeListenerHandle = null;\r\n\r\n    static reset() {\r\n        Track._tracks = new Map();\r\n        Track.trackingIsActive = false;\r\n        Track._currentlyTrackedSurveyId = null;\r\n        Track.lastPingStamp = 0;\r\n    }\r\n\r\n    /**\r\n     * Need to listen for change of current survey\r\n     *\r\n     * @param {App} app\r\n     */\r\n    static registerApp(app) {\r\n        Track._app = app;\r\n\r\n        if (DeviceType.getDeviceType() !== DeviceType.DEVICE_TYPE_IMMOBILE) {\r\n            app.addListener(App.EVENT_CURRENT_SURVEY_CHANGED, () => {\r\n                const survey = Track._app.currentSurvey;\r\n\r\n                if (Track._currentlyTrackedSurveyId !== survey.id) {\r\n                    /**\r\n                     *\r\n                     * @type {null|Survey}\r\n                     */\r\n                    let previouslyTrackedSurvey = null;\r\n\r\n                    if (Track._currentlyTrackedSurveyId) {\r\n                        const oldTrack =\r\n                            Track._tracks.get(Track._currentlyTrackedSurveyId)\r\n                                ?.get(Track._currentlyTrackedDeviceId);\r\n\r\n                        previouslyTrackedSurvey = this._app.surveys.get(Track._currentlyTrackedSurveyId);\r\n\r\n                        if (oldTrack) {\r\n                            if (oldTrack._surveyChangeListenerHandle) {\r\n                                oldTrack.removeSurveyChangeListener();\r\n                            }\r\n\r\n                            oldTrack.endCurrentSeries(TRACK_END_REASON_SURVEY_CHANGED);\r\n\r\n                            oldTrack.save().then(() => {\r\n                                console.log(`Tracking for survey ${oldTrack.surveyId} saved following survey change.`);\r\n                            });\r\n                        } else {\r\n                            console.error(`Failed to retrieve old track for survey ${Track._currentlyTrackedSurveyId} in survey changed event handler.`);\r\n                        }\r\n\r\n                        Track._currentlyTrackedSurveyId = null;\r\n                        Track._currentlyTrackedDeviceId = null;\r\n                    }\r\n\r\n                    // Tracking should only resume automatically if the survey change was an automatic switch\r\n                    // to a new square.\r\n\r\n                    // otherwise, there is a risk that a survey switch will lead to spurious new points\r\n                    if (!survey.attributes?.casual && survey.isToday() && survey.baseSurveyId === previouslyTrackedSurvey?.baseSurveyId) {\r\n                        // Resume existing tracking, or start a new track.\r\n                        Track._trackSurvey(survey);\r\n                        Track.trackingIsActive = true;\r\n                    } else {\r\n                        Track._app.fireEvent(App.EVENT_CANCEL_WATCHED_GPS_USER_REQUEST);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        Track._app.addListener(App.EVENT_WATCH_GPS_USER_REQUEST, () => {\r\n            const survey = this._app.currentSurvey;\r\n\r\n            if (survey) {\r\n                if (!survey.attributes?.casual && survey.isToday()) {\r\n                    // Resume existing tracking, or start a new track.\r\n                    Track._trackSurvey(survey);\r\n                    Track.trackingIsActive = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        Track._app.addListener(App.EVENT_CANCEL_WATCHED_GPS_USER_REQUEST, () => {\r\n\r\n            if (Track.trackingIsActive) {\r\n                const track = Track._tracks.get(Track._currentlyTrackedSurveyId)?.get(Track._currentlyTrackedDeviceId);\r\n\r\n                if (track) {\r\n                    track.endCurrentSeries(TRACK_END_REASON_WATCHING_ENDED);\r\n\r\n                    track.save().then(() => {\r\n                        console.log(`Tracking for survey ${track.surveyId} saved following tracking change.`);\r\n                    });\r\n                }\r\n\r\n                Track._currentlyTrackedSurveyId = null;\r\n                Track._currentlyTrackedDeviceId = null;\r\n                Track.trackingIsActive = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resume existing tracking, or start a new track.\r\n     *\r\n     * @param survey\r\n     * @private\r\n     */\r\n    static _trackSurvey(survey) {\r\n        let surveyTracks = Track._tracks.get(survey.id);\r\n        let track;\r\n\r\n        if (!surveyTracks) {\r\n            surveyTracks = new Map();\r\n            Track._tracks.set(survey.id, surveyTracks);\r\n        }\r\n\r\n        const deviceId = Track._app.deviceId;\r\n\r\n        if (surveyTracks.has(deviceId)) {\r\n            track = surveyTracks.get(deviceId);\r\n        } else {\r\n            track = survey.initialiseNewTracker(Track._app);\r\n            surveyTracks.set(deviceId, track);\r\n        }\r\n\r\n        track.registerSurvey(survey);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GeolocationPosition} position\r\n     * @param {GridCoords} gridCoords\r\n     */\r\n    static ping(position, gridCoords) {\r\n        const track = Track._tracks.get(Track._currentlyTrackedSurveyId)?.get(Track._currentlyTrackedDeviceId);\r\n\r\n        track?.addPoint(position, gridCoords);\r\n        Track.lastPingStamp = position.timestamp;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GeolocationPosition} position\r\n     * @param {GridCoords} gridCoords\r\n     */\r\n    addPoint(position, gridCoords) {\r\n        let series = this.points[this.points.length - 1];\r\n\r\n        if (!series || series?.[1] !== TRACK_END_REASON_SURVEY_OPEN) {\r\n            series = this.startPointSeries();\r\n        }\r\n\r\n        series[0][series[0].length] = [\r\n            position.coords.longitude,\r\n            position.coords.latitude,\r\n            position.timestamp\r\n        ];\r\n\r\n        this.touch();\r\n    }\r\n\r\n    /**\r\n     * Appends a new point series and advances this.pointIndex\r\n     * Does not close previous series and does not mark series as unsaved (which happens only\r\n     * once co-ordinate data starts to be added)\r\n     *\r\n     * @returns {PointSeries}\r\n     */\r\n    startPointSeries() {\r\n        const pointSeries = [\r\n            [], // empty array of PointTriplets\r\n            TRACK_END_REASON_SURVEY_OPEN\r\n        ];\r\n\r\n        this.points[this.points.length] = pointSeries;\r\n\r\n        this.pointIndex++;\r\n\r\n        return pointSeries;\r\n    }\r\n\r\n    /**\r\n     * Called only if tracking is currently enabled\r\n     *\r\n     * @param {number} reason\r\n     */\r\n    endCurrentSeries(reason) {\r\n        if (this.points.length) {\r\n            const lastEntry = this.points[this.points.length - 1];\r\n\r\n            if (lastEntry[0].length) {\r\n                // co-ordinates have been added\r\n\r\n                lastEntry[1] = reason;\r\n            } else {\r\n                // this is ann empty series, so just delete it\r\n\r\n                delete this.points[this.points.length - 1];\r\n                this.pointIndex--;\r\n            }\r\n        } else {\r\n            //throw new Error(\"Track.endCurrentSeries called when no series in progress.\");\r\n            console.error(\"Track.endCurrentSeries called when no series in progress.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /savetrack.php\r\n     *\r\n     * This should be intercepted by a service worker, which could write the object to indexeddb\r\n     * A successful save (local or to server) will result in a json response containing the object\r\n     * and also the state of persistence. After a save to the server the points list may be cleared,\r\n     * but pointIndex will be maintained so that tracking can resume.\r\n     *\r\n     * If saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the object directly to indexeddb\r\n     *\r\n     * Must test indexeddb for this eventuality after the save has returned.\r\n     *\r\n     * @param {boolean} [forceSave]\r\n     * @returns {Promise}\r\n     */\r\n    save(forceSave = false) {\r\n        if (this.unsaved() || forceSave) {\r\n            const formData = new FormData;\r\n\r\n            if (!this.surveyId) {\r\n                throw new Error(`Survey id must be set before saving an occurrence.`);\r\n            }\r\n\r\n            if (!this.deviceId) {\r\n                throw new Error(`Device id must be set before saving an occurrence.`);\r\n            }\r\n\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', this.surveyId);\r\n            formData.append('deviceId', this.deviceId);\r\n            formData.append('id', `${this.surveyId}.${this.deviceId}`);\r\n            formData.append('projectId', this.projectId.toString());\r\n            formData.append('pointIndex', this.pointIndex.toString());\r\n            formData.append('points', JSON.stringify(this.points));\r\n            formData.append('attributes', JSON.stringify(this.attributes));\r\n            formData.append('created', this.createdStamp?.toString() || '');\r\n            formData.append('modified', this.modifiedStamp?.toString() || '');\r\n\r\n            if (this.userId) {\r\n                formData.append('userId', this.userId);\r\n            }\r\n\r\n            formData.append('appVersion', Model.bsbiAppVersion);\r\n\r\n            console.log('queueing Track post');\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.resolve();\r\n            //return Promise.reject(`Track for survey ${this.surveyId} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{\r\n     *      id : string,\r\n     *      saveState: string,\r\n     *      attributes: Object.<string, *>,\r\n     *      deleted: boolean|string,\r\n     *      created: number,\r\n     *      modified: number,\r\n     *      projectId: number,\r\n     *      surveyId: string,\r\n     *      deviceId: string,\r\n     *      pointIndex: string,\r\n     *      points: string,\r\n     *      }} descriptor\r\n     * @param {string} descriptor.points JSON-serialized Array<PointSeries>\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this.surveyId = descriptor.surveyId;\r\n        this.deviceId = descriptor.deviceId;\r\n        this.pointIndex = parseInt(descriptor.pointIndex, 10);\r\n        this.points = JSON.parse(descriptor.points);\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Listen for survey changes (e.g. to date) that might abort tracking\r\n     *\r\n     * surveyId and deviceId will already have been set\r\n     * The track must already have been added to Track._tracks\r\n     *\r\n     * sets Track._currentlyTrackedSurveyId and Track._currentlyTrackedDeviceId\r\n     *\r\n     * @param {Survey} survey\r\n     *\r\n     */\r\n    registerSurvey(survey) {\r\n        Track._currentlyTrackedSurveyId = this.surveyId;\r\n        Track._currentlyTrackedDeviceId = Track._app.deviceId;\r\n\r\n        if (survey.attributes.casual) {\r\n            throw new Error('Attempt to register tracking for casual survey.');\r\n        }\r\n\r\n        if (!this._surveyChangeListenerHandle) {\r\n            this._surveyChangeListenerHandle = survey.addListener(Survey.EVENT_MODIFIED, () => {\r\n                // need to check for change to date\r\n\r\n                if (Track.trackingIsActive && survey.id === Track._currentlyTrackedSurveyId) {\r\n                    if (!survey.isToday()) {\r\n                        this.endCurrentSeries(TRACK_END_REASON_SURVEY_DATE);\r\n\r\n                        this.save().then(() => {\r\n                            console.log(`Tracking for survey ${this.surveyId} saved following survey date change.`);\r\n                        });\r\n\r\n                        Track._currentlyTrackedSurveyId = null;\r\n                        Track._currentlyTrackedDeviceId = null;\r\n                        Track.trackingIsActive = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (!this._surveyOccurrencesChangeListenerHandle) {\r\n            this._surveyOccurrencesChangeListenerHandle = survey.addListener(Survey.EVENT_OCCURRENCES_CHANGED, () => {\r\n                // if occurrences have changed, then worth ensuring that tracking is up-to-date\r\n\r\n                this.isPristine = false; // probably not required, but safety fallback to ensure survey is saved\r\n\r\n                if (Track.trackingIsActive && survey.id === Track._currentlyTrackedSurveyId && !this.isPristine && this.unsaved()) {\r\n                    this.save().then(() => {\r\n                        console.log(`Tracking for survey ${this.surveyId} saved following occurrence change.`);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    removeSurveyChangeListener() {\r\n        const survey = Track._app.surveys.get(this.surveyId);\r\n\r\n        survey?.removeListener(Survey.EVENT_MODIFIED, this._surveyChangeListenerHandle);\r\n        this._surveyChangeListenerHandle = null;\r\n    }\r\n}\n\n// a Survey captures the currentSurvey meta-data\r\n// i.e. it captures site details (name, location); user details (name, email)\r\n//\r\n// if a user were to submit multiple surveys then they would end up in the contact database multiple times\r\n// this is probably unavoidable. Not worth the effort and risk of automatic de-duplication. Email preferences would be\r\n// shared, keyed by email.\r\n\r\n\r\nclass Survey extends Model {\r\n\r\n    /**\r\n     * fired from Survey when the object's contents have been modified\r\n     *\r\n     * parameter is {surveyId : string}\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_MODIFIED = 'modified';\r\n\r\n    /**\r\n     * fired on Survey when one of its occurrences has been modified, added, deleted or reloaded\r\n     *\r\n     * no parameters\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_OCCURRENCES_CHANGED = 'occurrenceschanged';\r\n\r\n    /**\r\n     * fired on Survey when one of its occurrences has been added, deleted or reloaded\r\n     *\r\n     * no parameters\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_LIST_LENGTH_CHANGED = 'listlengthchanged';\r\n\r\n    /**\r\n     * parameter is {currentHectadSubunit : string}\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_TETRAD_SUBUNIT_CHANGED = 'tetradsubunitchanged';\r\n\r\n    SAVE_ENDPOINT = '/savesurvey.php';\r\n\r\n    TYPE = 'survey';\r\n\r\n    /**\r\n     *\r\n     * @type {{\r\n     *     [sampleUnit] : {selection : Array<string>, [precision] : number}\r\n     *     [georef] : {\r\n     *          rawString: string,\r\n     *          precision: number|null,\r\n     *          source: string|null,\r\n     *          gridRef: string,\r\n     *          latLng: {lat : number, lng : number}|null,\r\n     *          [defaultSurveyGridRef]: string|null,\r\n     *          [defaultSurveyPrecision]: number|null\r\n     *          },\r\n     *     [date] : string|null,\r\n     *     [place] : string|null,\r\n     *     [surveyName] : string|null,\r\n     *     [casual] : \"1\"|null,\r\n     *     [defaultCasual] : \"1\"|null,\r\n     *     [vc] : {selection : Array<string>, inferred: (boolean|null)}|null\r\n     * }}\r\n     */\r\n    attributes = {\r\n\r\n    };\r\n\r\n    /**\r\n     * if set then provide default values (e.g. GPS look-up of current geo-reference)\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isNew = false;\r\n\r\n    /**\r\n     * kludge to flag once the App singleton has set up a listener for changes on the survey\r\n     * @type {boolean}\r\n     */\r\n    hasAppModifiedListener = false;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    userId = '';\r\n\r\n    /**\r\n     *\r\n     * @type {Track|null}\r\n     * @private\r\n     */\r\n    _track = null;\r\n\r\n    /**\r\n     * Used to tie together linked surveys\r\n     * (e.g. deliberately duplicated, or generated automatically by movement to a new grid-square)\r\n     *\r\n     * Tracking of location can continue seamlessly across linked surveys.\r\n     *\r\n     * @type {string}\r\n     */\r\n     _baseSurveyId = '';\r\n\r\n    /**\r\n     *\r\n     * @returns {({rawString: string, precision: number|null, source: string|null, gridRef: string, latLng: ({lat: number, lng: number}|null)}|null)}\r\n     */\r\n    get geoReference() {\r\n        return this.attributes.georef || {\r\n            gridRef: '',\r\n            rawString: '', // what was provided by the user to generate this grid-ref (might be a postcode or placename)\r\n            source: 'unknown', //TextGeorefField.GEOREF_SOURCE_UNKNOWN,\r\n            latLng: null,\r\n            precision: null\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    get baseSurveyId() {\r\n        if (!this._baseSurveyId || this._baseSurveyId === 'undefined') {\r\n            this._baseSurveyId = this._id;\r\n        }\r\n\r\n        return this._baseSurveyId;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     */\r\n    set baseSurveyId(id) {\r\n        this._baseSurveyId = id;\r\n    }\r\n\r\n    /**\r\n     * string\r\n     */\r\n    get id() {\r\n        if (!this._id) {\r\n            this._id = uuid();\r\n\r\n            if (!this._baseSurveyId) {\r\n                this._baseSurveyId = this._id;\r\n            }\r\n        } else if (this._id === 'undefined') {\r\n            console.error(\"id is literal 'undefined', am forcing new id\");\r\n            this._id = uuid();\r\n\r\n            if (!this._baseSurveyId) {\r\n                this._baseSurveyId = this._id;\r\n            }\r\n        }\r\n\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * Set for tetrad structured surveys, where user may be working within a monad subdivision\r\n     *\r\n     * @type {string}\r\n     */\r\n    currentTetradSubunit = '';\r\n\r\n    /**\r\n     * Get a summarised geo-ref from the survey geo-reference, based on the survey unit type and precision\r\n     * If the user has explicitly specified a centroid-based survey then the result will instead be a centroid\r\n     *\r\n     * For structured tetrad surveys squareReference will return the currently selected monad within the tetrad (or tetrad if 2km scale selected)\r\n     * For monad or 100m square surveys will return grid-ref at that resolution\r\n     *\r\n     * @returns {({rawString: string, precision: number|null, source: string|null, gridRef: string, latLng: ({lat: number, lng: number}|null)}|null)}\r\n     */\r\n    get summaryReference() {\r\n        if (this.attributes.sampleUnit?.selection?.[0]) {\r\n            let n = parseInt(this.attributes.sampleUnit.selection[0], 10);\r\n\r\n            if (n > 0) {\r\n                // have user-specified square precision value\r\n\r\n                if (n === 2000 && this.currentTetradSubunit) {\r\n                    // special-case treatment of tetrad surveys using a monad subdivision\r\n\r\n                    return {\r\n                        gridRef: this.currentTetradSubunit,\r\n                        rawString: this.currentTetradSubunit,\r\n                        source: 'unknown',\r\n                        latLng: null,\r\n                        precision: /[A-Z]$/.test(this.currentTetradSubunit) ? 2000 : 1000\r\n                    }\r\n                }\r\n\r\n                const ref = this.geoReference;\r\n                const gridRef = GridRef.fromString(ref.gridRef);\r\n\r\n                if (gridRef && gridRef.length <= n) {\r\n                    const newRef = gridRef.gridCoords.to_gridref(n);\r\n\r\n                    if (n === 2000) {\r\n                        this.currentTetradSubunit = newRef;\r\n                    } else {\r\n                        this.currentTetradSubunit = '';\r\n                    }\r\n\r\n                    return {\r\n                        gridRef: newRef,\r\n                        rawString: newRef,\r\n                        source: 'unknown',\r\n                        latLng: null,\r\n                        precision: n\r\n                    }\r\n                } else {\r\n                    return {\r\n                        gridRef: '',\r\n                        rawString: '',\r\n                        source: 'unknown',\r\n                        latLng: null,\r\n                        precision: null\r\n                    }\r\n                }\r\n            } else {\r\n                switch (this.attributes.sampleUnit.selection[0]) {\r\n                    case 'centroid':\r\n                        const georef = this.geoReference; // avoid calling getter repeatedly\r\n\r\n                        return {\r\n                            gridRef: georef.gridRef,\r\n                            rawString: '',\r\n                            source: 'unknown',\r\n                            latLng: georef.latLng,\r\n                            precision: this.attributes.sampleUnit.precision || 1000\r\n                        };\r\n\r\n                    case 'other':\r\n                        return this._infer_square_ref_from_survey_ref();\r\n\r\n                    default:\r\n                        throw new Error(`Unrecognized sample unit value '${this.attributes.sampleUnit.selection[0]}'`);\r\n                }\r\n            }\r\n        } else {\r\n            return this._infer_square_ref_from_survey_ref();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {{rawString: string, precision: null, source: string, gridRef: string, latLng: null}|{rawString, precision: null, source: string, gridRef, latLng: null}}\r\n     * @private\r\n     */\r\n    _infer_square_ref_from_survey_ref() {\r\n        if (this.attributes.georef?.gridRef && this.attributes.georef.precision <= 2000) {\r\n            let newRef;\r\n\r\n            if (this.attributes.georef.precision === 2000 || this.attributes.georef.precision === 1000) {\r\n                newRef = this.attributes.georef.gridRef;\r\n            } else {\r\n                // this is really inefficient\r\n                const context = this.getGeoContext();\r\n                newRef = context.monad || context.tetrad;\r\n            }\r\n\r\n            return {\r\n                gridRef: newRef,\r\n                rawString: newRef,\r\n                source: 'unknown',\r\n                latLng: null,\r\n                precision: this.attributes.georef.precision\r\n            }\r\n        } else {\r\n            return {\r\n                gridRef: '',\r\n                rawString: '', // what was provided by the user to generate this grid-ref (might be a postcode or placename)\r\n                source: 'unknown', //TextGeorefField.GEOREF_SOURCE_UNKNOWN,\r\n                latLng: null,\r\n                precision: null\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    get date() {\r\n        return this.attributes.date || '';\r\n    }\r\n\r\n    /**\r\n     * returns survey date string, with special formatting for 'today' and 'yesterday'\r\n     *\r\n     * @returns {string}\r\n     */\r\n    get prettyDate() {\r\n        const date = this.attributes.date || '';\r\n        const today = new Date;\r\n\r\n        if (date === today.toISOString().slice(0,10)) {\r\n            return 'today';\r\n        } else if (date === (new Date(today.valueOf() - (3600*24*1000))).toISOString().slice(0,10)) {\r\n            return 'yesterday';\r\n        } else {\r\n            return date;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean}\r\n     */\r\n    isToday() {\r\n        return this.date === (new Date).toISOString().slice(0,10);\r\n    }\r\n\r\n    get place() {\r\n        return this.attributes.place || '';\r\n    }\r\n\r\n    /**\r\n     * called after the form has changed, before the values have been read back in to the occurrence\r\n     * read new values\r\n     * validate\r\n     * then fire its own change event (Survey.EVENT_MODIFIED)\r\n     * @param {{form: SurveyForm}} params\r\n     */\r\n    formChangedHandler(params) {\r\n        console.log('Survey change handler invoked.');\r\n\r\n        params.form.updateModelFromContent().then(() => {\r\n\r\n            console.log('Survey calling conditional validation.');\r\n\r\n            // refresh the form's validation state\r\n            params.form.conditionallyValidateForm();\r\n\r\n            this.touch();\r\n            this.fireEvent(Survey.EVENT_MODIFIED, {surveyId: this.id});\r\n        })\r\n        .catch((error) => {\r\n            // if updateModelFromContent() fails, due to user rejection of dialogue box then intentionally don't want survey to save\r\n            console.log({\"In survey form handler promise rejected (probably normal cancellation of dialogue box)\" : error});\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Used for special-case setting of a custom attribute\r\n     * (i.e. not usually one linked to a form)\r\n     * e.g. used for updating the NYPH null-list flag\r\n     *\r\n     * @param attributeName\r\n     * @param value\r\n     */\r\n    setAttribute(attributeName, value) {\r\n        if (this.attributes[attributeName] !== value) {\r\n            this.attributes[attributeName] = value;\r\n\r\n            this.touch();\r\n            this.fireEvent(Survey.EVENT_MODIFIED, {surveyId : this.id});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * returns interpreted grid-ref / vc summary, used to look-up meta-data for the taxon list\r\n     *\r\n     * @return {{\r\n     *     hectad : string,\r\n     *     tetrad : string,\r\n     *     monad : string,\r\n     *     country : string,\r\n     *     vc : number[],\r\n     *     interleavedGridRef : string,\r\n     *     [surveyGridUnit] : number,\r\n     *     [hectare] : string,\r\n     * }}\r\n     */\r\n    getGeoContext() {\r\n        const geoRef = this.geoReference;\r\n\r\n        const result = {};\r\n\r\n        if (this.attributes.vc?.selection) {\r\n            result.vc = [...this.attributes.vc.selection]; // clone rather than reference the VC selection\r\n        } else {\r\n            result.vc = [];\r\n        }\r\n\r\n        const surveyGridUnit = parseInt(this.attributes.sampleUnit?.selection?.[0], 10) || null;\r\n\r\n        if (surveyGridUnit) {\r\n            result.surveyGridUnit = surveyGridUnit;\r\n        }\r\n\r\n        if (geoRef?.gridRef) {\r\n            const gridRef = GridRef.fromString(geoRef.gridRef);\r\n\r\n            if (gridRef) {\r\n                if (gridRef.length <= 100 && surveyGridUnit === 100) {\r\n                    result.hectare = gridRef.gridCoords.to_gridref(100);\r\n                }\r\n\r\n                if (gridRef.length <= 1000) {\r\n                    result.monad = gridRef.gridCoords.to_gridref(1000);\r\n                }\r\n\r\n                if (gridRef.length <= 2000) {\r\n                    result.tetrad = gridRef.gridCoords.to_gridref(2000);\r\n                }\r\n\r\n                result.country = gridRef.country;\r\n            }\r\n\r\n            result.hectad = gridRef.gridCoords.to_gridref(10000);\r\n\r\n            result.interleavedGridRef = GridRef.interleave(geoRef.gridRef);\r\n        }\r\n\r\n        return {...{hectad : '', tetrad : '', monad : '', hectare : '', country : '', vc : [], interleavedGridRef : ''}, ...result};\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /savesurvey.php\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexeddb\r\n     * a successful save will result in a json response containing the uri from which the object may be retrieved\r\n     * and also the state of persistence (whether or not the object was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the object directly to indexeddb\r\n     *\r\n     * must test indexeddb for this eventuality after the save has returned\r\n     *\r\n     * @param {boolean} [forceSave]\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    save(forceSave = false) {\r\n        if (forceSave || this.unsaved()) {\r\n            const formData = new FormData;\r\n\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', this.id);\r\n            formData.append('id', this.id); // this is incorrect duplication\r\n            formData.append('projectId', this.projectId.toString());\r\n            formData.append('attributes', JSON.stringify(this.attributes));\r\n            formData.append('deleted', this.deleted.toString());\r\n            formData.append('created', this.createdStamp?.toString() || '');\r\n            formData.append('baseSurveyId', this.baseSurveyId || this.id);\r\n\r\n            if (this.userId) {\r\n                formData.append('userId', this.userId);\r\n            }\r\n\r\n            formData.append('appVersion', Model.bsbiAppVersion);\r\n\r\n            console.log('queueing survey post');\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.reject(`Survey ${this.id} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {{summarySquarePrecision : number, summarizeTetrad : boolean}} options\r\n     * @returns {string} an html-safe string based on the locality and creation date\r\n     */\r\n    generateSurveyName(options = {\r\n        summarySquarePrecision : 1000,\r\n        summarizeTetrad : false,\r\n    }) {\r\n\r\n        if (this.attributes.casual) {\r\n            // special-case treatment of surveys with 'casual' attribute (which won't have a locality or date as part of the survey)\r\n\r\n            return this.attributes.surveyName ?\r\n                escapeHTML(this.attributes.surveyName)\r\n                :\r\n                `Data-set created on ${this._createdDateString()}`;\r\n        } else {\r\n            let place;\r\n\r\n            if (this.attributes.place) {\r\n                let summaryGridRef = this._summarySquareString(options.summarySquarePrecision);\r\n\r\n                place = `${this.attributes.place}${summaryGridRef ? ` ${summaryGridRef}` : ''}`;\r\n            } else if (this.attributes.georef?.gridRef) {\r\n                place = this._summarySquareString(options.summarySquarePrecision);\r\n            } else {\r\n                place = '(unlocalized)';\r\n            }\r\n\r\n            return `${escapeHTML(place)} ${this.prettyDate || this._createdDateString()}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if survey has specified grid-unit then use that instead of the fallBackPrecision option\r\n     *\r\n     * @param {number|null} fallBackPrecision\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _summarySquareString(fallBackPrecision) {\r\n        if (this.attributes.georef?.gridRef) {\r\n            let sampleUnit;\r\n\r\n            // '<' replacement used simplistically to sanitize against script injection\r\n            const rawGridRef = this.attributes.georef.gridRef.replace(/[<&\\s]/g, '');\r\n\r\n            if (this.attributes.sampleUnit) {\r\n                sampleUnit = parseInt(this.attributes.sampleUnit?.selection[0], 10) || null;\r\n            }\r\n\r\n            const precision = sampleUnit || fallBackPrecision;\r\n\r\n            if (precision) {\r\n                const gridRef = GridRef.fromString(rawGridRef);\r\n\r\n                return gridRef?.gridCoords?.to_gridref(gridRef.length <= precision ? precision : gridRef.length) || this.attributes.georef.gridRef;\r\n            } else {\r\n                return rawGridRef;\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _createdDateString() {\r\n        const createdDate = new Date(this.createdStamp * 1000);\r\n        let dateString;\r\n\r\n        try {\r\n            // 'default' locale fails on Edge\r\n            dateString = createdDate.toLocaleString('default', {\r\n                year: 'numeric',\r\n                month: 'long',\r\n                day: 'numeric'\r\n            });\r\n        } catch (e) {\r\n            dateString = createdDate.toLocaleString('en-GB', {year: 'numeric', month: 'long', day: 'numeric'});\r\n        }\r\n\r\n        return dateString;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {Set<string>}\r\n     *\r\n     */\r\n    extantOccurrenceKeys = new Set();\r\n\r\n    /**\r\n     * @todo need to exclude deleted records\r\n     * @returns {number}\r\n     *\r\n     */\r\n    countRecords() {\r\n        return this.extantOccurrenceKeys.size;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{\r\n     *      id : string,\r\n     *      saveState: string,\r\n     *      [userId]: string,\r\n     *      attributes: Object.<string, *>,\r\n     *      deleted: boolean|string,\r\n     *      created: (number|string),\r\n     *      modified: (number|string),\r\n     *      projectId: (number|string),\r\n     *      [baseSurveyId]: (string),\r\n     *      }} descriptor\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this._baseSurveyId = descriptor.baseSurveyId;\r\n    }\r\n\r\n    /**\r\n     * @returns {Survey}\r\n     */\r\n    duplicate(newAttributes = {}, properties = {}) {\r\n        const newSurvey = new Survey();\r\n\r\n        // @todo need to be certain that are not cloning image attribute\r\n        newSurvey.attributes = Object.assign(structuredClone(this.attributes), newAttributes);\r\n        newSurvey.userId = properties.hasOwnProperty('userId') ? properties.userId : this.userId;\r\n        newSurvey.isPristine = true;\r\n        newSurvey.isNew = false; // don't want GPS override of geo-ref\r\n        newSurvey._savedLocally = false;\r\n        newSurvey._savedRemotely = false;\r\n        newSurvey.deleted = false;\r\n        newSurvey.projectId = this.projectId;\r\n        newSurvey.baseSurveyId = this.baseSurveyId;\r\n        newSurvey.id; // trigger id generation\r\n\r\n        return newSurvey;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {App} app\r\n     * @returns {Track}\r\n     */\r\n    initialiseNewTracker(app) {\r\n        const track = new Track();\r\n        track.surveyId = this.id;\r\n        track.deviceId = app.deviceId;\r\n        track.projectId = app.projectId;\r\n        track.isPristine = true;\r\n\r\n        this.track = track;\r\n        track.registerSurvey(this);\r\n\r\n        return track;\r\n    }\r\n\r\n    /**\r\n     * returns the currently active track (other tracks may exist if the survey has shifted between devices etc.)\r\n     *\r\n     * @returns {Track|null}\r\n     */\r\n    get track() {\r\n        return this._track;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Track|null} track\r\n     */\r\n    set track(track) {\r\n        this._track = track;\r\n    }\r\n}\n\n/**\r\n *\r\n */\r\nclass InternalAppError extends Error {\r\n\r\n}\n\nclass TaxonError extends Error {\r\n\r\n}\n\nconst SORT_ORDER_GENUS = 28;\r\nconst SORT_ORDER_SPECIES = 56;\r\nconst SORT_ORDER_CULTIVAR = 120;\r\n\r\nconst AGG_QUALIFIER = 'agg.';\r\nconst SL_QUALIFIER = 's.l.';\r\n\r\nclass Taxon {\r\n    /**\r\n     * @typedef RawTaxon\r\n     * @type {array}\r\n     * @property {string} 0 - nameString\r\n     * @property {(string|number)} 1 - canonical\r\n     * @property {string} 2 hybridCanonical, raw entry is 0/undefined if canonical == hybridCanonical\r\n     * @property {(string|number)} 3 acceptedEntityId or 0/undefined if name is accepted\r\n     * @property {string} 4 qualifier\r\n     * @property {string} 5 authority\r\n     * @property {string} 6 vernacular\r\n     * @property {string} 7 vernacularRoot\r\n     * @property {number} 8 used\r\n     * @property {number} 9 sortOrder\r\n     * @property {Array.<string>} 10 parentIds id(s) of *immediate* parent(s)\r\n     * @property {number} [11] notForEntry (1 === not for entry)\r\n     * @property {string} [12] GB national status\r\n     * @property {string} [13] IE national status\r\n     * @property {string} [14] CI national status\r\n     * @property {string} [15] GB rare/scarce conservation status\r\n     * @property {string} [16] IE rare/scarce conservation status\r\n     * @property {number|null} [17] (optionally) NYPH percentile ranking or null\r\n     *\r\n     * // properties beyond this point are not part of the source file\r\n     * @property {{}} [18] Presence in grid-squares (top-level object is keyed by grid-ref)\r\n     * @property {{}} [19] Presence on rpr\r\n     * @property {{}} [20] Presence in county (top-level object is keyed by vc code string, including prefix)\r\n     */\r\n\r\n    static GR_PRESENCE_KEY = 18;\r\n    static RPR_KEY = 19;\r\n    static VC_PRESENCE_KEY = 20;\r\n\r\n    /**\r\n     *\r\n     * @type {Object.<string, RawTaxon>}\r\n     */\r\n    static rawTaxa;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    id;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    nameString = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    canonical = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    hybridCanonical = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    acceptedEntityId = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    qualifier = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    authority = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    vernacular = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    vernacularRoot = '';\r\n\r\n    /**\r\n     * if set then the vernacular name should not be allowed for data entry\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    badVernacular = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    used;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    sortOrder;\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<string>}\r\n     */\r\n    parentIds = [];\r\n\r\n    /**\r\n     *\r\n     * @type {{CI: null|string, GB: null|string, IE: null|string}}\r\n     */\r\n    nationalStatus = {\r\n        GB : null,\r\n        IE : null,\r\n        CI : null\r\n    }\r\n\r\n    /**\r\n     * if rated, then the string is 'scarce' or 'rare'\r\n     *\r\n     * @type {{GB: null|('rare'|'scarce'), IE: null|('rare'|'scarce')}}\r\n     */\r\n    rareScarceStatus = {\r\n        GB : null,\r\n        IE : null\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {{number, (string|true)}}\r\n     */\r\n    rprStatus = {}\r\n\r\n    /**\r\n     * keyed by grid-square string\r\n     * @type {Object<string, {current : number, previous : number, [year] : number, [status] : string}>|null}\r\n     */\r\n    occurrenceCoverage = null;\r\n\r\n    /**\r\n     * keyed by vc code string\r\n     * @type {Object<string, {current : number, previous : number, [year] : number}>|null}\r\n     */\r\n    vcPresence = null;\r\n\r\n    /**\r\n     *\r\n     * @type {number|null}\r\n     */\r\n    nyphRanking = null;\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static showVernacular = true;\r\n\r\n    /**\r\n     *\r\n     * @param {Object.<string, RawTaxon>} taxa\r\n     */\r\n    static setTaxa(taxa) {\r\n        Taxon.rawTaxa = taxa;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object.<string, RawTaxon>} taxa\r\n     * @param {string} sourceUrl\r\n     */\r\n    static initialiseTaxa(taxa, sourceUrl) {\r\n        Taxon.rawTaxa = taxa;\r\n\r\n        if ((taxa.stamp + (3600 * 24 * 7)) < (Date.now() / 1000)) {\r\n            console.log(`Taxon list may be stale (stamp is ${taxa.stamp}), prompting re-cache.`);\r\n            navigator?.serviceWorker?.ready.then((registration) => {\r\n                registration.active.postMessage(\r\n                    {\r\n                        action: 'recache',\r\n                        url: sourceUrl\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @returns {Taxon}\r\n     * @throws {TaxonError}\r\n     */\r\n    static fromId (id) {\r\n        if (!Taxon.rawTaxa) {\r\n            throw new TaxonError(`Taxon.fromId() called before taxon list has been initialized.`);\r\n        }\r\n\r\n        if (!Taxon.rawTaxa.hasOwnProperty(id)) {\r\n            //console.error(`Taxon id '${id}' not found.`);\r\n            throw new TaxonError(`Taxon id '${id}' not found.`);\r\n        }\r\n\r\n        const raw = Taxon.rawTaxa[id];\r\n\r\n        const taxon = new Taxon;\r\n\r\n        taxon.id = id;\r\n        taxon.nameString = raw[0];\r\n        taxon.canonical = raw[1] || raw[0]; // raw entry is blank if namesString == canonical\r\n        taxon.hybridCanonical = raw[2] || taxon.canonical; // raw entry is blank if canonical == hybridCanonical\r\n        taxon.acceptedEntityId = raw[3] || id;\r\n        taxon.qualifier = raw[4] || '';\r\n        taxon.authority = raw[5] || '';\r\n        taxon.vernacular = raw[6] || '';\r\n        taxon.vernacularRoot = raw[7] || '';\r\n        taxon.used = !!raw[8];\r\n        taxon.sortOrder = raw[9];\r\n        taxon.parentIds = raw[10];\r\n        taxon.badVernacular = !!raw[11];\r\n\r\n        taxon.nationalStatus = {\r\n            GB: raw[12] || null,\r\n            IE: raw[13] || null,\r\n            CI: raw[14] || null\r\n        };\r\n\r\n        taxon.rareScarceStatus = {\r\n            GB: raw[15] || null,\r\n            IE: raw[16] || null\r\n        };\r\n\r\n        taxon.rprStatus = raw[Taxon.RPR_KEY] || null;\r\n\r\n        taxon.occurrenceCoverage = raw[Taxon.GR_PRESENCE_KEY] || null;\r\n\r\n        taxon.vcPresence = raw[Taxon.VC_PRESENCE_KEY] || null;\r\n\r\n        return taxon;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} maxSortOrder lowest matching rank to accept\r\n     * @param {number} minSortOrder highest rank to allow (return null if fails)\r\n     * @param {boolean} excludeAggregates ignore aggregate parents\r\n     * @param {boolean} excludeCultivars if set and current taxon is a cultivar then return null\r\n     * @return {Taxon|null}\r\n     */\r\n    seekRankedAncestor(maxSortOrder, minSortOrder = SORT_ORDER_SPECIES, excludeAggregates = true, excludeCultivars = true) {\r\n        const parentStack = [this];\r\n        do {\r\n            let taxon = parentStack.pop();\r\n\r\n            if (taxon.sortOrder <= maxSortOrder && taxon.sortOrder >= minSortOrder) {\r\n                // potentially have an acceptable taxon already\r\n\r\n                if (!excludeAggregates || (taxon.qualifier !== AGG_QUALIFIER && taxon.qualifier !== SL_QUALIFIER)) {\r\n                    return taxon;\r\n                }\r\n            }\r\n\r\n            if (taxon.sortOrder < minSortOrder || (excludeCultivars && taxon.sortOrder === SORT_ORDER_CULTIVAR)) {\r\n                continue;\r\n            }\r\n\r\n            if (taxon.parentIds?.length) {\r\n                for (let parentId of taxon.parentIds) {\r\n                    try {\r\n                        parentStack[parentStack.length] = Taxon.fromId(parentId);\r\n                    } catch {\r\n\r\n                    }\r\n                }\r\n            }\r\n        } while (parentStack.length);\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {boolean} vernacularMatched\r\n     * @returns {string}\r\n     */\r\n    formattedHTML(vernacularMatched) {\r\n        let acceptedTaxon;\r\n        if (this.id !== this.acceptedEntityId) {\r\n            acceptedTaxon = Taxon.fromId(this.acceptedEntityId);\r\n        }\r\n\r\n        if (Taxon.showVernacular) {\r\n            if (vernacularMatched) {\r\n                return (acceptedTaxon) ?\r\n                    `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>` +\r\n                    ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n                    :\r\n                    `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n                    ;\r\n            } else {\r\n                return (acceptedTaxon) ?\r\n                    `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''\r\n                    } = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n                    :\r\n                    `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''}`\r\n                    ;\r\n            }\r\n        } else {\r\n            return (acceptedTaxon) ?\r\n                `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>` +\r\n                ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n                :\r\n                `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n                ;\r\n        }\r\n    }\r\n}\n\nclass Occurrence extends Model {\r\n\r\n    /**\r\n     *\r\n     * @type {Object.<string, *>}\r\n     */\r\n    attributes = {\r\n        // taxon: {\r\n        //     taxonId: '',\r\n        //     taxonName: '',\r\n        //     vernacularMatch: false\r\n        // }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    userId = '';\r\n\r\n    // /**\r\n    //  * set if the image has been posted to the server\r\n    //  * (a local copy might still exist, which may have been reduced to thumbnail resolution)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedRemotely = false;\r\n\r\n    // /**\r\n    //  * set if the image has been added to a temporary store (e.g. indexedDb)\r\n    //  *\r\n    //  * @type {boolean}\r\n    //  */\r\n    // _savedLocally = false;\r\n\r\n    SAVE_ENDPOINT = '/saveoccurrence.php';\r\n\r\n    TYPE = 'occurrence';\r\n\r\n    /**\r\n     * fired from Occurrence when the object's contents have been modified\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_MODIFIED = 'modified';\r\n\r\n    /**\r\n     * set if this is a new entry (before user has moved on to the next entry)\r\n     * influences whether form validation errors are displayed\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isNew = false;\r\n\r\n    /**\r\n     *\r\n     * @returns {(Taxon|null)} returns null for unmatched taxa specified by name\r\n     */\r\n    get taxon() {\r\n        return this.attributes.taxon?.taxonId ? Taxon.fromId(this.attributes.taxon.taxonId) : null;\r\n    };\r\n\r\n    // /**\r\n    //  *\r\n    //  * @param {OccurrenceForm} form\r\n    //  * @returns {OccurrenceForm}\r\n    //  */\r\n    // setForm(form) {\r\n    //     form.addListener(Form.CHANGE_EVENT, this.formChangedHandler.bind(this));\r\n    //\r\n    //     if (!this.isNew) {\r\n    //         form.liveValidation = true;\r\n    //     }\r\n    //     return form;\r\n    // }\r\n\r\n    /**\r\n     * called after the form has changed, before the values have been read back in to the occurrence\r\n     *\r\n     * @param {{form: Form}} params\r\n     */\r\n    formChangedHandler(params) {\r\n        console.log('Occurrence change handler invoked.');\r\n\r\n        // read new values\r\n        // then fire its own change event (Occurrence.EVENT_MODIFIED)\r\n        params.form.updateModelFromContent().then(() => {\r\n            // refresh the form's validation state\r\n            params.form.conditionallyValidateForm();\r\n\r\n           this.changeApplied();\r\n        });\r\n    }\r\n\r\n    changeApplied() {\r\n        this.touch();\r\n        this.fireEvent(Occurrence.EVENT_MODIFIED, {occurrenceId: this.id});\r\n    }\r\n\r\n    delete() {\r\n        if (!this.deleted) {\r\n            this.touch();\r\n            this.deleted = true;\r\n\r\n            this.fireEvent(Occurrence.EVENT_MODIFIED, {occurrenceId : this.id});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If not securely saved then makes a post to /saveoccurrence.php\r\n     *\r\n     * This should be intercepted by a service worker, which could write the object to indexeddb\r\n     * A successful save (local or to server) will result in a json response containing the object\r\n     * and also the state of persistence.\r\n     *\r\n     * If saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the object directly to indexeddb\r\n     *\r\n     * Must test indexeddb for this eventuality after the save has returned.\r\n     *\r\n     * @param {string} [surveyId] only set if want to override, otherwise '' (*currently ignored and should be deprecated*)\r\n     * @param {boolean} [forceSave]\r\n     * @returns {Promise}\r\n     */\r\n    save(surveyId = '', forceSave = false) {\r\n        if (this.unsaved() || forceSave) {\r\n            const formData = new FormData;\r\n\r\n            // @todo potentially setting surveyId here seems like a serious design fault!\r\n            // if (!surveyId && this.surveyId) {\r\n            //     surveyId = this.surveyId;\r\n            // }\r\n\r\n            if (!this.surveyId) {\r\n                throw new Error(`Survey id must be set before saving an occurrence. Failed for occ id '${this.id}'`);\r\n            }\r\n\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', this.surveyId);\r\n            formData.append('occurrenceId', this.id);\r\n            formData.append('id', this.id); // this is incorrect duplication\r\n            formData.append('projectId', this.projectId.toString());\r\n            formData.append('attributes', JSON.stringify(this.attributes));\r\n            formData.append('deleted', this.deleted.toString());\r\n            formData.append('created', this.createdStamp?.toString() || '');\r\n            formData.append('modified', this.modifiedStamp?.toString() || '');\r\n\r\n            if (this.userId) {\r\n                formData.append('userId', this.userId);\r\n            }\r\n\r\n            formData.append('appVersion', Model.bsbiAppVersion);\r\n\r\n            console.log('queueing occurrence post');\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.reject(`Occurrence ${this.id} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{id : string, saveState: string, attributes: Object.<string, *>, deleted: boolean|string, created: number, modified: number, projectId: number, surveyId: string}} descriptor\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this.surveyId = descriptor.surveyId;\r\n    }\r\n\r\n    /**\r\n     * returns interpreted grid-ref / vc summary, used to look-up meta-data for the taxon list\r\n     *\r\n     * @return {{\r\n     *     hectad : string,\r\n     *     tetrad : string,\r\n     *     monad : string,\r\n     *     country : string,\r\n     *     vc : int[],\r\n     *     interleavedGridRef : string,\r\n     * }}\r\n     */\r\n    getGeoContext() {\r\n        const geoRef = this.geoReference;\r\n\r\n        const result = {};\r\n\r\n        if (this.attributes.vc?.selection) {\r\n            result.vc = [...this.attributes.vc.selection]; // clone rather than reference the VC selection\r\n        } else {\r\n            result.vc = [];\r\n        }\r\n\r\n        if (geoRef?.gridRef) {\r\n            const gridRef = GridRef.fromString(geoRef.gridRef);\r\n\r\n            if (gridRef) {\r\n                if (gridRef.length <= 1000) {\r\n                    result.monad = gridRef.gridCoords.to_gridref(1000);\r\n                }\r\n\r\n                if (gridRef.length <= 2000) {\r\n                    result.tetrad = gridRef.gridCoords.to_gridref(2000);\r\n                }\r\n\r\n                result.country = gridRef.country;\r\n            }\r\n\r\n            result.hectad = gridRef.gridCoords.to_gridref(10000);\r\n\r\n            result.interleavedGridRef = GridRef.interleave(geoRef.gridRef);\r\n        }\r\n\r\n        return {...{hectad : '', tetrad : '', monad : '', country : '', vc : [], interleavedGridRef : ''}, ...result};\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {({rawString: string, precision: number|null, source: string|null, gridRef: string, latLng: ({lat: number, lng: number}|null), [defaultSurveyGridRef]: string, [defaultSurveyPrecision]: number}|null)}\r\n     */\r\n    get geoReference() {\r\n        return this.attributes.georef || {\r\n            gridRef: '',\r\n            rawString: '', // what was provided by the user to generate this grid-ref (might be a postcode or placename)\r\n            source: 'unknown', //TextGeorefField.GEOREF_SOURCE_UNKNOWN,\r\n            latLng: null,\r\n            precision: null\r\n        };\r\n    };\r\n}\n\nclass OccurrenceImage extends Model {\r\n\r\n    /**\r\n     * raw file object retrieved from a file upload image element\r\n     *\r\n     * @type {File}\r\n     */\r\n    file;\r\n\r\n    /**\r\n     *\r\n     * @type {Map.<string, OccurrenceImage>}\r\n     */\r\n    static imageCache = new Map;\r\n\r\n    TYPE = 'image';\r\n\r\n    /**\r\n     * Only relevant for occurrence-linked images\r\n     *\r\n     * @type {string}\r\n     */\r\n    occurrenceId = '';\r\n\r\n    surveyId = '';\r\n\r\n    //projectId = '';\r\n\r\n    context = 'occurrence';\r\n\r\n    /**\r\n     * fetches a URL of the image\r\n     * this might be a remote url (or one intercepted by a service worker)\r\n     * or a data url of the raw image, (not yet uploaded)\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getUrl () {\r\n        throw new Error('OccurrenceImage getUrl() not implemented.')\r\n    }\r\n\r\n    SAVE_ENDPOINT = '/saveimage.php';\r\n\r\n    /**\r\n     *\r\n     * @param {File} file\r\n     */\r\n    static fromFile(file) {\r\n        const image = new OccurrenceImage;\r\n        image.file = file;\r\n\r\n        return image;\r\n    }\r\n\r\n    /**\r\n     * if not securely saved then makes a post to /saveimage.php\r\n     *\r\n     * this may be intercepted by a service worker, which could write the image to indexeddb\r\n     * a successful save will result in a json response containing the uri from which the image may be retrieved\r\n     * and also the state of persistence (whether or not the image was intercepted by a service worker while offline)\r\n     *\r\n     * if saving fails then the expectation is that there is no service worker, in which case should attempt to write\r\n     * the image directly to indexeddb\r\n     *\r\n     * must test indexeddb for this eventuality after the save has returned\r\n     *\r\n     * @param {string} surveyId\r\n     * @param {string} occurrenceId\r\n     * @param {number|null} projectId\r\n     * @returns {Promise}\r\n     */\r\n    save(surveyId = '', occurrenceId = '', projectId = null) {\r\n        if (surveyId) {\r\n            this.surveyId = surveyId;\r\n        }\r\n\r\n        if (projectId) {\r\n            this.projectId = projectId;\r\n        }\r\n\r\n        if (occurrenceId) {\r\n            this.occurrenceId = occurrenceId;\r\n        }\r\n\r\n        if (this.unsaved()) {\r\n            const formData = new FormData;\r\n            formData.append('type', this.TYPE);\r\n            formData.append('surveyId', surveyId ? surveyId : (this.surveyId ? this.surveyId : '')); // avoid 'undefined'\r\n            formData.append('projectId', projectId ? projectId.toString() : '');\r\n            formData.append('imageId', this.id);\r\n            formData.append('id', this.id);\r\n            formData.append('image', this.file);\r\n            formData.append('deleted', this.deleted.toString());\r\n            formData.append('created', this.createdStamp?.toString() || '');\r\n            formData.append('modified', this.modifiedStamp?.toString() || '');\r\n\r\n            if (this.context === 'survey') {\r\n                formData.append('context', this.context);\r\n            } else {\r\n                formData.append('occurrenceId', occurrenceId ? occurrenceId : this.occurrenceId); // avoid 'undefined'\r\n            }\r\n\r\n            if (this.userId) {\r\n                formData.append('userId', this.userId);\r\n            }\r\n\r\n            formData.append('appVersion', Model.bsbiAppVersion);\r\n\r\n            console.log(`queueing image post, image id ${this.id}`);\r\n            return this.queuePost(formData);\r\n        } else {\r\n            return Promise.reject(`Image ${this.id} has already been saved.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * fired from Occurrence when the object's contents have been modified\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_MODIFIED = 'modified';\r\n\r\n    /**\r\n     *\r\n     * @param id\r\n     * @returns {OccurrenceImage}\r\n     */\r\n    static placeholder(id) {\r\n        let placeholderObject = new OccurrenceImage;\r\n        //placeholderObject._id = id;\r\n        placeholderObject.id = id; // should use setter, to enforce validation\r\n\r\n        OccurrenceImage.imageCache.set(id, placeholderObject);\r\n\r\n        return placeholderObject;\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {{\r\n     *      id : string,\r\n     *      saveState: string,\r\n     *      [userId]: string,\r\n     *      attributes: Object.<string, *>,\r\n     *      deleted: boolean|string,\r\n     *      created: (number|string),\r\n     *      modified: (number|string),\r\n     *      projectId: (number|string),\r\n     *      surveyId: string,\r\n     *      occurrenceId: string,\r\n     *      [image]: File\r\n     *      [context]: string\r\n     *      }} descriptor\r\n     * @private\r\n     */\r\n    _parseDescriptor(descriptor) {\r\n        super._parseDescriptor(descriptor);\r\n        this.surveyId = descriptor.surveyId;\r\n\r\n        if (descriptor.occurrenceId) {\r\n            this.occurrenceId = descriptor.occurrenceId;\r\n        }\r\n        this.file = descriptor.image;\r\n\r\n        if (descriptor.context) {\r\n            this.context = descriptor.context;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @param {(number|null)} width\r\n     * @param {(number|null)} height\r\n     * @param {{[className] : string}} [attributes]\r\n     * @return {string}\r\n     */\r\n    static imageLink(id, width, height, attributes) {\r\n        width = width || 0;\r\n        height = height || 0;\r\n\r\n        let attributesString = '';\r\n\r\n        if (attributes.className) {\r\n            attributesString += ` class=\"${attributes.className}\"`;\r\n        }\r\n\r\n        const renderingConstraint = (width > height) ?\r\n            `width=\"${width}\"`\r\n            :\r\n            `height=\"${height}\"`;\r\n\r\n        return `<picture><source srcset=\"/image.php?imageid=${id}&amp;height=128&amp;format=webp\" type=\"image/webp\"><img${attributesString} src=\"/image.php?imageid=${id}&amp;width=${width}&amp;height=${height}&amp;format=jpeg\" ${renderingConstraint} alt=\"photo\"></picture>`;\r\n    }\r\n}\n\nclass Logger {\r\n\r\n    /**\r\n     * @type {App}\r\n     */\r\n    static app;\r\n\r\n    /**\r\n     * reports a javascript error\r\n     *\r\n     * @param {string} message\r\n     * @param {string|null} [url]\r\n     * @param {string|number|null} [line]\r\n     * @param {number|null} [column]\r\n     * @param {Error|null} [errorObj]\r\n     */\r\n    static logError = function(message, url = '', line= '', column = null, errorObj = null) {\r\n\r\n        window.onerror = null;\r\n\r\n        console.error(message, url, line, errorObj);\r\n\r\n        if (console.trace) {\r\n            console.trace('Trace');\r\n        }\r\n\r\n        const doc = document.implementation.createDocument('', 'response', null); // create blank XML response document\r\n        const error = doc.createElement('error');\r\n\r\n        if (line !== null && line !== undefined) {\r\n            error.setAttribute('line', line);\r\n        }\r\n\r\n        if (errorObj && ('stack' in errorObj)) {\r\n            error.setAttribute('stack', errorObj.stack);\r\n        }\r\n\r\n        if (url !== null && url !== undefined && url !== '') {\r\n            error.setAttribute('url', url);\r\n        }\r\n\r\n        if (window.location.href) {\r\n            error.setAttribute('referrer', window.location.href);\r\n        }\r\n\r\n        if (window.location.search) {\r\n            error.setAttribute('urlquery', window.location.search);\r\n        }\r\n\r\n        if (window.location.hash) {\r\n            error.setAttribute('urlhash', window.location.hash);\r\n        }\r\n\r\n        if (Logger.app?.session?.userId) {\r\n            error.setAttribute('userid', Logger.app.session.userId);\r\n        }\r\n\r\n        // noinspection PlatformDetectionJS\r\n        error.setAttribute('browser', navigator.appName);\r\n        error.setAttribute('browserv', navigator.appVersion);\r\n        error.setAttribute('userAgent', navigator.userAgent);\r\n        error.setAttribute('versions', Model.bsbiAppVersion);\r\n\r\n        error.appendChild(doc.createTextNode(message));\r\n\r\n        doc.documentElement.appendChild(error);\r\n\r\n        fetch('/javascriptErrorLog.php', {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"include\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"text/xml\",\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer-when-downgrade\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: (new XMLSerializer()).serializeToString(doc),\r\n        });\r\n\r\n        window.onerror = Logger.logError; // turn on error handling again\r\n        return true; // suppress normal error reporting\r\n    };\r\n}\n\n// App.js\r\n// base class for single page application\r\n// allows binding of controllers and routes\r\n\r\nclass App extends EventHarness {\r\n    /**\r\n     * @type {PatchedNavigo}\r\n     */\r\n    _router;\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     */\r\n    _containerEl;\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<AppController>}\r\n     */\r\n    controllers = [];\r\n\r\n    /**\r\n     * tracks the handle of the current page controller\r\n     * updating this is the responsibility of the controller\r\n     *\r\n     * @type {number|boolean}\r\n     */\r\n    currentControllerHandle = false;\r\n\r\n    /**\r\n     *\r\n     * @type {Array.<{url : string}>}\r\n     */\r\n    routeHistory = [];\r\n\r\n    /**\r\n     * keyed by occurrence id (a UUID string)\r\n     *\r\n     * @type {Map.<string,Occurrence>}\r\n     */\r\n    occurrences= new Map();\r\n\r\n    /**\r\n     * keyed by survey id (a UUID string)\r\n     *\r\n     * @type {Map.<string,Survey>}\r\n     */\r\n    surveys= new Map();\r\n\r\n    /**\r\n     * @type {?Survey}\r\n     */\r\n    _currentSurvey = null;\r\n\r\n    /**\r\n     * @abstract\r\n     * @type {number}\r\n     */\r\n    projectId;\r\n\r\n    /**\r\n     * Event fired when user requests a new blank survey\r\n     * @type {string}\r\n     */\r\n    static EVENT_ADD_SURVEY_USER_REQUEST = 'useraddsurveyrequest';\r\n\r\n    /**\r\n     * Event fired when user requests a reset (local clearance) of all surveys\r\n     * @type {string}\r\n     */\r\n    static EVENT_RESET_SURVEYS = 'userresetsurveys';\r\n\r\n    /**\r\n     * Fired after App.currentSurvey has been set to a new blank survey\r\n     * the survey will be accessible in App.currentSurvey\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_NEW_SURVEY = 'newsurvey';\r\n\r\n    static LOAD_SURVEYS_ENDPOINT = '/loadsurveys.php';\r\n\r\n    /**\r\n     * Fired when a brand-new occurrence is added\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_OCCURRENCE_ADDED = 'occurrenceadded';\r\n\r\n    /**\r\n     * Fired when a survey is retrieved from local storage\r\n     * parameter is {survey : Survey}\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_SURVEY_LOADED = 'surveyloaded';\r\n\r\n    /**\r\n     * Fired when an occurrence is retrieved from local storage or newly initialised\r\n     * parameter is {occurrence : Occurrence}\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_OCCURRENCE_LOADED = 'occurrenceloaded';\r\n\r\n    static EVENT_CURRENT_OCCURRENCE_CHANGED = 'currentoccurrencechanged';\r\n\r\n    /**\r\n     * Fired when the selected current survey id is changed\r\n     * parameter is {newSurvey : Survey|null}\r\n     *\r\n     * (this is not fired for modification of the survey content)\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_CURRENT_SURVEY_CHANGED = 'currentsurveychanged';\r\n\r\n    /**\r\n     * Fired if the surveys list might need updating (as a survey has been added, removed or changed)\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_SURVEYS_CHANGED = 'surveyschanged';\r\n\r\n    /**\r\n     * Fired after fully-successful sync-all\r\n     * (or if sync-all resolved with nothing to send)\r\n     *\r\n     * @todo this is misleading as in fact is fired when all saved to indexeddb or to server\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_ALL_SYNCED_TO_SERVER = 'allsyncedtoserver';\r\n\r\n    /**\r\n     * fired if sync-all called, but one or more objects failed to be stored\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_SYNC_ALL_FAILED = 'syncallfailed';\r\n\r\n    static EVENT_USER_LOGIN = 'login';\r\n\r\n    static EVENT_USER_LOGOUT = 'logout';\r\n\r\n    /**\r\n     * Fired when watching of GPS has been granted following user request.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static EVENT_WATCH_GPS_USER_REQUEST = 'watchgps';\r\n\r\n    static EVENT_CANCEL_WATCHED_GPS_USER_REQUEST = 'cancelgpswatch';\r\n\r\n    /**\r\n     * IndexedDb key used for storing id of current (last accessed) survey (or null)\r\n     *\r\n     * @type {string}\r\n     */\r\n    static CURRENT_SURVEY_KEY_NAME = 'currentsurvey';\r\n    static SESSION_KEY_NAME = 'session';\r\n    static DEVICE_ID_KEY_NAME = 'deviceid';\r\n\r\n    static RESERVED_KEY_NAMES = [\r\n        App.CURRENT_SURVEY_KEY_NAME,\r\n        App.SESSION_KEY_NAME,\r\n        App.DEVICE_ID_KEY_NAME\r\n    ];\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static devMode = false;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {?Survey} survey\r\n     */\r\n    set currentSurvey(survey) {\r\n        if (this._currentSurvey !== survey) {\r\n            this._currentSurvey = survey || null;\r\n\r\n            let surveyId = survey?.id;\r\n            localforage.setItem(App.CURRENT_SURVEY_KEY_NAME, surveyId)\r\n                .then(() => {\r\n                    this.fireEvent(App.EVENT_CURRENT_SURVEY_CHANGED, {newSurvey: survey});\r\n                });\r\n        }\r\n    }\r\n\r\n    _deviceId = '';\r\n\r\n    /**\r\n     * @return Promise<string>\r\n     */\r\n    initialiseDeviceId() {\r\n        if (!this._deviceId) {\r\n            return localforage.getItem(App.DEVICE_ID_KEY_NAME)\r\n                .then((deviceId) => {\r\n                    if (deviceId) {\r\n                        this._deviceId = deviceId;\r\n                        return deviceId;\r\n                    } else {\r\n                        const deviceId = uuid();\r\n\r\n                        return localforage.setItem(App.DEVICE_ID_KEY_NAME, deviceId)\r\n                            .then(() => {\r\n                                this._deviceId = deviceId;\r\n                                return deviceId;\r\n                            })\r\n                    }\r\n                });\r\n        } else {\r\n            return Promise.resolve(this._deviceId);\r\n        }\r\n    }\r\n\r\n    get deviceId() {\r\n        if (!this._deviceId) {\r\n            throw new Error(\"Device ID has not been initialised.\");\r\n        }\r\n\r\n        return this._deviceId;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @param value\r\n     * @returns {Promise<*>}\r\n     */\r\n    forageSetItem(key, value) {\r\n        return localforage.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @returns {Promise<unknown | null>}\r\n     */\r\n    forageGetItem(key) {\r\n        return localforage.getItem(key);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @returns {Promise<unknown | null>}\r\n     */\r\n    forageRemoveItem(key) {\r\n        return localforage.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {?Survey}\r\n     */\r\n    get currentSurvey() {\r\n        return this._currentSurvey;\r\n    }\r\n\r\n    /**\r\n     * note that the last survey might not belong to the current user\r\n     *\r\n     * @returns {Promise<string | null>}\r\n     */\r\n    getLastSurveyId() {\r\n        return localforage.getItem(App.CURRENT_SURVEY_KEY_NAME)\r\n            .catch((error) => {\r\n                console.log({'Error retrieving last survey id' : error});\r\n                return Promise.resolve(null);\r\n            });\r\n    }\r\n\r\n    clearLastSurveyId() {\r\n        return localforage.removeItem(App.CURRENT_SURVEY_KEY_NAME)\r\n            .catch((error) => {\r\n                console.log({'Error removing last survey id' : error});\r\n                return Promise.resolve(null);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @type {Layout}\r\n     */\r\n    layout;\r\n\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     */\r\n    setLocalForageName(name) {\r\n        localforage.config({\r\n            name: name\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<void | null>}\r\n     */\r\n    reset() {\r\n        this.surveys = new Map();\r\n        Track.reset();\r\n        return this.clearCurrentSurvey().then(this.clearLastSurveyId);\r\n\r\n        // if (false) {\r\n        //     // currently disabled during testing to minimise data loss potential\r\n        //     this.surveys = new Map();\r\n        //     return this.clearCurrentSurvey().then(this.clearLastSurveyId);\r\n        // } else {\r\n        //     return Promise.resolve();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * unset the current survey and its associated list of occurrences\r\n     * called when switching surveys and during startup\r\n     *\r\n     * updates local storage last saved survey id\r\n     *\r\n     * @returns {Promise<void | null>}\r\n     */\r\n    clearCurrentSurvey() {\r\n        this.occurrences = new Map();\r\n        this._currentSurvey = null; // must not use setter here otherwise local storage saved previous id will be lost\r\n        return this.clearLastSurveyId();\r\n    }\r\n\r\n    /**\r\n     * see https://github.com/krasimir/navigo\r\n     * @param {PatchedNavigo} router\r\n     */\r\n    set router(router) {\r\n        this._router = router;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {PatchedNavigo}\r\n     */\r\n    get router() {\r\n        return this._router;\r\n    }\r\n\r\n    set containerId(containerId) {\r\n        const el = document.getElementById(containerId);\r\n        if (!el) {\r\n            throw new Error(`App container '${containerId}' not found.`);\r\n        } else {\r\n            this._containerEl = el;\r\n        }\r\n    }\r\n\r\n    get container() {\r\n        return this._containerEl;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {AppController} controller\r\n     */\r\n    registerController(controller) {\r\n        controller.handle = this.controllers.length;\r\n        this.controllers[this.controllers.length] = controller;\r\n\r\n        controller.app = this;\r\n        controller.registerRoute(this._router);\r\n    }\r\n\r\n    initialise() {\r\n        //Page.initialise_layout(this._containerEl);\r\n        this.layout.initialise();\r\n\r\n        this._router.notFound((query) => {\r\n            // called when there is path specified but\r\n            // there is no route matching\r\n\r\n            console.log(`no route found for '${query}'`);\r\n            //this._router.navigate('/list');\r\n\r\n            // const view = new NotFoundView();\r\n            // view.display();\r\n            this.notFoundView();\r\n        });\r\n\r\n        //default homepage\r\n        this._router.on(() => {\r\n            // special-case redirect (replacing in history) from '/' to '/list' without updating browser history\r\n\r\n            console.log(\"redirecting from '/' to '/list'\");\r\n\r\n            this._router.pause();\r\n\r\n            if (this.currentSurvey && this.currentSurvey.isPristine) {\r\n                this._router.navigate('/list/survey/welcome').resume();\r\n            } else {\r\n                this._router.navigate('/list').resume();\r\n            }\r\n            this._router.resolve();\r\n        });\r\n\r\n        for (let controller of this.controllers) {\r\n            controller.initialise();\r\n        }\r\n    }\r\n\r\n    display() {\r\n        //console.log('App display');\r\n\r\n        // it's opportune at this point to try to ping the server again to save anything left outstanding\r\n        this.syncAll(true).then(() => {\r\n            this._router.resolve();\r\n        });\r\n    }\r\n\r\n    saveRoute() {\r\n        const lastRoute = this._router.lastRouteResolved();\r\n        if (this.routeHistory.length) {\r\n            if (this.routeHistory[this.routeHistory.length - 1] !== lastRoute) {\r\n                this.routeHistory[this.routeHistory.length] = lastRoute;\r\n            }\r\n        } else {\r\n            this.routeHistory[0] = lastRoute;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * mark the current survey and its constituent records as subject to validation checks (not pristine)\r\n     */\r\n    markAllNotPristine() {\r\n        for (let occurrenceTuple of this.occurrences) {\r\n            occurrenceTuple[1].isPristine = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Layout} layout\r\n     */\r\n    setLayout(layout) {\r\n        this.layout = layout;\r\n        layout.setApp(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Survey} survey\r\n     */\r\n    addSurvey(survey) {\r\n        if (survey.projectId !== this.projectId) {\r\n            throw new Error(`Survey project id '${survey.projectId} does not match with current project ('${this.projectId}')`);\r\n        }\r\n\r\n        if (!survey.hasAppModifiedListener) {\r\n            survey.hasAppModifiedListener = true;\r\n\r\n            //console.log(\"setting survey's modified/save handler\");\r\n            survey.addListener(\r\n                Survey.EVENT_MODIFIED,\r\n                () => {\r\n                    survey.save().finally(() => {\r\n                        this.fireEvent(App.EVENT_SURVEYS_CHANGED);\r\n                    });\r\n                }\r\n            );\r\n        }\r\n\r\n        this.surveys.set(survey.id, survey);\r\n        this.fireEvent(App.EVENT_SURVEYS_CHANGED);\r\n    }\r\n\r\n    /**\r\n     * tests whether occurrences have been defined, excluding any that have been deleted\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    haveExtantOccurrences() {\r\n        for (let occurrence of this.occurrences) {\r\n            if (!occurrence.deleted) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Occurrence} occurrence\r\n     */\r\n    addOccurrence(occurrence) {\r\n        if (!occurrence.surveyId) {\r\n            throw new InternalAppError('Survey id must set prior to registering occurrence.');\r\n        }\r\n\r\n\r\n        // set the survey creation stamp to match the earliest extant occurrence\r\n        // this avoids anomalies where a 'stale' survey created when the form was first opened but not used sits around\r\n        // for a protracted period\r\n\r\n        const survey = this.surveys.get(occurrence.surveyId);\r\n        if (!survey) {\r\n            throw new Error(`Failed to look up survey id ${occurrence.surveyId}`);\r\n        }\r\n\r\n        if (occurrence.createdStamp &&\r\n            (this.occurrences.size === 0 || survey.createdStamp > occurrence.createdStamp)) {\r\n\r\n            survey.createdStamp = occurrence.createdStamp;\r\n        }\r\n        //console.log(`in addOccurrence setting id '${occurrence.id}'`);\r\n        this.occurrences.set(occurrence.id, occurrence);\r\n\r\n        occurrence.addListener(Occurrence.EVENT_MODIFIED,\r\n            // possibly this should be async, with await on the survey and occurrence save\r\n            () => {\r\n                const survey = this.surveys.get(occurrence.surveyId);\r\n                if (!survey) {\r\n                    throw new Error(`Failed to look up survey id ${occurrence.surveyId}`);\r\n                } else {\r\n                    survey.isPristine = false;\r\n\r\n                    // need to ensure that currentSurvey is saved before occurrence\r\n                    // rather than using a promise chain here, instead rely on enforced queuing of post requests in Model\r\n                    // otherwise there are problems with queue-jumping (e.g. when an image needs to be saved after both previous requests)\r\n                    // if (survey.unsaved()) {\r\n                    //     // noinspection JSIgnoredPromiseFromCall\r\n                    //     survey.save();\r\n                    // }\r\n\r\n                    // against a backdrop where surveys are somehow going unsaved, always force a survey re-save\r\n                    // @todo need to watch if this is creating a mess of identical survey revisions\r\n                    survey.save(true);\r\n\r\n                    occurrence.save().finally(() => {\r\n                        survey.fireEvent(Survey.EVENT_OCCURRENCES_CHANGED, {occurrenceId: occurrence.id});\r\n                    });\r\n                }\r\n            });\r\n\r\n        this.fireEvent(App.EVENT_OCCURRENCE_LOADED, {occurrence: occurrence});\r\n    }\r\n\r\n    /**\r\n     * attempts to refresh the state of local storage for the specified survey ids\r\n     * if fetch fails then return a failed promise\r\n     *\r\n     * updates local copy of surveys and occurrences\r\n     *\r\n     * no service worker interception of this call - passed through and not cached\r\n     *\r\n     * @param {Array.<string>} surveyIds\r\n     * @return {Promise}\r\n     */\r\n    refreshFromServer(surveyIds) {\r\n        console.log({'Refresh from server, ids' : surveyIds});\r\n        const formData = new FormData;\r\n\r\n        let n = 0;\r\n        for (let key of surveyIds) {\r\n            if (key && key !== 'undefined') {\r\n                formData.append(`surveyId[${n++}]`, key);\r\n            }\r\n        }\r\n\r\n        if (this.session?.userId) {\r\n            formData.append('userId', this.session.userId);\r\n        }\r\n\r\n        return fetch(App.LOAD_SURVEYS_ENDPOINT, {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                return Promise.reject(`Invalid response from server when refreshing survey ids`);\r\n            }\r\n        }).then((jsonResponse) => {\r\n            /** @param {{survey : Array.<object>, occurrence: Array.<object>, image: Array.<object>}} jsonResponse */\r\n\r\n            console.log({'refresh from server json response' : jsonResponse});\r\n\r\n            // if external objects newer than local version then place in local storage\r\n            const promises = [];\r\n\r\n            for (let type in jsonResponse) {\r\n                if (jsonResponse.hasOwnProperty(type)) {\r\n                    for (let object of jsonResponse[type]) {\r\n                        promises.push(this._conditionallyReplaceObject(object));\r\n                    }\r\n                }\r\n            }\r\n\r\n            return Promise.all(promises);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * compare modified stamp of indexeddb and external objects and write external version locally if more recent\r\n     *\r\n     * @param {{id : string, type : string, modified : number, created : number, saveState : string, deleted : boolean}} externalVersion\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _conditionallyReplaceObject(externalVersion) {\r\n        const objectType = externalVersion.type;\r\n        const id = externalVersion.id;\r\n        const key = `${objectType}.${id}`;\r\n\r\n        return localforage.getItem(key)\r\n            .then((localVersion) => {\r\n                if (localVersion) {\r\n                    // compare stamps\r\n\r\n                    // if (externalVersion.deleted) {\r\n                    //     // if the external copy is deleted then remove the local copy\r\n                    //     return localforage.removeItem(key);\r\n                    // }\r\n\r\n                    if (!externalVersion.deleted && localVersion.modified >= externalVersion.modified) {\r\n                        console.info(`Local copy of ${key} is the same or newer than the server copy. (${localVersion.modified} >= ${externalVersion.modified}) `);\r\n                        return Promise.resolve();\r\n                    }\r\n                }\r\n\r\n                // no local copy or stale copy\r\n                // so store response locally\r\n                console.info(`Adding or replacing local copy of ${key}`);\r\n                return localforage.setItem(key, externalVersion);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * retrieve the full set of keys from local storage (IndexedDb)\r\n     *\r\n     * @param {{survey: Array<string>, occurrence : Array<string>, image: Array<string>, [track]: Array<string>}} storedObjectKeys\r\n     * @returns {Promise<{survey: Array<string>, occurrence: Array<string>, image: Array<string>, [track]: Array<string>}>}\r\n     */\r\n    seekKeys(storedObjectKeys) {\r\n        //console.log('starting seekKeys');\r\n\r\n        return localforage.keys().then((keys) => {\r\n            //console.log({\"in seekKeys: local forage keys\" : keys});\r\n\r\n            for (let key of keys) {\r\n                //if (key !== App.CURRENT_SURVEY_KEY_NAME && key !== App.SESSION_KEY_NAME) {\r\n                if (!App.RESERVED_KEY_NAMES.includes(key)) {\r\n                    let type, id;\r\n\r\n                    [type, id] = key.split('.', 2);\r\n\r\n                    if (storedObjectKeys.hasOwnProperty(type)) {\r\n                        if (!storedObjectKeys[type].includes(id)) {\r\n                            storedObjectKeys[type].push(id);\r\n                        }\r\n                    } else {\r\n                        // 'track' records not always wanted here, but not an error\r\n                        if (type !== 'track') {\r\n                            console.error(`Unrecognised stored key type '${type}.`);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return storedObjectKeys;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} fastReturn If set then the promise returns more quickly once the saves have been queued but not all effected\r\n     * This should allow surveys to be switched etc. without disrupting the ongoing save process.\r\n     * @returns {Promise}\r\n     */\r\n    syncAll(fastReturn = true) {\r\n        const storedObjectKeys = {\r\n            survey : [],\r\n            occurrence : [],\r\n            image : [],\r\n            track : [],\r\n        };\r\n\r\n        return this.seekKeys(storedObjectKeys)\r\n            .then((storedObjectKeys) => {\r\n                return this._syncLocalUnsaved(storedObjectKeys, fastReturn)\r\n                    .then((result) => {\r\n                        if (!fastReturn) {\r\n                            // Can only trigger the event once the whole process is complete, rather than after\r\n                            // a short-cut fast return.\r\n                            this.fireEvent(App.EVENT_ALL_SYNCED_TO_SERVER);\r\n                        }\r\n\r\n                        return result;\r\n                    });\r\n            }, (failedResult) => {\r\n                console.error(`Failed to sync all: ${failedResult}`);\r\n                Logger.logError(`Failed to sync all: ${failedResult}`);\r\n                this.fireEvent(App.EVENT_SYNC_ALL_FAILED);\r\n                return false;\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {boolean} [queryFilters.structuredSurvey]\r\n     * @param {boolean} [queryFilters.isToday]\r\n     * @param {string} [queryFilters.monad]\r\n     * @param {string} [queryFilters.tetrad]\r\n     * @param {string} [queryFilters.sampleUnit]\r\n     * @param {string} [queryFilters.userId]\r\n     * @param {string} [queryFilters.date]\r\n     * @param {string} [queryFilters.excludeSurveyId]\r\n     * @param {boolean} [queryFilters.defaultCasual]\r\n     * @returns {Array<Survey>}\r\n     */\r\n    queryLocalSurveys(queryFilters) {\r\n        const matches = [];\r\n\r\n        for (const surveyTuple of this.surveys) {\r\n            const survey = surveyTuple[1];\r\n\r\n            if (queryFilters.structuredSurvey && survey.attributes.casual) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.defaultCasual && !survey.attributes.defaultCasual) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.isToday && !survey.isToday()) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.monad && survey.getGeoContext()?.monad !== queryFilters.monad) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.tetrad && survey.getGeoContext()?.tetrad !== queryFilters.tetrad) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.sampleUnit && survey.attributes?.sampleUnit?.selection[0] !== queryFilters.sampleUnit) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.hasOwnProperty('userId') && queryFilters.userId !== survey.userId) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.excludeSurveyId === survey.id) {\r\n                continue;\r\n            }\r\n\r\n            if (queryFilters.date && queryFilters.date !== survey.date) {\r\n                continue;\r\n            }\r\n\r\n\r\n\r\n            matches[matches.length] = survey;\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{survey : Array<string>, occurrence : Array<string>, image : Array<string>}} storedObjectKeys\r\n     * @param {boolean} fastReturn default false\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _syncLocalUnsaved(storedObjectKeys, fastReturn = false) {\r\n        // synchronises surveys first, then occurrences, then images from indexedDb\r\n\r\n        const promises = [];\r\n\r\n        if (fastReturn) {\r\n            // as shortcut queue an already resolved promise, so that later Promise.race returns immediately.\r\n            promises[0] = Promise.resolve(true);\r\n        }\r\n\r\n        for(let surveyKey of storedObjectKeys.survey) {\r\n            promises.push(Survey.retrieveFromLocal(surveyKey, new Survey)\r\n                .then((/** Survey */ survey) => {\r\n                    if (survey.unsaved()) { //} || this.session?.userId === '2cd4p9h.31ecsw') {\r\n                        return survey.save(true);\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        for(let occurrenceKey of storedObjectKeys.occurrence) {\r\n            promises.push(Occurrence.retrieveFromLocal(occurrenceKey, new Occurrence)\r\n                .then((/** Occurrence */ occurrence) => {\r\n                    if (occurrence.unsaved()) { // || this.session?.userId === '2cd4p9h.31ecsw') {\r\n                        return occurrence.save('', true);\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        for(let imageKey of storedObjectKeys.image) {\r\n            promises.push(OccurrenceImage.retrieveFromLocal(imageKey, new OccurrenceImage)\r\n                .then((/** OccurrenceImage */ image) => {\r\n                    if (image.unsaved()) {\r\n                        return image.save();\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        if (fastReturn) {\r\n            // this will return near instantaneously as there is an already resolved promise at the head of the array\r\n            // the other promises will continue to resolve\r\n            return Promise.race(promises);\r\n        } else {\r\n            return Promise.all(promises).catch((result) => {\r\n                console.log(`Save failure: ${result}`);\r\n                return Promise.reject(result); // pass on the failed save (catch was only for logging, not to allow subsequent success)\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * restore previous state, pulling back from local and external store\r\n     * @todo this needs a save phase, so that local changes are saved back to the server\r\n     *\r\n     * @param {string} [targetSurveyId] if specified then select this id as the current survey\r\n     * @param {boolean} [neverAddBlank] if set then don't add a new blank survey if none available, default false\r\n     * @return {Promise}\r\n     */\r\n    restoreOccurrences(targetSurveyId = '', neverAddBlank = false) {\r\n        console.log(`Invoked restoreOccurrences, target survey id: ${targetSurveyId}`);\r\n\r\n        if (targetSurveyId === 'undefined') {\r\n            console.error(`Attempt to restore occurrences for literal 'undefined' survey id.`);\r\n            targetSurveyId = '';\r\n        }\r\n\r\n        return (targetSurveyId) ?\r\n            this._restoreOccurrenceImp(targetSurveyId, neverAddBlank)\r\n            :\r\n            this.getLastSurveyId().then(\r\n                (lastSurveyId) => {\r\n                    console.log(`Retrieved last used survey id '${lastSurveyId}'`);\r\n\r\n                    return this._restoreOccurrenceImp(lastSurveyId, neverAddBlank).catch(() => {\r\n                        console.log(`Failed to retrieve lastSurveyId ${lastSurveyId}. Resetting current survey and retrying.`);\r\n\r\n                        this.currentSurvey = null;\r\n                        return this._restoreOccurrenceImp('', neverAddBlank);\r\n                    });\r\n                },\r\n                // probably can't reach this catch phase\r\n                () => this._restoreOccurrenceImp('', neverAddBlank)\r\n            );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} [targetSurveyId] default ''\r\n     * @param {boolean} [neverAddBlank] if set then don't add a new blank survey if none available, default false\r\n     * @returns {Promise<void>|Promise<unknown>}\r\n     * @protected\r\n     */\r\n    _restoreOccurrenceImp(targetSurveyId = '', neverAddBlank = false) {\r\n        // need to check for a special case where restoring a survey that has never been saved even locally\r\n        // i.e. new and unmodified\r\n        // only present in current App.surveys\r\n        // this occurs if user creates a new survey, makes no changes, switches away from it then switches back\r\n        if (targetSurveyId && this.surveys.has(targetSurveyId)) {\r\n            const localSurvey = this.surveys.get(targetSurveyId);\r\n\r\n            if (localSurvey.isPristine) {\r\n                // clear occurrences from the previous survey\r\n                return this.clearCurrentSurvey().then(() => {\r\n                    this.currentSurvey = localSurvey;\r\n                    this.fireEvent(App.EVENT_SURVEYS_CHANGED); // current survey should be set now, so menu needs refresh\r\n                    return Promise.resolve();\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @type {{image: Array<string>, survey: Array<string>, occurrence: Array<string>}}\r\n         */\r\n        const storedObjectKeys = {\r\n            survey: [],\r\n            occurrence: [],\r\n            image: []\r\n        };\r\n\r\n        if (targetSurveyId) {\r\n            storedObjectKeys.survey[0] = targetSurveyId;\r\n        }\r\n\r\n        return this.clearCurrentSurvey().then(() => this.seekKeys(storedObjectKeys)).then((storedObjectKeys) => {\r\n            if (storedObjectKeys.survey.length || this.session?.userId) {\r\n                return this.refreshFromServer(storedObjectKeys.survey).finally(() => {\r\n                    // re-seek keys from indexed db, to take account of any new occurrences received from the server\r\n                    return this.seekKeys(storedObjectKeys);\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }).finally(() => {\r\n            // called regardless of whether a server refresh was successful\r\n            // storedObjectKeys and indexed db should be as up-to-date as possible\r\n\r\n            console.log({storedObjectKeys});\r\n\r\n            if (storedObjectKeys?.survey?.length) {\r\n\r\n                const surveyFetchingPromises = [];\r\n                let n = 0;\r\n\r\n                for (let surveyKey of storedObjectKeys.survey) {\r\n                    // arbitrarily set first survey key as current if a target id hasn't been specified\r\n\r\n                    surveyFetchingPromises.push(\r\n                        this._restoreSurveyFromLocal(surveyKey, storedObjectKeys, (targetSurveyId === surveyKey) || (!targetSurveyId && n++ === 0))\r\n                    );\r\n                }\r\n\r\n                return Promise.all(surveyFetchingPromises)\r\n                    .finally(() => {\r\n                        //this.currentSurvey = this.surveys.get(storedObjectKeys.survey[0]);\r\n\r\n                        if (!this.currentSurvey && neverAddBlank) {\r\n                            // survey doesn't actually exist\r\n                            // this could have happened in an invalid survey id was provided as a targetSurveyId\r\n                            console.log(`Failed to retrieve survey id '${targetSurveyId}'`);\r\n                            return Promise.reject(new Error(`Failed to retrieve survey id '${targetSurveyId}'`));\r\n                        }\r\n\r\n                        if (this.currentSurvey?.deleted) {\r\n                            // unusual case where survey is deleted or was not found\r\n                            // substitute a new one\r\n\r\n                            // this should probably never happen, as items deleted on the server ought to have been\r\n                            // removed locally\r\n                            this.currentSurvey = null;\r\n                            if (neverAddBlank) {\r\n                                return Promise.reject(new Error(`Survey id '${targetSurveyId}' ${this.currentSurvey?.deleted ? 'is deleted' : 'not found'}.`));\r\n                            } else {\r\n                                this.setNewSurvey();\r\n                            }\r\n                        }\r\n\r\n                        this.fireEvent(App.EVENT_SURVEYS_CHANGED); // current survey should be set now, so menu needs refresh\r\n                        this.currentSurvey?.fireEvent(Survey.EVENT_OCCURRENCES_CHANGED);\r\n                        this.currentSurvey?.fireEvent(Survey.EVENT_LIST_LENGTH_CHANGED);\r\n\r\n                        return Promise.resolve();\r\n                    });\r\n            } else {\r\n                // no pre-existing surveys\r\n\r\n                if (neverAddBlank) {\r\n                    console.log('no pre-existing survey');\r\n                    this.fireEvent(App.EVENT_SURVEYS_CHANGED); // survey menu needs refresh\r\n                    return Promise.reject(new Error(`Failed to match survey.`));\r\n                } else {\r\n                    console.log('no pre-existing surveys, so creating a new one');\r\n                    this.setNewSurvey(); // this also fires EVENT_SURVEYS_CHANGED\r\n                    return Promise.resolve();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{}|null} [attributes]\r\n     */\r\n    setNewSurvey(attributes) {\r\n        const newSurvey = new Survey();\r\n\r\n        newSurvey.id; // trigger id initialisation\r\n\r\n        if (attributes) {\r\n            newSurvey.attributes = {...newSurvey.attributes, ...attributes};\r\n        }\r\n\r\n        newSurvey.projectId = this.projectId;\r\n        newSurvey.isPristine = true;\r\n        newSurvey.isNew = true;\r\n\r\n        if (this.session?.userId) {\r\n            newSurvey.userId = this.session.userId;\r\n        }\r\n\r\n        // Important: don't set this.currentSurvey until default attributes have been set,\r\n        // as currentSurvey setter fires an event that may depend on these attributes\r\n        this.currentSurvey = newSurvey;\r\n        this.addSurvey(newSurvey);\r\n        this.fireEvent(App.EVENT_NEW_SURVEY);\r\n    }\r\n\r\n    /**\r\n     * Add and set a *new* survey\r\n     *\r\n     * @param survey\r\n     */\r\n    addAndSetSurvey(survey) {\r\n        this.currentSurvey = survey;\r\n        this.addSurvey(survey);\r\n        this.fireEvent(App.EVENT_NEW_SURVEY);\r\n    }\r\n\r\n    /**\r\n     * Note that if attributes are set here, then the occurrence is regarded as changed and unsaved, rather than pristine\r\n     * i.e. attributes setting here is *not* intended as a way to set defaults\r\n     *\r\n     * @param {{}|null} [attributes]\r\n     * @param {{}|null} [pristineAttributes] additional attributes, that if set, don't count as edits\r\n     * @return {Occurrence}\r\n     */\r\n    addNewOccurrence(attributes, pristineAttributes) {\r\n        const occurrence = new Occurrence();\r\n        const currentSurvey = this.currentSurvey; // avoid too many getter lookups\r\n\r\n        if (!currentSurvey) {\r\n            throw new Error(`Current survey unset when adding new occurrence.`);\r\n        }\r\n\r\n        occurrence.id; // force initialisation of occurrence id\r\n        occurrence.surveyId = currentSurvey.id;\r\n        occurrence.projectId = this.projectId;\r\n\r\n        if (currentSurvey.userId) {\r\n            occurrence.userId = currentSurvey.userId;\r\n        }\r\n\r\n        occurrence.isNew = true;\r\n        occurrence.isPristine = true;\r\n\r\n        if (attributes && Object.keys(attributes).length) {\r\n            occurrence.attributes = {...occurrence.attributes, ...attributes};\r\n            occurrence.touch(); // now no longer pristine\r\n        }\r\n\r\n        if (pristineAttributes && Object.keys(pristineAttributes).length) {\r\n            // unlike above, setting these doesn't affect the modified state of the object\r\n            occurrence.attributes = {...occurrence.attributes, ...pristineAttributes};\r\n        }\r\n\r\n        this.addOccurrence(occurrence);\r\n\r\n        currentSurvey.extantOccurrenceKeys.add(occurrence.id);\r\n\r\n        this.fireEvent(App.EVENT_OCCURRENCE_ADDED, {occurrenceId: occurrence.id, surveyId: occurrence.surveyId});\r\n\r\n        currentSurvey.fireEvent(Survey.EVENT_OCCURRENCES_CHANGED, {occurrenceId : occurrence.id});\r\n        currentSurvey.fireEvent(Survey.EVENT_LIST_LENGTH_CHANGED);\r\n\r\n        // occurrence modified event fired to ensure that the occurrence is saved\r\n        occurrence.fireEvent(Occurrence.EVENT_MODIFIED);\r\n\r\n        return occurrence;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} surveyId\r\n     * @param {{survey: Array, occurrence: Array, image: Array}} storedObjectKeys\r\n     * @param {boolean} setAsCurrent\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _restoreSurveyFromLocal(surveyId, storedObjectKeys, setAsCurrent) {\r\n        // retrieve surveys first, then occurrences, then images from indexedDb\r\n\r\n        let userIdFilter = this.session?.userId;\r\n\r\n        let promise = Survey.retrieveFromLocal(surveyId, new Survey).then((survey) => {\r\n            console.log(`retrieving local survey ${surveyId}`);\r\n\r\n            this.fireEvent(App.EVENT_SURVEY_LOADED, {survey}); // provides a hook point in case any attributes need to be re-initialised\r\n\r\n            if ((!userIdFilter && !survey.userId) || survey.userId === userIdFilter || this.session?.superAdmin) {\r\n                if (setAsCurrent) {\r\n                    // the apps occurrences should only relate to the current survey\r\n                    // (the reset records are remote or in IndexedDb)\r\n                    return this.clearCurrentSurvey().then(() => {\r\n                        this.addSurvey(survey);\r\n                        const occurrenceFetchingPromises = [];\r\n\r\n                        for (let occurrenceKey of storedObjectKeys.occurrence) {\r\n                            occurrenceFetchingPromises.push(Occurrence.retrieveFromLocal(occurrenceKey, new Occurrence)\r\n                                .then((occurrence) => {\r\n                                    if (occurrence.surveyId === surveyId) {\r\n                                        //console.log(`adding occurrence ${occurrenceKey}`);\r\n                                        this.addOccurrence(occurrence);\r\n\r\n                                        survey.extantOccurrenceKeys.add(occurrence.id);\r\n                                    } else {\r\n                                        // not part of current survey but should still add to key list for counting purposes\r\n\r\n                                        this.surveys.get(occurrence.surveyId)?.extantOccurrenceKeys?.add(occurrence.id);\r\n                                    }\r\n\r\n                                }));\r\n                        }\r\n\r\n                        return Promise.all(occurrenceFetchingPromises);\r\n                    });\r\n                } else {\r\n                    // not the current survey, so just add it but don't load occurrences\r\n                    this.addSurvey(survey);\r\n                }\r\n            } else {\r\n                console.log(`Skipping survey id ${survey.id} that belongs to user ${survey.userId}`);\r\n            }\r\n        });\r\n\r\n        if (setAsCurrent) {\r\n            promise.finally(() => {\r\n                //console.log('Reached image fetching part');\r\n                const imageFetchingPromises = [];\r\n\r\n                for (let occurrenceImageKey of storedObjectKeys.image) {\r\n                    imageFetchingPromises.push(OccurrenceImage.retrieveFromLocal(occurrenceImageKey, new OccurrenceImage)\r\n                        .then((occurrenceImage) => {\r\n                            console.log(`restoring image id '${occurrenceImageKey}'`);\r\n\r\n                            if (occurrenceImage.surveyId === surveyId) {\r\n                                OccurrenceImage.imageCache.set(occurrenceImageKey, occurrenceImage);\r\n                            }\r\n                        }, (reason) => {\r\n                            console.log(`Failed to retrieve an image: ${reason}`);\r\n                        }));\r\n                }\r\n\r\n                this.currentSurvey = this.surveys.get(storedObjectKeys.survey[0]) || null;\r\n\r\n                // if the target survey belonged to a different user then could be undefined here\r\n\r\n                return this.currentSurvey ? Promise.all(imageFetchingPromises) : Promise.resolve();\r\n            });\r\n        }\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    clearLocalForage() {\r\n        return localforage.clear();\r\n    }\r\n\r\n    /**\r\n     * @abstract\r\n     */\r\n    notFoundView() {\r\n        // const view = new NotFoundView();\r\n        // view.display();\r\n    }\r\n}\n\n// SurveyPickerController\r\n//\r\n\r\n\r\nclass SurveyPickerController extends AppController {\r\n    route = '/survey/:action/:id';\r\n\r\n    static EVENT_BACK = 'back';\r\n\r\n    title = 'Survey picker';\r\n\r\n    /**\r\n     *\r\n     * @type {SurveyPickerView}\r\n     */\r\n    view;\r\n\r\n    /**\r\n     *\r\n     * @returns {Survey}\r\n     */\r\n    get survey() {\r\n        return this.app.currentSurvey;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {SurveyPickerView} view\r\n     */\r\n    constructor (view) {\r\n        super();\r\n\r\n        this.view = view;\r\n        view.controller = this;\r\n\r\n        this.handle = AppController.nextHandle;\r\n    }\r\n\r\n    /**\r\n     * registers the default route from this.route\r\n     * or alternatively is overridden in a child class\r\n     *\r\n     * @param {PatchedNavigo} router\r\n     */\r\n    registerRoute(router) {\r\n        // router.on(\r\n        //     '/survey',\r\n        //     this.mainRouteHandler.bind(this, 'survey', '', ''),\r\n        //     {\r\n        //         // before : this.beforeRouteHandler ? this.beforeRouteHandler.bind(this) : null,\r\n        //         // after : this.afterRouteHandler ? this.afterRouteHandler.bind(this) : null,\r\n        //         // leave : this.leaveRouteHandler ? this.leaveRouteHandler.bind(this) : null,\r\n        //         // already : this.alreadyRouteHandler ? this.alreadyRouteHandler.bind(this) : null\r\n        //     }\r\n        // );\r\n\r\n        router.on(\r\n            '/survey/new',\r\n            this.newSurveyHandler.bind(this, 'survey', 'new', ''),\r\n            {\r\n                before : this.beforeNewHandler.bind(this)\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/reset',\r\n            this.mainRouteHandler.bind(this, 'survey', 'reset', ''),\r\n            {\r\n                before : this.beforeResetHandler.bind(this)\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/save',\r\n            this.mainRouteHandler.bind(this, 'survey', 'save', ''),\r\n            {\r\n                before : this.beforeSaveAllHandler.bind(this)\r\n            }\r\n        );\r\n\r\n        router.on(\r\n            '/survey/add/:surveyId/:occurrenceId',\r\n            this.addSurveyHandler.bind(this, 'survey', 'add', '')\r\n        );\r\n\r\n        router.on(\r\n            '/survey/add/:surveyId',\r\n            this.addSurveyHandler.bind(this, 'survey', 'add', '')\r\n        );\r\n\r\n\r\n\r\n        this.app.addListener(App.EVENT_ADD_SURVEY_USER_REQUEST, this.addNewSurveyHandler.bind(this));\r\n        this.app.addListener(App.EVENT_RESET_SURVEYS, this.resetSurveysHandler.bind(this));\r\n    }\r\n\r\n    beforeNewHandler(done) {\r\n        this.view.newSurveyDialog();\r\n\r\n        this.app.router.pause();\r\n\r\n        console.log({'route history' : this.app.routeHistory});\r\n\r\n        if (window.history.state) {\r\n            window.history.back(); // this could fail if previous url was not under the single-page-app umbrella (should test)\r\n        }\r\n        this.app.router.resume();\r\n\r\n        done(false); // block navigation\r\n    }\r\n\r\n    beforeResetHandler(done) {\r\n        this.view.showResetDialog();\r\n\r\n        this.app.router.pause();\r\n        if (window.history.state) {\r\n            window.history.back(); // this could fail if previous url was not under the single-page-app umbrella (should test)\r\n        }\r\n        this.app.router.resume();\r\n\r\n        done(false); // block navigation\r\n    }\r\n\r\n    beforeSaveAllHandler(done) {\r\n        // invoke sync of any/all unsaved data\r\n        // show pop-ups on success and failure\r\n        this.app.syncAll(false).then((result) => {\r\n            console.log({'In save all handler, success result' : result});\r\n\r\n            if (Array.isArray(result)) {\r\n                this.view.showSaveAllSuccess();\r\n            } else {\r\n                this.view.showSaveAllFailure();\r\n            }\r\n        }, (result) => {\r\n            console.log({'In save all handler, failure result' : result});\r\n            this.view.showSaveAllFailure();\r\n        }).finally(() => {\r\n            // stop the spinner\r\n\r\n        });\r\n\r\n        this.app.router.pause();\r\n        if (window.history.state) {\r\n            window.history.back(); // this could fail if previous url was not under the single-page-app umbrella (should test)\r\n        }\r\n        this.app.router.resume();\r\n\r\n        done(false); // block navigation\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} context typically 'survey'\r\n     * @param {('new'|'')} subcontext\r\n     * @param {(''|'help')} rhs currently not used\r\n     * @param {Object.<string, string>} queryParameters surveyId\r\n     */\r\n    newSurveyHandler(context, subcontext, rhs, queryParameters) {\r\n        // should not get here, as beforeNewHandler ought to have been invoked first\r\n    }\r\n\r\n    /**\r\n     * called after user has confirmed add new survey dialog box\r\n     *\r\n     */\r\n    addNewSurveyHandler() {\r\n        console.log(\"reached addNewSurveyHandler\");\r\n        this.app.currentControllerHandle = this.handle; // when navigate back need to list need to ensure full view refresh\r\n\r\n        // it's opportune at this point to try to ping the server again to save anything left outstanding\r\n        this.app.syncAll(true).finally(() => {\r\n\r\n            // the apps occurrences should only relate to the current survey\r\n            // (the reset are remote or in IndexedDb)\r\n            this.app.clearCurrentSurvey().then(() => {\r\n\r\n                this.app.setNewSurvey();\r\n\r\n                this.app.router.pause();\r\n                this.app.router.navigate('/list/survey/about').resume(); // jump straight into the survey rather than to welcome stage\r\n                this.app.router.resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * called after user has confirmed reset surveys dialog box\r\n     */\r\n    resetSurveysHandler() {\r\n        this.app.clearLocalForage().then(() => {\r\n            return this.app.reset();\r\n        }).finally(() => {\r\n            this.addNewSurveyHandler();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * url fragment to redirect to, following addition of an existing survey, e.g. a pick from the selection list\r\n     *\r\n     * should be '/list' or '/list/record'\r\n     *\r\n     * @type {string}\r\n     */\r\n    restoredSurveyNavigationTarget = '/list';\r\n\r\n    /**\r\n     *\r\n     * @param {string} context typically 'survey'\r\n     * @param {('add'|'')} subcontext\r\n     * @param {(''|'help')} rhs currently not used\r\n     * @param {Object.<string, string>} queryParameters surveyId\r\n     */\r\n    addSurveyHandler(context, subcontext, rhs, queryParameters) {\r\n        console.log(\"reached addSurveyHandler\");\r\n        console.log({context: context, params: subcontext, query: queryParameters});\r\n\r\n        this.app.currentControllerHandle = this.handle; // when navigate back need to list need to ensure full view refresh\r\n\r\n        let surveyId = queryParameters.surveyId;\r\n\r\n        if (!surveyId || !surveyId.match(UUID_REGEX)) {\r\n            throw new NotFoundError(`Failed to match survey id '${surveyId}', the id format appears to be incorrect`);\r\n        }\r\n\r\n        surveyId = surveyId.toLowerCase();\r\n\r\n        // hide the left panel before loading, otherwise there can be a confusing delay\r\n        this.view.hideLeftPanel();\r\n\r\n        this.app.restoreOccurrences(surveyId)\r\n            .then(() => {\r\n                this.app.markAllNotPristine();\r\n\r\n                this.app.router.pause();\r\n                this.app.router.navigate(this.restoredSurveyNavigationTarget).resume();\r\n                this.app.router.resolve();\r\n            }, (error) => {\r\n                console.log({'failed survey restoration' : error});\r\n\r\n                // should display a modal error message\r\n                // either the survey was not found or there was no network connection\r\n\r\n                // should switch to displaying a list of available surveys and an option to start a new survey\r\n            })\r\n            .finally(() => {\r\n                this.view.restoreLeftPanel();\r\n            })\r\n        ;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} context typically 'survey'\r\n     * @param {('add'|'')} subcontext\r\n     * @param {(''|'help')} rhs currently not used\r\n     * @param {Object.<string, string>} queryParameters surveyId\r\n     */\r\n    mainRouteHandler(context, subcontext, rhs, queryParameters) {\r\n        console.log(\"reached special route handler for SurveyPickerController.js\");\r\n        console.log({context: context, params: subcontext, query: queryParameters});\r\n    }\r\n}\n\nclass PartyError extends Error {\r\n\r\n}\n\nclass Party {\r\n    /**\r\n     * @typedef RawParty\r\n     * @type {object}\r\n     *\r\n     * @property {string} 0 - name string\r\n     * @property {array} 1 - dates (normally blank)\r\n     * @property {string} 2 - surname\r\n     * @property {string} 3 - forenames\r\n     * @property {string} 4 - orgName\r\n     * @property {string} 5 - initials\r\n     * @property {string} 6 - id\r\n     * @property {string} 7 - linked user id\r\n     * @property {array} 8 - roles\r\n     *\r\n     * // these are not implemented\r\n     * @property {string} [9] - type code\r\n     * @property {string} [10] - prefix\r\n     * @property {string} [11] - suffix\r\n     * @property {string} [12] - disambiguation\r\n     */\r\n\r\n    static NAME_INDEX = 0;\r\n    static SURNAME_INDEX = 2;\r\n    static FORENAMES_INDEX = 3;\r\n    static ORGNAME_INDEX = 4;\r\n    static INITIALS_INDEX = 5;\r\n    static ID_INDEX = 6;\r\n    static USERID_INDEX = 7;\r\n    static ROLES_INDEX = 8;\r\n\r\n    /**\r\n     * Generic party list, not tied to a particular user id\r\n     *\r\n     * @type {Array.<RawParty>}\r\n     */\r\n    static _baseParties = [];\r\n\r\n    /**\r\n     * Current party working set, combining base set with per-user extras\r\n     *\r\n     * @type {Array.<RawParty>}\r\n     */\r\n    static rawParties = [];\r\n\r\n    /**\r\n     *\r\n     * @type {string|null}\r\n     */\r\n    static loadedUserId = null;\r\n\r\n    static TYPE_PERSON = 'p';\r\n    static TYPE_ORGANISATION = 'u';\r\n    static TYPE_UNKNOWN = '?';\r\n\r\n    static USER_PARTIES_URL = '/';\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    id;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    name = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    firstName = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    surnameName = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    orgName = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    type = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    prefix = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    suffix = '';\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n    disambiguation = '';\r\n\r\n    // static setParties(parties) {\r\n    //     Party.rawParties = parties;\r\n    // }\r\n\r\n    /**\r\n     *\r\n     * @param {Array.<RawParty>} parties\r\n     * @param {string} sourceUrl\r\n     */\r\n    static initialiseParties(parties, sourceUrl) {\r\n        Party._baseParties = parties;\r\n        //Party.rawParties = [...Party._baseParties, ...parties];\r\n        Party.rawParties = Party._baseParties;\r\n\r\n        if ((parties.stamp + (3600 * 24 * 7)) < (Date.now() / 1000)) {\r\n            console.log(`Party list may be stale (stamp is ${parties.stamp}), prompting re-cache.`);\r\n            navigator?.serviceWorker?.ready.then((registration) => {\r\n                registration.active.postMessage(\r\n                    {\r\n                        action: 'recache',\r\n                        url: sourceUrl\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} userId\r\n     * @returns {Promise}\r\n     */\r\n    static addUserParties(userId) {\r\n        // where parties are the newly-loaded extra set\r\n        //Party.rawParties = [...Party._baseParties, ...parties];\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @returns {Party}\r\n     * @throws {PartyError}\r\n     */\r\n    static fromId (id) {\r\n        if (!Party.rawParties) {\r\n            throw new PartyError(`Party.fromId() called before list has been initialized.`);\r\n        }\r\n\r\n        if (!Party.rawParties.hasOwnProperty(id)) {\r\n            throw new PartyError(`Party id '${id}' not found.`);\r\n        }\r\n\r\n        const raw = Party.rawParties[id];\r\n\r\n        const party = new Party;\r\n\r\n        party.id = id;\r\n        party.surname = raw[0] || '';\r\n        party.firstName = raw[1] || '';\r\n        party.orgName = raw[2] || '';\r\n        party.type = raw[3];\r\n        party.prefix = raw[4] || '';\r\n        party.suffix = raw[5] || '';\r\n        party.disambiguation = raw[6] || '';\r\n        // @todo need to set party.name\r\n\r\n        return party;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    formattedHTML() {\r\n\r\n        return this.type === Party.TYPE_PERSON ?\r\n            escapeHTML(`${this.firstName} ${this.surnameName}`)\r\n            :\r\n            escapeHTML(this.orgName);\r\n\r\n        // if (Taxon.showVernacular) {\r\n        //     if (vernacularMatched) {\r\n        //         return (acceptedTaxon) ?\r\n        //             `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>` +\r\n        //             ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n        //             :\r\n        //             `<q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q><wbr> <span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n        //             ;\r\n        //     } else {\r\n        //         return (acceptedTaxon) ?\r\n        //             `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''\r\n        //             } = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n        //             :\r\n        //             `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>${this.vernacular ? ` <wbr><q class=\"taxon-vernacular\">${escapeHTML(this.vernacular)}</q>` : ''}`\r\n        //             ;\r\n        //     }\r\n        // } else {\r\n        //     return (acceptedTaxon) ?\r\n        //         `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${this.authority}</span>` +\r\n        //         ` = <span class=\"italictaxon\">${acceptedTaxon.nameString}${acceptedTaxon.qualifier ? ` <span class=\"taxon-qualifier\">${acceptedTaxon.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(acceptedTaxon.authority)}</span>`\r\n        //         :\r\n        //         `<span class=\"italictaxon\">${this.nameString}${this.qualifier ? ` <span class=\"taxon-qualifier\">${this.qualifier}</span>` : ''}</span> <span class=\"taxauthority\">${escapeHTML(this.authority)}</span>`\r\n        //         ;\r\n        // }\r\n    }\r\n}\n\nclass ResponseFactory {\r\n    static responses = {};\r\n\r\n    /**\r\n     *\r\n     * @param {FormData} formData\r\n     * @returns {LocalResponse}\r\n     */\r\n    static fromPostedData(formData) {\r\n        /**\r\n         * the object that will be saved to IndexedDb\r\n         *\r\n         * this needs to be in scope for several stages of the promise chain\r\n         * @type {{[saved]: string, [type]: string, [imageId]: string, [surveyId]: string, [occurrenceId]: string, [image]: file, [projectId]: number, saveState: string }}\r\n         */\r\n        const toSaveLocally = {\r\n            saveState: SAVE_STATE_LOCAL // mark as not saved externally\r\n        };\r\n\r\n        for(let pair of formData.entries()) {\r\n            toSaveLocally[pair[0]] = pair[1];\r\n        }\r\n\r\n        if (!toSaveLocally.type) {\r\n            throw new Error('Missing type in form data.');\r\n        }\r\n\r\n        if (ResponseFactory.responses.hasOwnProperty(toSaveLocally.type)) {\r\n            return new ResponseFactory.responses[toSaveLocally.type](toSaveLocally, {});\r\n        } else {\r\n            throw new Error(`Unrecognised post type '${toSaveLocally.type}'`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {{}} returnedToClient\r\n     */\r\n    static fromPostResponse(returnedToClient) {\r\n        if (!returnedToClient) {\r\n            throw new Error('Invalid empty post response.');\r\n        }\r\n\r\n        if (!returnedToClient.type) {\r\n            throw new Error('Missing type in returned response.');\r\n        }\r\n\r\n        if (ResponseFactory.responses.hasOwnProperty(returnedToClient.type)) {\r\n            console.log(`in fromPostResponse returning a ${returnedToClient.type}`);\r\n            return new ResponseFactory.responses[returnedToClient.type]({}, returnedToClient);\r\n        } else {\r\n            throw new Error(`Unrecognised post type '${returnedToClient.type}'`);\r\n        }\r\n    }\r\n}\n\nfunction packageClientResponse (returnedToClient) {\r\n    const headers = new Headers;\r\n    headers.set('Content-Type', 'application/json');\r\n\r\n    return new Response(\r\n        JSON.stringify(returnedToClient),\r\n        {\r\n            status: returnedToClient.error ? 500 : 200,\r\n            headers\r\n        });\r\n}\n\nclass LocalResponse {\r\n    toSaveLocally;\r\n    returnedToClient;\r\n\r\n    /**\r\n     * @type {Response}\r\n     */\r\n    prebuiltResponse;\r\n\r\n    failureErrorMessage = 'Failed to save a local copy on your device.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    constructor(toSaveLocally, returnedToClient) {\r\n        this.toSaveLocally = toSaveLocally;\r\n        this.returnedToClient = returnedToClient;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Response} prebuiltResponse\r\n     * @returns this\r\n     */\r\n    setPrebuiltResponse(prebuiltResponse) {\r\n        this.prebuiltResponse = prebuiltResponse;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<Response>}\r\n     */\r\n    storeLocally() {\r\n        return localforage.setItem(this.localKey(), this.toSaveLocally).then(() => {\r\n                console.log(`Stored object ${this.localKey()} locally`);\r\n                return this.prebuiltResponse ? this.prebuiltResponse : packageClientResponse(this.returnedToClient);\r\n            },\r\n            (reason) => {\r\n                console.log(`Failed to store object ${this.localKey()} locally`);\r\n                console.log({reason});\r\n                this.returnedToClient.error = this.failureErrorMessage;\r\n                this.returnedToClient.errorHelp = this.failureErrorHelp;\r\n\r\n                return packageClientResponse(this.returnedToClient);\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * @return {string}\r\n     */\r\n    localKey () {\r\n        throw new Error(`LocalKey must be implemented in a subclass for ${this.toSaveLocally.type}`);\r\n    }\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     * @abstract\r\n     */\r\n    populateClientResponse() {\r\n    }\r\n}\n\nclass ImageResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store image.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.id = this.toSaveLocally.imageId ? this.toSaveLocally.imageId : this.toSaveLocally.id;\r\n        this.returnedToClient.imageId = this.toSaveLocally.imageId ? this.toSaveLocally.imageId : this.toSaveLocally.id;\r\n        this.returnedToClient.type = 'image';\r\n        this.returnedToClient.surveyId = this.toSaveLocally.surveyId;\r\n        this.returnedToClient.created = parseInt(this.toSaveLocally.created, 10); // stamps from server always take precedence\r\n        this.returnedToClient.modified = parseInt(this.toSaveLocally.modified, 10);\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted;\r\n        this.returnedToClient.projectId = parseInt(this.toSaveLocally.projectId, 10);\r\n        this.returnedToClient.context = this.toSaveLocally.context;\r\n\r\n        if (this.toSaveLocally.context !== 'survey') {\r\n            this.returnedToClient.occurrenceId = this.toSaveLocally.occurrenceId;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.surveyId = this.returnedToClient.surveyId;\r\n        this.toSaveLocally.type = 'image';\r\n        this.toSaveLocally.imageId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.imageId; // hedging\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.imageId; // hedging\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = (this.returnedToClient.deleted === true || this.returnedToClient.deleted === 'true');\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n        this.toSaveLocally.context = this.returnedToClient.context;\r\n\r\n        if (this.returnedToClient.context !== 'survey') {\r\n            this.toSaveLocally.occurrenceId = this.returnedToClient.occurrenceId;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `image.${this.toSaveLocally.imageId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.image = ImageResponse;\r\n    }\r\n}\n\nclass SurveyResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store survey.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.surveyId = this.toSaveLocally.id || this.toSaveLocally.surveyId; // hedging\r\n        this.returnedToClient.id = this.toSaveLocally.id ? this.toSaveLocally.id : this.toSaveLocally.surveyId; // hedging\r\n        this.returnedToClient.baseSurveyId = this.toSaveLocally.baseSurveyId || this.returnedToClient.id;\r\n        this.returnedToClient.type = 'survey';\r\n        this.returnedToClient.attributes = this.toSaveLocally.attributes;\r\n        this.returnedToClient.created = this.toSaveLocally.created; // stamps from server always take precedence\r\n        this.returnedToClient.modified = this.toSaveLocally.modified;\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted;\r\n        this.returnedToClient.projectId = this.toSaveLocally.projectId;\r\n        this.returnedToClient.userId = this.toSaveLocally.userId || '';\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.surveyId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.surveyId;\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.surveyId;\r\n        this.toSaveLocally.baseSurveyId = this.returnedToClient.baseSurveyId || this.toSaveLocally.id;\r\n        this.toSaveLocally.type = 'survey';\r\n        this.toSaveLocally.attributes = this.returnedToClient.attributes;\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = this.returnedToClient.deleted;\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n        this.toSaveLocally.userId = this.returnedToClient.userId || '';\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `survey.${this.toSaveLocally.surveyId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.survey = SurveyResponse;\r\n    }\r\n}\n\nclass OccurrenceResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store occurrence.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.id = this.toSaveLocally.occurrenceId ? this.toSaveLocally.occurrenceId : this.toSaveLocally.id;\r\n        this.returnedToClient.occurrenceId = this.toSaveLocally.occurrenceId ? this.toSaveLocally.occurrenceId : this.toSaveLocally.id;\r\n        this.returnedToClient.type = 'occurrence';\r\n        this.returnedToClient.surveyId = this.toSaveLocally.surveyId;\r\n        this.returnedToClient.attributes = this.toSaveLocally.attributes;\r\n        this.returnedToClient.created = parseInt(this.toSaveLocally.created, 10); // stamps from server always take precedence\r\n        this.returnedToClient.modified = parseInt(this.toSaveLocally.modified, 10);\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted;\r\n        this.returnedToClient.projectId = parseInt(this.toSaveLocally.projectId, 10);\r\n        this.returnedToClient.userId = this.toSaveLocally.userId || '';\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.occurrenceId = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.occurrenceId; // hedging\r\n        this.toSaveLocally.id = this.returnedToClient.id ? this.returnedToClient.id : this.returnedToClient.occurrenceId; // hedging\r\n        this.toSaveLocally.type = 'occurrence';\r\n        this.toSaveLocally.surveyId = this.returnedToClient.surveyId;\r\n        this.toSaveLocally.attributes = this.returnedToClient.attributes;\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = (this.returnedToClient.deleted === true || this.returnedToClient.deleted === 'true');\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n        this.toSaveLocally.userId = this.returnedToClient.userId || '';\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `occurrence.${this.toSaveLocally.occurrenceId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.occurrence = OccurrenceResponse;\r\n    }\r\n}\n\nclass TrackResponse extends LocalResponse {\r\n    failureErrorMessage = 'Failed to store tracking data.';\r\n    failureErrorHelp = 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n        'It wasn\\'t possible to save a temporary copy on your device. Perhaps there is insufficient space? ' +\r\n        'Please try to re-establish a network connection and try again.';\r\n\r\n    /**\r\n     * called to build the response to the post that is returned to the client\r\n     * in the absence of the remote server\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateClientResponse() {\r\n        this.returnedToClient.surveyId = this.toSaveLocally.surveyId;\r\n        this.returnedToClient.deviceId = this.toSaveLocally.deviceId;\r\n        this.returnedToClient.type = 'track';\r\n        this.returnedToClient.attributes = this.toSaveLocally.attributes;\r\n        this.returnedToClient.created = this.toSaveLocally.created; // stamps from server always take precedence\r\n        this.returnedToClient.modified = this.toSaveLocally.modified;\r\n        this.returnedToClient.saveState = SAVE_STATE_LOCAL;\r\n        this.returnedToClient.deleted = this.toSaveLocally.deleted || '';\r\n        this.returnedToClient.projectId = this.toSaveLocally.projectId;\r\n        this.returnedToClient.userId = this.toSaveLocally.userId || '';\r\n        this.returnedToClient.pointIndex = this.toSaveLocally.pointIndex;\r\n        this.returnedToClient.points = this.toSaveLocally.points;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * called to mirror a response from the server locally\r\n     *\r\n     * @returns {this}\r\n     */\r\n    populateLocalSave() {\r\n        this.toSaveLocally.surveyId = this.returnedToClient.surveyId;\r\n        this.toSaveLocally.deviceId = this.returnedToClient.deviceId;\r\n        this.toSaveLocally.type = 'track';\r\n        this.toSaveLocally.attributes = this.returnedToClient.attributes;\r\n        this.toSaveLocally.created = parseInt(this.returnedToClient.created, 10); // stamps from server always take precedence\r\n        this.toSaveLocally.modified = parseInt(this.returnedToClient.modified, 10);\r\n        this.toSaveLocally.saveState = SAVE_STATE_SERVER;\r\n        this.toSaveLocally.deleted = this.returnedToClient.deleted;\r\n        this.toSaveLocally.projectId = parseInt(this.returnedToClient.projectId, 10);\r\n        this.toSaveLocally.userId = this.returnedToClient.userId || '';\r\n        this.toSaveLocally.pointIndex = parseInt(this.returnedToClient.pointIndex, 10);\r\n        this.toSaveLocally.points = this.returnedToClient.points; // may eventually want to truncate this to save local space\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    localKey() {\r\n        return `track.${this.toSaveLocally.surveyId}.${this.toSaveLocally.deviceId}`;\r\n    }\r\n\r\n    static register() {\r\n        ResponseFactory.responses.track = TrackResponse;\r\n    }\r\n}\n\n// service worker for BSBI app\r\n\r\n\r\nclass BSBIServiceWorker {\r\n\r\n    /**\r\n     * @var {Array.<string>}\r\n     */\r\n    URL_CACHE_SET;\r\n\r\n    /**\r\n     * @var {string}\r\n     */\r\n    CACHE_VERSION;\r\n\r\n    /**\r\n     * @var {string}\r\n     */\r\n    DATA_CACHE_VERSION;\r\n\r\n    /**\r\n     * @var {RegExp}\r\n     */\r\n    SERVICE_WORKER_DATA_URL_MATCHES;\r\n\r\n    /**\r\n     *\r\n     * @param {{\r\n     *  forageName : string,\r\n     *  postPassThroughWhitelist : RegExp,\r\n     *  postImageUrlMatch : RegExp,\r\n     *  getImageUrlMatch : RegExp,\r\n     *  interceptUrlMatches : RegExp,\r\n     *  [dataUrlMatches] : RegExp,\r\n     *  ignoreUrlMatches : RegExp,\r\n     *  staticUrlMatches : RegExp|null,\r\n     *  passThroughNoCache : RegExp,\r\n     *  indexUrl : string,\r\n     *  urlCacheSet : Array.<string>,\r\n     *  version : string,\r\n     *  [dataVersion] : string\r\n     * }} configuration\r\n     */\r\n    initialise(configuration) {\r\n        if (!Promise.prototype.finally) {\r\n            Promise.prototype.finally = function (callback) { // must use 'function' here rather than arrow, due to this binding requirement\r\n                return this.then(callback)\r\n                    .catch(callback);\r\n            };\r\n        }\r\n\r\n        ImageResponse.register();\r\n        SurveyResponse.register();\r\n        OccurrenceResponse.register();\r\n        TrackResponse.register();\r\n\r\n        this.CACHE_VERSION = `version-1.0.3.1701702419-${configuration.version}`;\r\n        this.DATA_CACHE_VERSION = `bsbi-data-${configuration.dataVersion || configuration.version}`;\r\n\r\n        Model.bsbiAppVersion = configuration.version;\r\n\r\n        const POST_PASS_THROUGH_WHITELIST = configuration.postPassThroughWhitelist;\r\n        const POST_IMAGE_URL_MATCH = configuration.postImageUrlMatch;\r\n        const GET_IMAGE_URL_MATCH = configuration.getImageUrlMatch;\r\n        const SERVICE_WORKER_INTERCEPT_URL_MATCHES = configuration.interceptUrlMatches;\r\n        const SERVICE_WORKER_IGNORE_URL_MATCHES = configuration.ignoreUrlMatches;\r\n        const SERVICE_WORKER_PASS_THROUGH_NO_CACHE = configuration.passThroughNoCache;\r\n\r\n        this.SERVICE_WORKER_DATA_URL_MATCHES = configuration.dataUrlMatches || /^NO_MATCHING$/;\r\n\r\n        /**\r\n         * Urls that should be cached, with no need for automatic refresh\r\n         *\r\n         * @type {RegExp|null}\r\n         */\r\n        const SERVICE_WORKER_STATIC_URL_MATCHES= configuration.staticUrlMatches;\r\n        const INDEX_URL = configuration.indexUrl;\r\n\r\n        this.URL_CACHE_SET = configuration.urlCacheSet;\r\n\r\n        localforage.config({\r\n            name: configuration.forageName\r\n        });\r\n\r\n        self.addEventListener(\"message\", (event) => {\r\n                console.log({\"Message received\": event.data});\r\n\r\n                switch (event.data.action) {\r\n                    case 'recache':\r\n                        event.waitUntil(this.handleRecacheMessage(event.data.url));\r\n                        break;\r\n                }\r\n            }\r\n        );\r\n\r\n        // On install, cache some resources.\r\n        self.addEventListener('install', (evt) => {\r\n            console.log('BSBI app service worker is being installed.');\r\n\r\n            // noinspection JSIgnoredPromiseFromCall\r\n            self.skipWaiting();\r\n\r\n            // Ask the service worker to keep installing until the returning promise\r\n            // resolves.\r\n            evt.waitUntil(\r\n                this.precache()\r\n                    // see https://serviceworke.rs/immediate-claim_service-worker_doc.html\r\n                    // .finally(() => {\r\n                    //     console.log(\"Service worker skip waiting after precache.\");\r\n                    //\r\n                    //     return self.skipWaiting();\r\n                    // })\r\n            );\r\n        });\r\n\r\n        self.addEventListener('activate', (event) => {\r\n            console.log({'service worker activate event' : event});\r\n\r\n            event.waitUntil(\r\n                self.clients.matchAll({\r\n                    includeUncontrolled: true\r\n                }).then((clientList) => {\r\n                    const urls = clientList.map((client) => {\r\n                        return client.url;\r\n                    });\r\n                    console.log('[ServiceWorker] Matching clients:', urls.join(', '));\r\n                }).then(() => caches.keys())\r\n                    .then((cacheNames) => {\r\n                        return Promise.all(\r\n                            cacheNames.map((cacheName) => {\r\n                                // test for 'version' prefix to avoid deleting mapbox tiles\r\n                                if (cacheName.startsWith('version') && cacheName !== this.CACHE_VERSION) {\r\n                                    console.log('[ServiceWorker] Deleting old code cache:', cacheName);\r\n                                    return caches.delete(cacheName);\r\n                                }\r\n\r\n                                if (cacheName.startsWith('bsbi-data') && cacheName !== this.DATA_CACHE_VERSION) {\r\n                                    console.log('[ServiceWorker] Deleting old data cache:', cacheName);\r\n                                    return caches.delete(cacheName);\r\n                                }\r\n                            })\r\n                        );\r\n                    }).then(() => {\r\n                        console.log('[ServiceWorker] Claiming clients for version', this.CACHE_VERSION);\r\n                        return self.clients.claim();\r\n                    })\r\n                );\r\n            });\r\n\r\n\r\n        // // see https://davidwalsh.name/background-sync\r\n        // // https://developers.google.com/web/updates/2015/12/background-sync\r\n        // self.addEventListener('sync', function(event) {\r\n        //\r\n        // });\r\n\r\n        // On fetch, use cache but update the entry with the latest contents\r\n        // from the server.\r\n        self.addEventListener('fetch', /** @param {FetchEvent} evt */ (evt) => {\r\n            //console.log(`The service worker is serving: '${evt.request.url}'`);\r\n\r\n            evt.preventDefault();\r\n\r\n            if (evt.request.method === 'POST') {\r\n                //console.log(`Got a post request`);\r\n\r\n                //if (evt.request.url.match(POST_PASS_THROUGH_WHITELIST)) {\r\n                if (POST_PASS_THROUGH_WHITELIST.test(evt.request.url)) {\r\n                    //console.log(`Passing through whitelisted post request for: ${evt.request.url}`);\r\n                    evt.respondWith(fetch(evt.request));\r\n                } else if (SERVICE_WORKER_PASS_THROUGH_NO_CACHE.test(evt.request.url)) {\r\n                    //console.log(`Passing through nocache list post request for: ${evt.request.url}`);\r\n                    evt.respondWith(fetch(evt.request));\r\n                } else {\r\n                    //if (evt.request.url.match(POST_IMAGE_URL_MATCH)) {\r\n                    if (POST_IMAGE_URL_MATCH.test(evt.request.url)) {\r\n                        //console.log(`Got an image post request: '${evt.request.url}'`);\r\n                        this.handle_image_post(evt);\r\n                    } else {\r\n                        //console.log(`Got post request: '${evt.request.url}'`);\r\n                        this.handle_post(evt);\r\n                    }\r\n                }\r\n            } else {\r\n                // test whether this is a direct link in to a page that should be substituted by\r\n                // the single page app\r\n\r\n                // console.log(`about to test url '${evt.request.url}'`);\r\n\r\n                if (SERVICE_WORKER_INTERCEPT_URL_MATCHES.test(evt.request.url) &&\r\n                    !SERVICE_WORKER_IGNORE_URL_MATCHES.test(evt.request.url)\r\n                ) {\r\n                    // serving single page app instead\r\n                    console.log(`redirecting to the root of the SPA for '${evt.request.url}'`);\r\n                    let spaRequest = new Request(INDEX_URL);\r\n                    evt.respondWith(this.fromCache(spaRequest));\r\n\r\n                    // don't need to check for fresh, stale is fine here\r\n                    //evt.waitUntil(this.update(spaRequest));\r\n                } else if (evt.request.url.match(GET_IMAGE_URL_MATCH)) {\r\n                    console.log(`request is for an image '${evt.request.url}'`);\r\n                    this.handleImageFetch(evt);\r\n                } else if (SERVICE_WORKER_PASS_THROUGH_NO_CACHE.test(evt.request.url)) {\r\n                    // typically for external content that can't/shouldn't be cached, e.g. MapBox tiles (which mapbox stores directly in the cache itself)\r\n                    evt.respondWith(fetch(evt.request));\r\n                } else if (SERVICE_WORKER_STATIC_URL_MATCHES?.test(evt.request.url)) {\r\n                    // typically for content that won't change\r\n                    evt.respondWith(this.fromCache(evt.request));\r\n                } else {\r\n                    console.log(`request is for non-image '${evt.request.url}'`);\r\n                    // You can use `respondWith()` to answer immediately, without waiting for the\r\n                    // network response to reach the service worker...\r\n                    evt.respondWith(this.fromCache(evt.request));\r\n                    // ...and `waitUntil()` to prevent the worker from being killed until the\r\n                    // cache is updated.\r\n                    evt.waitUntil(this.update(evt.request));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * used to handle small posts (not images)\r\n     * attempts remote save first then caches locally\r\n     *\r\n     * @param {FetchEvent} evt\r\n     */\r\n    handle_post(evt) {\r\n        let clonedRequest;\r\n        try {\r\n            clonedRequest = evt.request.clone();\r\n        } catch (e) {\r\n            console.log('Failed to clone request.');\r\n            console.log({'Cloning error': e});\r\n        }\r\n\r\n        evt.respondWith(fetch(evt.request)\r\n            .then((response) => {\r\n                // would get here if the server responds at all, but need to check that the response is ok (not a server error)\r\n                if (response.ok) {\r\n                    return Promise.resolve(response)\r\n                        .then((response) => {\r\n                            // save the response locally\r\n                            // before returning it to the client\r\n\r\n                            console.log('About to clone the json response.');\r\n\r\n                            return response.clone().json();\r\n                        })\r\n                        .then((jsonResponseData) => {\r\n                            console.log('Following successful remote post, about to save locally.');\r\n\r\n                            return ResponseFactory\r\n                                .fromPostResponse(jsonResponseData)\r\n                                .setPrebuiltResponse(response)\r\n                                .populateLocalSave()\r\n                                .storeLocally();\r\n                        })\r\n                        .catch((error) => {\r\n                            // for some reason local storage failed, after a successful server save\r\n                            console.log({'local storage failed' : error});\r\n\r\n                            return Promise.resolve(response); // pass through the server response\r\n                        });\r\n                } else {\r\n                    console.log(`Failed to save, moving on to attempt IndexedDb`);\r\n                    return Promise.reject('Failed to save to server.');\r\n                }\r\n            })\r\n            .catch( (reason) => {\r\n                    console.log({'post fetch failed (probably no network)': reason});\r\n\r\n                    // would get here if the network is down\r\n                    // or if got invalid response from the server\r\n\r\n                    console.log(`post fetch failed (probably no network), (reason: ${reason})`);\r\n                    //console.log({'post failure reason' : reason});\r\n\r\n                    // /**\r\n                    //  * simulated result of post, returned as JSON body\r\n                    //  * @type {{surveyId: string, occurrenceId: string, imageId: string, saveState: string, [error]: string, [errorHelp]: string}}\r\n                    //  */\r\n                    // let returnedToClient = {};\r\n\r\n                    return clonedRequest.formData()\r\n                        .then((formData) => {\r\n                                console.log('got to form data handler');\r\n                                //console.log({formData});\r\n\r\n                                return ResponseFactory\r\n                                    .fromPostedData(formData)\r\n                                    .populateClientResponse()\r\n                                    .storeLocally();\r\n                            }, (reason) => {\r\n                                console.log({'failed to read form data locally' : reason});\r\n\r\n                                /**\r\n                                 * simulated result of post, returned as JSON body\r\n                                 * @type {{[surveyId]: string, [occurrenceId]: string, [imageId]: string, [saveState]: string, [error]: string, [errorHelp]: string}}\r\n                                 */\r\n                                let returnedToClient = {\r\n                                    error: 'Failed to process posted response data. (internal error)',\r\n                                    errorHelp: 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n                                        'It wasn\\'t possible to save a temporary copy on your device. (an unexpected error occurred) ' +\r\n                                        'Please try to re-establish a network connection and try again.'\r\n                                };\r\n\r\n                                return packageClientResponse(returnedToClient);\r\n                            }\r\n                        );\r\n                }\r\n            ));\r\n    }\r\n\r\n    /**\r\n     * used to handle image posts, which need to respond quickly even if the network is slow\r\n     * attempts local cache first then saves out to network\r\n     *\r\n     * @param {FetchEvent} event\r\n     */\r\n    handle_image_post(event) {\r\n        let clonedRequest;\r\n\r\n        console.log('posting image');\r\n\r\n        try {\r\n            clonedRequest = event.request.clone();\r\n        } catch (e) {\r\n            console.log('Failed to clone request.');\r\n            console.log({'Cloning error': e});\r\n        }\r\n\r\n        // send back a quick response to the client from local storage (before the server request completes)\r\n        event.respondWith(\r\n            clonedRequest.formData()\r\n                .then((formData) => {\r\n                        console.log({'got to image form data handler' : formData});\r\n                        //console.log({formData});\r\n\r\n                        return ResponseFactory\r\n                            .fromPostedData(formData)\r\n                            .populateClientResponse()\r\n                            .storeLocally()\r\n                            .then((response) => {\r\n\r\n                                // separately send data to the server, but response goes to client before this completes\r\n                                // am unsure if the return from the wait until part ever reaches the client\r\n                                event.waitUntil(fetch(event.request)\r\n                                    .then((response) => {\r\n                                            console.log('posting image to server in waitUntil part of fetch cycle');\r\n\r\n                                            // would get here if the server responds at all, but need to check that the response is ok (not a server error)\r\n                                            if (response.ok) {\r\n                                                console.log('posted image to server in waitUntil part of fetch cycle: got OK response');\r\n\r\n                                                return Promise.resolve(response)\r\n                                                    .then((response) => {\r\n                                                        // save the response locally\r\n                                                        // before returning it to the client\r\n\r\n                                                        return response.clone().json();\r\n                                                    })\r\n                                                    .then((jsonResponseData) => {\r\n                                                        return ResponseFactory\r\n                                                            .fromPostResponse(jsonResponseData)\r\n                                                            .setPrebuiltResponse(response)\r\n                                                            .populateLocalSave()\r\n                                                            .storeLocally();\r\n                                                    })\r\n                                                    .catch((error) => {\r\n                                                        // for some reason local storage failed, after a successful server save\r\n                                                        console.log({error});\r\n\r\n                                                        return Promise.resolve(response); // pass through the server response\r\n                                                    });\r\n                                            } else {\r\n                                                console.log('posted image to server in waitUntil part of fetch cycle: got Error response');\r\n\r\n                                                /**\r\n                                                 * simulated result of post, returned as JSON body\r\n                                                 * @type {{[surveyId]: string, [occurrenceId]: string, [imageId]: string, [saveState]: string, [error]: string, [errorHelp]: string}}\r\n                                                 */\r\n                                                let returnedToClient = {\r\n                                                    error: 'Failed to save posted response data. (internal error)',\r\n                                                    errorHelp: 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n                                                        'It wasn\\'t possible to save a temporary copy on your device. (an unexpected error occurred) ' +\r\n                                                        'Please try to re-establish a network connection and try again.'\r\n                                                };\r\n\r\n                                                return packageClientResponse(returnedToClient);\r\n                                            }\r\n                                        }, () => {\r\n                                            console.log('Rejected image post fetch from server - implies network is down');\r\n                                        }\r\n                                    ));\r\n\r\n                                return response;\r\n                            });\r\n                    }, (reason) => {\r\n                        console.log('failed to read form data locally');\r\n                        console.log({reason});\r\n\r\n                        /**\r\n                         * simulated result of post, returned as JSON body\r\n                         * @type {{[surveyId]: string, [occurrenceId]: string, [imageId]: string, [saveState]: string, [error]: string, [errorHelp]: string}}\r\n                         */\r\n                        let returnedToClient = {\r\n                            error: 'Failed to process posted response data. (internal error)',\r\n                            errorHelp: 'Your internet connection may have failed (or there could be a problem with the server). ' +\r\n                                'It wasn\\'t possible to save a temporary copy on your device. (an unexpected error occurred) ' +\r\n                                'Please try to re-establish a network connection and try again.'\r\n                        };\r\n\r\n                        return packageClientResponse(returnedToClient);\r\n                    }\r\n                )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Open a cache and use `addAll()` with an array of assets to add all of them\r\n     * to the cache. Return a promise resolving when all the assets are added.\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    precache() {\r\n        return caches.open(this.CACHE_VERSION).then((cache) => {\r\n            return cache.addAll(this.URL_CACHE_SET);\r\n        }).catch((error) => {\r\n            console.log({'Precache failed result' : error});\r\n            return Promise.resolve();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open the cache where the assets were stored and search for the requested\r\n     * resource. Notice that in case of no matching, the promise still resolves,\r\n     * but with `undefined` as value.\r\n     *\r\n     * @param {Request} request\r\n     * @param {boolean} tryRemoteFallback\r\n     * @param {number} remoteTimeoutMilliseconds (default 0 for no forced timeout)\r\n     * @returns {Promise<Response | Promise<Response>>}\r\n     */\r\n    fromCache(request, tryRemoteFallback= true, remoteTimeoutMilliseconds = 0) {\r\n        //console.log('attempting fromCache response');\r\n\r\n        let cacheName;\r\n\r\n        if (this.SERVICE_WORKER_DATA_URL_MATCHES.test(request.url)) {\r\n            cacheName = this.DATA_CACHE_VERSION;\r\n        } else {\r\n            cacheName = this.CACHE_VERSION;\r\n        }\r\n\r\n        return caches.open(cacheName).then((cache) => {\r\n            //console.log('cache is open');\r\n\r\n            return cache.match(request).then((cachedResponse) => {\r\n                console.log(cachedResponse ?\r\n                    `cache matched ${request.url}`\r\n                    :\r\n                    `no cache match for ${request.url}`);\r\n\r\n                return cachedResponse || (tryRemoteFallback && this.update(request, remoteTimeoutMilliseconds)); // return cache match or if not cached then go out to network (and then locally cache the response)\r\n\r\n                // // see https://developer.chrome.com/docs/workbox/caching-strategies-overview/\r\n                // return cachedResponse || fetch(new Request(request, {mode: 'cors', credentials: 'omit'})).then((fetchedResponse) => {\r\n                //     // Add the network response to the cache for future visits.\r\n                //     // Note: we need to make a copy of the response to save it in\r\n                //     // the cache and use the original as the request response.\r\n                //     cache.put(request, fetchedResponse.clone());\r\n                //\r\n                //     // Return the network response\r\n                //     return fetchedResponse;\r\n                // });\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Special case response for images\r\n     * attempt to serve from local cache first,\r\n     * if that fails then go out to network\r\n     * finally see if there is an image in indexeddb\r\n     *\r\n     * @param {FetchEvent} evt\r\n     */\r\n    handleImageFetch(evt) {\r\n        // tryRemoteFallback set to false to ensure a rapid response to client when bad network, at the cost of no access to remotely compressed image\r\n\r\n        evt.respondWith(this.fromCache(evt.request, true, 5000).then((response) => {\r\n                //console.log('In handleImageFetch promise');\r\n\r\n                // response may be a 404\r\n                if (response && response.ok) {\r\n                    console.info('Responding with image from cache (or remotely if no cache).');\r\n                    return response;\r\n                } else {\r\n                    // not cached and no network access\r\n                    // try to respond from local storage\r\n\r\n                    const url = evt.request.url;\r\n                    console.info(`Attempting image match for '${url}'`);\r\n\r\n                    const matches = url.match(/imageid=([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12})/);\r\n\r\n                    if (matches) {\r\n                        const imageId = matches[1];\r\n                        console.info(`Returning image match for '${url}' from local database`);\r\n                        return this.imageFromLocalDatabase(imageId);\r\n                    } else {\r\n                        console.error(`Failed to match image id in url '${url}'`);\r\n                    }\r\n                }\r\n            })\r\n                .catch((error) => {\r\n                    const url = evt.request.url;\r\n                    console.log({'caught' : error});\r\n                    console.log(`In catch following failed network fetch, attempting image match for '${url}'`);\r\n\r\n                    const matches = url.match(/imageid=([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12})/);\r\n\r\n                    if (matches) {\r\n                        const imageId = matches[1];\r\n                        console.log(`(via catch) Returning image match for '${url}' from local database`);\r\n                        return this.imageFromLocalDatabase(imageId);\r\n                    } else {\r\n                        console.error(`(via catch) Failed to match image id in url '${url}'`);\r\n                        return Promise.reject(null);\r\n                    }\r\n                })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} imageId\r\n     * @returns {Promise}\r\n     */\r\n    imageFromLocalDatabase(imageId) {\r\n        const image = new OccurrenceImage();\r\n\r\n        console.info('attempting retrieval of image data from local database');\r\n\r\n        return Model.retrieveFromLocal(imageId, image).then((image) => {\r\n            console.log(`Retrieved image '${imageId}' from indexeddb.`);\r\n            if (image.file) {\r\n                const headers = new Headers();\r\n                headers.append('Content-Type', image.file.type);\r\n\r\n                return new Response(image.file, {\r\n                    \"status\": 200,\r\n                    \"statusText\": \"OK image response from IndexedDb\"\r\n                });\r\n            } else {\r\n                console.error(`No local file object associated with retrieved image '${imageId}' from indexeddb.`);\r\n                return Promise.reject(`No local file object associated with retrieved image '${imageId}' from indexeddb.`);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param url\r\n     */\r\n    handleRecacheMessage(url) {\r\n        let cacheName;\r\n\r\n        if (this.SERVICE_WORKER_DATA_URL_MATCHES.test(url)) {\r\n            cacheName = this.DATA_CACHE_VERSION;\r\n        } else {\r\n            cacheName = this.CACHE_VERSION;\r\n        }\r\n\r\n        return caches.open(cacheName).then((cache) => {\r\n            return cache.add(url);\r\n        }).catch((error) => {\r\n            console.error({'Precache failed result' : error});\r\n            return Promise.resolve();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update consists in opening the cache, performing a network request and\r\n     * storing the new response data.\r\n     *\r\n     * @param {Request} request\r\n     * @param {number} timeout request timeout in milliseconds (or 0 for no timeout)\r\n     * @returns {Promise<Response>}\r\n     */\r\n    update(request, timeout = 0) {\r\n        let cacheName;\r\n\r\n        if (this.SERVICE_WORKER_DATA_URL_MATCHES.test(request.url)) {\r\n            cacheName = this.DATA_CACHE_VERSION;\r\n        } else {\r\n            cacheName = this.CACHE_VERSION;\r\n        }\r\n\r\n        request = new Request(request, {mode: 'cors', credentials: 'omit'});\r\n\r\n        console.info(`Attempting fetch and cache update of ${request.url}`);\r\n\r\n        return caches.open(cacheName).then((cache) => {\r\n            let signalController;\r\n            let timeoutId;\r\n            const fetchOptions = {cache: \"no-cache\"};\r\n\r\n            if (timeout) {\r\n                signalController = new AbortController();\r\n                timeoutId = setTimeout(() => {\r\n                    signalController.abort();\r\n                    console.log(`User-define update fetch timeout expired after ${timeout} ms`);\r\n                }, timeout);\r\n                fetchOptions.signal = signalController.signal;\r\n            }\r\n\r\n            return fetch(request, fetchOptions).then((response) => {\r\n                if (timeoutId) {\r\n                    clearTimeout(timeoutId);\r\n                    timeoutId = null;\r\n                }\r\n\r\n                if (response.ok) {\r\n                    console.info(`(re-)caching ${request.url}`);\r\n                    return cache.put(request, response).then(() => {\r\n                        return cache.match(request);\r\n                    });\r\n                } else {\r\n                    console.error(`Request during cache update failed for ${request.url}`);\r\n                    console.error({'failed cache response': response});\r\n                    return Promise.reject('Request during cache update failed, not caching.');\r\n                }\r\n            }).catch((error) => {\r\n                if (timeoutId) {\r\n                    clearTimeout(timeoutId);\r\n                    timeoutId = null;\r\n                }\r\n\r\n                console.log(`Cache attempt failed for ${request.url}: error was ${error}`);\r\n                return Promise.reject(`Cache attempt failed for ${request.url}: error was ${error}`);\r\n            });\r\n        });\r\n    }\r\n}\n\n/**\r\n *\r\n * @param {string} separator\r\n * @param {string} finalSeparator\r\n * @param {Array.<string>} list\r\n * @return string\r\n */\r\nfunction formattedImplode(separator, finalSeparator, list) {\r\n    if (list.length > 2) {\r\n        const last = list.pop();\r\n        return `${list.join(separator + ' ')} ${finalSeparator} ${last}`;\r\n    } else {\r\n        return list.join(` ${finalSeparator} `);\r\n    }\r\n}\n\nexport { App, AppController, BSBIServiceWorker, DeviceType, EventHarness, InternalAppError, Logger, Model, NotFoundError, Occurrence, OccurrenceImage, Party, SORT_ORDER_CULTIVAR, SORT_ORDER_GENUS, SORT_ORDER_SPECIES, StaticContentController, Survey, SurveyPickerController, Taxon, TaxonError, Track, UUID_REGEX, escapeHTML, formattedImplode, uuid };\n//# sourceMappingURL=index.js.map\n","// service worker for Nyph app\r\n\r\n// based around the 'Cache and update' recipe along with many modifications\r\n// see https://serviceworke.rs\r\n\r\n'use strict';\r\n\r\nimport {BSBIServiceWorker} from \"bsbi-app-framework\";\r\nimport {FORAGE_NAME} from \"../framework/NyphApp\";\r\n\r\n// noinspection JSUnusedLocalSymbols,ES6ConvertVarToLetConst\r\n//var BsbiDb = BsbiDb || {scriptVersions: { TaxonNames : [] } };\r\n\r\n// mainly aiming to determine whether '/app/' or '/testapp/'\r\nlet pathPrefix = location.pathname.split('/')[1];\r\n\r\n// kill after 2023-03-01 to prevent the app perpetuating itself\r\n// if ((new Date).toJSON().slice(0,10) >= '2023-03-01') {\r\n//     throw new Error(\"Built-in expiry date has passed for NYPH.\");\r\n// }\r\n\r\nconst serviceWorker = new BSBIServiceWorker();\r\nserviceWorker.initialise({\r\n    forageName : FORAGE_NAME,\r\n\r\n    postPassThroughWhitelist : /^https:\\/\\/__DOMAIN_REGEX__\\/loadsurveys.php|^https:\\/\\/__DOMAIN_REGEX__\\/javascriptErrorLog\\.php/,\r\n    postImageUrlMatch : /^https:\\/\\/__DOMAIN_REGEX__\\/saveimage.php/,\r\n    getImageUrlMatch : /^https:\\/\\/__DOMAIN_REGEX__\\/image\\.php/,\r\n    interceptUrlMatches : new RegExp(`^https://__DOMAIN_REGEX__/${pathPrefix}/|^https://__DOMAIN_REGEX__/${pathPrefix}$`),\r\n    ignoreUrlMatches : new RegExp(`^https://__DOMAIN_REGEX__/${pathPrefix}/app\\.m?js|^https://__DOMAIN_REGEX__/${pathPrefix}/serviceworker\\.m?js|^https://__DOMAIN_REGEX__/${pathPrefix}/manifest\\.webmanifest|^https://__DOMAIN_REGEX__/${pathPrefix}/index\\.html|^https://api\\.mapbox\\.com`),\r\n    staticUrlMatches : /(?:^https:\\/\\/(?:staticdatabase\\.bsbi\\.org|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com)|\\.(?:png|svg|ico|m?js)$)/,\r\n    indexUrl : `https://__DOMAIN__/${pathPrefix}/index.html`,\r\n\r\n    // postPassThroughWhitelist : /^https:\\/\\/__DOMAIN_REGEX__\\/loadsurveys.php/,\r\n    // postImageUrlMatch : /^https:\\/\\/__DOMAIN_REGEX__\\/saveimage.php/,\r\n    // getImageUrlMatch : /^https:\\/\\/__DOMAIN_REGEX__\\/image\\.php/,\r\n    // interceptUrlMatches : /^https:\\/\\/__DOMAIN_REGEX__\\/app\\/|^https:\\/\\/__DOMAIN_REGEX__\\/app$/,\r\n    // ignoreUrlMatches : /^https:\\/\\/__DOMAIN_REGEX__\\/app\\/app\\.js|^https:\\/\\/__DOMAIN_REGEX__\\/app\\/serviceworker\\.js|^https:\\/\\/__DOMAIN_REGEX__\\/app\\/manifest\\.webmanifest|^https:\\/\\/__DOMAIN_REGEX__\\/app\\/index\\.html|^https:\\/\\/api\\.mapbox\\.com/,\r\n    // indexUrl : 'https://__DOMAIN__/app/index.html',\r\n\r\n    urlCacheSet : [\r\n        './index.html',\r\n        './app.mjs?version=__BSBI_APP_VERSION__',\r\n        './manifest.webmanifest',\r\n        '/appcss/app.__BSBI_APP_VERSION__.css', // note no leading '.' - this is an absolute path\r\n        //'/appcss/theme.css',\r\n        //'/img/gwh_logo1_tsp.png',\r\n        '/img/icons/favicon-32x32.png',\r\n        '/img/icons/favicon-16x16.png',\r\n        '/img/icons/android-icon-192x192.png',\r\n        '/img/nyph_final@2x.png',\r\n        //'/img/icons/gwh_logo1_tsp-512x512.png',\r\n        //'/img/BSBIlong.png',\r\n        'https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Round',\r\n        //'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css',\r\n        //'/js/taxonnames.js.php',\r\n        'https://staticdatabase.bsbi.org/js/taxaexpanded.mjs',\r\n        //'https://code.jquery.com/jquery-3.3.1.slim.min.js',\r\n        //'https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js',\r\n        //'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js',\r\n        'https://fonts.googleapis.com/css2?family=Gentium+Basic&display=swap',\r\n        // am not caching files under api.mapbox.com\r\n        // so instead serve this locally\r\n        //'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.2/mapbox-gl-geocoder.min.js',\r\n        //'/js/mapbox-gl-geocoder-v4.7.2.min.js'\r\n    ],\r\n    passThroughNoCache : /^https:\\/\\/api\\.mapbox\\.com|^https:\\/\\/events\\.mapbox\\.com|^https:\\/\\/browser-update\\.org/,\r\n    version : '__BSBI_APP_VERSION__',\r\n    dataVersion : '__BSBI_APP_DATA_VERSION__'\r\n});\r\n","import {App} from \"bsbi-app-framework\";\r\n//import {NotFoundView} from \"bsbi-app-framework-view\";\r\n\r\nexport const PROJECT_ID_NYPH = 2;\r\n\r\nexport const FORAGE_NAME = 'Nyph App2023';\r\n\r\nexport class NyphApp extends App {\r\n    /**\r\n     * @type {number}\r\n     */\r\n    projectId = PROJECT_ID_NYPH;\r\n\r\n    static forageName = FORAGE_NAME;\r\n\r\n    //static LOAD_SURVEYS_ENDPOINT = '/loadsurveys.php';\r\n\r\n    //static EVENT_OCCURRENCE_ADDED = 'occurrenceadded';\r\n    //static EVENT_SURVEYS_CHANGED = 'surveyschanged';\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    static devMode = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.initialiseSurveyFieldsMirror();\r\n    }\r\n\r\n    _coreSurveyFields = [\r\n        'recorder',\r\n        'email'\r\n    ];\r\n\r\n    _coreSurveyFieldCache = [\r\n\r\n    ];\r\n\r\n    /**\r\n     * Sets handlers to allow certain survey fields to be duplicated from last current survey to new survey\r\n     * used for email address and primary recorder name\r\n     */\r\n    initialiseSurveyFieldsMirror() {\r\n        this.addListener(App.EVENT_NEW_SURVEY, () => {\r\n            console.log('Try to initialise core fields of new survey.');\r\n            if (this._coreSurveyFieldCache) {\r\n                console.log({'Using cached survey values' : this._coreSurveyFieldCache});\r\n                for (let key of this._coreSurveyFields) {\r\n                    this.currentSurvey.attributes[key] = this._coreSurveyFieldCache[key];\r\n                }\r\n            }\r\n        });\r\n\r\n        this.addListener(App.EVENT_SURVEYS_CHANGED, () => {\r\n            if (this.currentSurvey && !this.currentSurvey.isNew) {\r\n                for (let key of this._coreSurveyFields) {\r\n                    this._coreSurveyFieldCache[key] = this.currentSurvey.attributes[key];\r\n                }\r\n\r\n                console.log({'Saved core survey fields' : this._coreSurveyFieldCache});\r\n            }\r\n        });\r\n\r\n        this.addListener(App.EVENT_RESET_SURVEYS, () => {\r\n            this._coreSurveyFieldCache = [];\r\n            console.log('Have reset core survey field cache.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A convoluted approach is used to avoid requirement to import NotFoundView\r\n     * (as that bloats the service worker, by pulling in the full view library and bootstrap)\r\n     *\r\n     * @type {NotFoundView}\r\n     */\r\n    notFoundViewObject;\r\n\r\n    notFoundView() {\r\n        this.notFoundViewObject.display();\r\n    }\r\n\r\n    // notFoundView() {\r\n    //     const view = new NotFoundView();\r\n    //     view.display();\r\n    // }\r\n}\r\n"],"names":["deg2rad","Math","PI","rad2deg","LatLng","lat","lng","constructor","this","_transform","lon","a","e","h","a2","e2","xp","yp","zp","xr","yr","zr","s","sf","v","sqrt","sin","x","cos","y","z","xrot","yrot","zrot","hx","hy","hz","atan","p","errvalue","lat0","abs","_Marc","bf0","n","phi0","phi","LatLngWGS84","super","LatLngGB","to_WGS84","eSquared","sinPhi","lambda","rx","ry","xB","yB","zB","phiN","i","sinPhiN","from_wgs84","latLngWGS84","radWGlat","radWGlon","newLon","newLat","LatLngIE","latLngRadians","phip","lambdap","latlng","LatLngCI","GridCoords","to_latLng","to_gridref","precision","to_hectad","static","from_latlng","os","_from_gb_latlng","is_gb_hectad","osI","_from_ie_latlng","osCi","_from_ci_latlng","latLng","lam","f0","af0","slat2","nu","rho","eta2","IV","clat3","pow","tlat2","tan","V","clat5","tlat4","VI","east","I","II","III","IIIA","north","GridCoordsGB","round","GridCoordsIE","GridCoordsCI","calculate_tetrad","easting","northing","tetradLetters","charAt","floor","tetradLetter","toString","_e_n_to_gr","letters","eString","nString","length","logPrecision","log10","slice","gridCoords","country","hundredkmE","hundredkmN","firstLetter","index","secondLetter","String","fromCharCode","gbHectads","indexOf","E0","E","N","M","phiPrime","sinphiPrime2","tanphiPrime2","secphiPrime","etaSquared","VII","VIII","IX","X","XI","XII","XIIA","k0","eccSquared","e1","eccPrimeSquared","mu","phi1Rad","N1","T1","C1","R1","D","Lat","Long","irishGrid","Et","phid","_initial_lat","tlat6","clatm1","convert_to_wgs","substring","n0","phi1","phi2","ind","GridRef","J","P","U","Z","T","Y","C","H","S","B","G","L","R","W","A","F","K","Q","NW","NE","SW","SE","O","preciseGridRef","hectad","tetrad","quadrant","quadrantCode","error","errorMessage","centrePoint","centre","halfLength","squareIntersectsPoint","radius","_checkOverlap","Xc","Yc","X1","Y1","X2","Y2","Dx","max","min","Dy","set_tetrad","Error","getNormalizedPrecision","rawPrecision","minPrecision","toHtml","significantPrecision","formattedGr","columns","halfNumLen","interleave","gridRefString","includes","match","o","GridRefCI","parse_well_formed","fromString","rawGridRef","enl","trimmedLocality","replace","toUpperCase","tetradCode","test","quadrantOffsets","hasOwnProperty","gridref_string_to_e_n_l","tetradOffsets","gridRef","northOffset","chars","console","log","ref","parseInt","GridRefGB","parse_wellformed_gb_gr_string_no_tetrads","parse_gr_string_without_tetrads","matches","letterMapping","char1","char2","GridRefIE","char","_IE_GRID_LETTERS","parser","cleanRef","EventHarness","_eventListeners","addWeakListener","eventName","handlerObject","handlerMethodName","constructionParam","weakWrapped","WeakRef","handlerFunction","context","invocationParam","weakObject","deref","warn","push","addListener","handler","removeListener","handle","destructor","fireEvent","param","f","arguments","STOP_PROPAGATION","commonjsGlobal","globalThis","window","global","self","getDefaultExportFromCjs","__esModule","Object","prototype","call","commonjsRequire","path","localforage$1","exports","localforage","t","r","u","code","l","_dereq_","module","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","values","Array","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","navigator","userAgent","platform","hasFetch","fetch","IDBKeyRange","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","matchedEdge","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","_defaultConfig","k","getItem","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","isNaN","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","uuid","random","UUID_REGEX","SAVE_STATE_LOCAL","SAVE_STATE_SERVER","Model","_id","_savedRemotely","savedRemotely","savedFlag","EVENT_SAVED_REMOTELY","id","_savedLocally","deleted","createdStamp","modifiedStamp","projectId","isPristine","Date","now","unsaved","newId","queuePost","formData","post","_tasks","finally","_next","shift","SAVE_ENDPOINT","method","body","ok","clone","json","responseData","saveState","created","modified","retrieveFromLocal","modelObject","TYPE","descriptor","_parseDescriptor","_parseAttributes","attributes","_parseSavedState","userId","touch","evaluateCompletionStatus","formSectionProperties","validity","requiredFieldsPresent","property","validator","field","isValid","escapeHTML","text","textArea","innerHTML","pre","DeviceType","DEVICE_TYPE_UNCHECKED","getDeviceType","_deviceType","userAgentData","mobile","DEVICE_TYPE_MOBILE","DEVICE_TYPE_IMMOBILE","DEVICE_TYPE_UNKNOWN","Track","points","pointIndex","surveyId","deviceId","Map","_surveyChangeListenerHandle","reset","_tracks","trackingIsActive","_currentlyTrackedSurveyId","lastPingStamp","registerApp","app","_app","App","EVENT_CURRENT_SURVEY_CHANGED","survey","currentSurvey","previouslyTrackedSurvey","oldTrack","_currentlyTrackedDeviceId","surveys","removeSurveyChangeListener","endCurrentSeries","save","casual","isToday","baseSurveyId","_trackSurvey","EVENT_CANCEL_WATCHED_GPS_USER_REQUEST","EVENT_WATCH_GPS_USER_REQUEST","track","surveyTracks","set","has","initialiseNewTracker","registerSurvey","ping","position","addPoint","timestamp","series","startPointSeries","coords","longitude","latitude","pointSeries","lastEntry","forceSave","FormData","bsbiAppVersion","Survey","EVENT_MODIFIED","_surveyOccurrencesChangeListenerHandle","EVENT_OCCURRENCES_CHANGED","isNew","hasAppModifiedListener","_track","_baseSurveyId","geoReference","georef","rawString","source","currentTetradSubunit","summaryReference","sampleUnit","selection","_infer_square_ref_from_survey_ref","newRef","getGeoContext","monad","date","prettyDate","today","toISOString","valueOf","place","formChangedHandler","params","form","updateModelFromContent","conditionallyValidateForm","catch","setAttribute","attributeName","geoRef","vc","surveyGridUnit","hectare","interleavedGridRef","generateSurveyName","summarySquarePrecision","summarizeTetrad","surveyName","_createdDateString","summaryGridRef","_summarySquareString","fallBackPrecision","createdDate","dateString","toLocaleString","year","month","day","extantOccurrenceKeys","Set","countRecords","duplicate","newAttributes","newSurvey","assign","structuredClone","InternalAppError","TaxonError","Taxon","nameString","canonical","hybridCanonical","acceptedEntityId","qualifier","authority","vernacular","vernacularRoot","badVernacular","used","sortOrder","parentIds","nationalStatus","GB","IE","CI","rareScarceStatus","rprStatus","occurrenceCoverage","vcPresence","nyphRanking","setTaxa","taxa","rawTaxa","initialiseTaxa","sourceUrl","stamp","serviceWorker","registration","active","action","url","fromId","raw","taxon","RPR_KEY","GR_PRESENCE_KEY","VC_PRESENCE_KEY","seekRankedAncestor","maxSortOrder","minSortOrder","excludeAggregates","excludeCultivars","parentStack","parentId","formattedHTML","vernacularMatched","acceptedTaxon","Occurrence","taxonId","changeApplied","occurrenceId","OccurrenceImage","file","getUrl","fromFile","image","placeholder","placeholderObject","imageCache","imageLink","width","height","attributesString","className","Logger","message","line","column","errorObj","trace","doc","implementation","createDocument","stack","location","href","search","hash","session","appName","appVersion","cache","credentials","headers","redirect","referrerPolicy","XMLSerializer","serializeToString","logError","_router","_containerEl","controllers","currentControllerHandle","routeHistory","occurrences","_currentSurvey","CURRENT_SURVEY_KEY_NAME","SESSION_KEY_NAME","DEVICE_ID_KEY_NAME","_deviceId","initialiseDeviceId","forageSetItem","forageGetItem","forageRemoveItem","getLastSurveyId","clearLastSurveyId","layout","setLocalForageName","clearCurrentSurvey","router","containerId","el","getElementById","container","registerController","controller","registerRoute","initialise","notFound","query","notFoundView","on","pause","navigate","resume","display","syncAll","saveRoute","lastRoute","lastRouteResolved","markAllNotPristine","occurrenceTuple","setLayout","setApp","addSurvey","EVENT_SURVEYS_CHANGED","haveExtantOccurrences","occurrence","addOccurrence","EVENT_OCCURRENCE_LOADED","refreshFromServer","surveyIds","LOAD_SURVEYS_ENDPOINT","jsonResponse","promises","object","_conditionallyReplaceObject","externalVersion","localVersion","seekKeys","storedObjectKeys","RESERVED_KEY_NAMES","split","fastReturn","_syncLocalUnsaved","EVENT_ALL_SYNCED_TO_SERVER","failedResult","EVENT_SYNC_ALL_FAILED","queryLocalSurveys","queryFilters","surveyTuple","structuredSurvey","defaultCasual","excludeSurveyId","surveyKey","occurrenceKey","imageKey","restoreOccurrences","targetSurveyId","neverAddBlank","_restoreOccurrenceImp","lastSurveyId","localSurvey","surveyFetchingPromises","_restoreSurveyFromLocal","setNewSurvey","EVENT_LIST_LENGTH_CHANGED","EVENT_NEW_SURVEY","addAndSetSurvey","addNewOccurrence","pristineAttributes","add","EVENT_OCCURRENCE_ADDED","setAsCurrent","userIdFilter","EVENT_SURVEY_LOADED","superAdmin","occurrenceFetchingPromises","imageFetchingPromises","occurrenceImageKey","occurrenceImage","clearLocalForage","ResponseFactory","fromPostedData","toSaveLocally","pair","entries","responses","fromPostResponse","returnedToClient","packageClientResponse","Headers","Response","LocalResponse","prebuiltResponse","failureErrorMessage","failureErrorHelp","setPrebuiltResponse","storeLocally","localKey","errorHelp","populateClientResponse","ImageResponse","imageId","populateLocalSave","register","SurveyResponse","OccurrenceResponse","TrackResponse","pathPrefix","pathname","URL_CACHE_SET","CACHE_VERSION","DATA_CACHE_VERSION","SERVICE_WORKER_DATA_URL_MATCHES","configuration","dataVersion","POST_PASS_THROUGH_WHITELIST","postPassThroughWhitelist","POST_IMAGE_URL_MATCH","postImageUrlMatch","GET_IMAGE_URL_MATCH","getImageUrlMatch","SERVICE_WORKER_INTERCEPT_URL_MATCHES","interceptUrlMatches","SERVICE_WORKER_IGNORE_URL_MATCHES","ignoreUrlMatches","SERVICE_WORKER_PASS_THROUGH_NO_CACHE","passThroughNoCache","dataUrlMatches","SERVICE_WORKER_STATIC_URL_MATCHES","staticUrlMatches","INDEX_URL","indexUrl","urlCacheSet","forageName","addEventListener","event","waitUntil","handleRecacheMessage","evt","skipWaiting","precache","clients","matchAll","includeUncontrolled","clientList","urls","map","client","join","caches","cacheNames","cacheName","startsWith","delete","claim","request","respondWith","handle_image_post","handle_post","spaRequest","Request","fromCache","handleImageFetch","update","clonedRequest","jsonResponseData","addAll","tryRemoteFallback","remoteTimeoutMilliseconds","cachedResponse","imageFromLocalDatabase","caught","statusText","timeout","signalController","timeoutId","fetchOptions","AbortController","abort","signal","clearTimeout","RegExp"],"mappings":"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"}